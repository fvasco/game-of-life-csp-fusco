--- Execution profile ---
Total samples       : 63535
unknown_Java        : 243 (0.38%)
not_walkable_Java   : 5930 (9.33%)
deoptimization      : 1 (0.00%)

--- 15113044022 ns (2.38%), 1511 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$57.0x00000008010358a0.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-5 tid=165248]

--- 15052946879 ns (2.37%), 1505 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$57.0x00000008010358a0.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-6 tid=165250]

--- 15023257961 ns (2.36%), 1502 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$57.0x00000008010358a0.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-3 tid=165247]

--- 14962982519 ns (2.35%), 1496 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$57.0x00000008010358a0.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-2 tid=165246]

--- 14592716499 ns (2.30%), 1459 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$57.0x00000008010358a0.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-8 tid=165252]

--- 14522558040 ns (2.29%), 1452 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$57.0x00000008010358a0.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-1 tid=165245]

--- 14352811631 ns (2.26%), 1435 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$57.0x00000008010358a0.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-4 tid=165249]

--- 14022703305 ns (2.21%), 1402 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$57.0x00000008010358a0.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-7 tid=165251]

--- 3510790717 ns (0.55%), 351 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-8 tid=165252]

--- 3440898230 ns (0.54%), 344 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-1 tid=165245]

--- 3380686698 ns (0.53%), 338 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-4 tid=165249]

--- 3350748672 ns (0.53%), 335 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-6 tid=165250]

--- 3210524136 ns (0.51%), 321 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-5 tid=165248]

--- 3140635875 ns (0.49%), 314 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-5 tid=165248]

--- 3120850369 ns (0.49%), 312 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-7 tid=165251]

--- 3120663960 ns (0.49%), 312 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-2 tid=165246]

--- 3050669710 ns (0.48%), 305 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-3 tid=165247]

--- 3030407817 ns (0.48%), 303 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LockedSingleValue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-3 tid=165247]

--- 3010318259 ns (0.47%), 301 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-6 tid=165250]

--- 2950519287 ns (0.46%), 295 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-7 tid=165251]

--- 2940468738 ns (0.46%), 294 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-2 tid=165246]

--- 2930467122 ns (0.46%), 293 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-1 tid=165245]

--- 2840865280 ns (0.45%), 284 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-3 tid=165247]

--- 2800456242 ns (0.44%), 280 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LockedSingleValue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-8 tid=165252]

--- 2760472511 ns (0.43%), 276 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-4 tid=165249]

--- 2640557899 ns (0.42%), 264 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-8 tid=165252]

--- 2630569820 ns (0.41%), 263 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-4 tid=165249]

--- 2620449365 ns (0.41%), 262 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LockedSingleValue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-1 tid=165245]

--- 2610503091 ns (0.41%), 261 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LockedSingleValue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-6 tid=165250]

--- 2610475368 ns (0.41%), 261 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LockedSingleValue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-2 tid=165246]

--- 2600557091 ns (0.41%), 260 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-5 tid=165248]

--- 2560244416 ns (0.40%), 256 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LockedSingleValue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-5 tid=165248]

--- 2550473499 ns (0.40%), 255 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-1 tid=165245]

--- 2490504128 ns (0.39%), 249 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LockedSingleValue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-7 tid=165251]

--- 2450384493 ns (0.39%), 245 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LockedSingleValue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-4 tid=165249]

--- 2410473207 ns (0.38%), 241 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-8 tid=165252]

--- 2360532923 ns (0.37%), 236 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-1 tid=165245]

--- 2340427832 ns (0.37%), 234 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-2 tid=165246]

--- 2330384615 ns (0.37%), 233 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-6 tid=165250]

--- 2280314033 ns (0.36%), 228 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-3 tid=165247]

--- 2060413585 ns (0.32%), 206 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-7 tid=165251]

--- 1800332599 ns (0.28%), 180 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-4 tid=165249]

--- 1790259575 ns (0.28%), 179 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-8 tid=165252]

--- 1770395473 ns (0.28%), 177 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-8 tid=165252]

--- 1760266762 ns (0.28%), 176 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-3 tid=165247]

--- 1730331740 ns (0.27%), 173 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-5 tid=165248]

--- 1710222598 ns (0.27%), 171 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-1 tid=165245]

--- 1680296657 ns (0.26%), 168 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-8 tid=165252]

--- 1620365195 ns (0.25%), 162 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-2 tid=165246]

--- 1620176833 ns (0.25%), 162 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-7 tid=165251]

--- 1560304562 ns (0.25%), 156 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-6 tid=165250]

--- 1540341923 ns (0.24%), 154 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-4 tid=165249]

--- 1510224792 ns (0.24%), 151 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-6 tid=165250]

--- 1500245991 ns (0.24%), 150 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-7 tid=165251]

--- 1460323208 ns (0.23%), 146 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-3 tid=165247]

--- 1430274919 ns (0.23%), 143 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-2 tid=165246]

--- 1410240071 ns (0.22%), 141 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-3 tid=165247]

--- 1390186630 ns (0.22%), 139 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-6 tid=165250]

--- 1380261897 ns (0.22%), 138 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-4 tid=165249]

--- 1370424700 ns (0.22%), 137 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-1 tid=165245]

--- 1370340078 ns (0.22%), 137 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-7 tid=165251]

--- 1360424989 ns (0.21%), 136 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-5 tid=165248]

--- 1330284044 ns (0.21%), 133 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-2 tid=165246]

--- 1330264598 ns (0.21%), 133 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-5 tid=165248]

--- 1330251167 ns (0.21%), 133 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-5 tid=165248]

--- 1330203823 ns (0.21%), 133 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-8 tid=165252]

--- 1320328989 ns (0.21%), 132 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-7 tid=165251]

--- 1310309884 ns (0.21%), 131 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-3 tid=165247]

--- 1300228374 ns (0.20%), 130 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-6 tid=165250]

--- 1290142380 ns (0.20%), 129 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-1 tid=165245]

--- 1280286942 ns (0.20%), 128 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-7 tid=165251]

--- 1270293552 ns (0.20%), 127 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-1 tid=165245]

--- 1260303399 ns (0.20%), 126 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-2 tid=165246]

--- 1260226521 ns (0.20%), 126 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-4 tid=165249]

--- 1230269491 ns (0.19%), 123 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-5 tid=165248]

--- 1230200964 ns (0.19%), 123 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-3 tid=165247]

--- 1220234120 ns (0.19%), 122 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-1 tid=165245]

--- 1220144061 ns (0.19%), 122 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-5 tid=165248]

--- 1220078081 ns (0.19%), 122 samples
  [ 0] Channel.put
  [ 1] Cell.calculateNextState
  [ 2] Cell.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-3 tid=165247]

--- 1210275590 ns (0.19%), 121 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-2 tid=165246]

--- 1210229119 ns (0.19%), 121 samples
  [ 0] Channel.put
  [ 1] Cell.calculateNextState
  [ 2] Cell.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-8 tid=165252]

--- 1190264948 ns (0.19%), 119 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-8 tid=165252]

--- 1180261048 ns (0.19%), 118 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-7 tid=165251]

--- 1180251492 ns (0.19%), 118 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-3 tid=165247]

--- 1180193880 ns (0.19%), 118 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-6 tid=165250]

--- 1170333693 ns (0.18%), 117 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-4 tid=165249]

--- 1170234464 ns (0.18%), 117 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-2 tid=165246]

--- 1160154169 ns (0.18%), 116 samples
  [ 0] Channel.put
  [ 1] Cell.calculateNextState
  [ 2] Cell.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-6 tid=165250]

--- 1150301352 ns (0.18%), 115 samples
  [ 0] __memcpy_sse2_unaligned
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-4 tid=165249]

--- 1150220508 ns (0.18%), 115 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-7 tid=165251]

--- 1150197221 ns (0.18%), 115 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-1 tid=165245]

--- 1140274362 ns (0.18%), 114 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-4 tid=165249]

--- 1140271754 ns (0.18%), 114 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-3 tid=165247]

--- 1140259408 ns (0.18%), 114 samples
  [ 0] Channel.put
  [ 1] Cell.calculateNextState
  [ 2] Cell.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-7 tid=165251]

--- 1130289346 ns (0.18%), 113 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-7 tid=165251]

--- 1130227510 ns (0.18%), 113 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-6 tid=165250]

--- 1110247746 ns (0.17%), 111 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LockedSingleValue.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run
  [30] [ForkJoinPool-1-worker-6 tid=165250]

--- 1100328843 ns (0.17%), 110 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-4 tid=165249]

--- 1100207418 ns (0.17%), 110 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-8 tid=165252]

--- 1100138460 ns (0.17%), 110 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-5 tid=165248]

--- 1090267689 ns (0.17%), 109 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-1 tid=165245]

--- 1090227207 ns (0.17%), 109 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-5 tid=165248]

--- 1090132319 ns (0.17%), 109 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-6 tid=165250]

--- 1090126299 ns (0.17%), 109 samples
  [ 0] Channel.put
  [ 1] Cell.calculateNextState
  [ 2] Cell.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-2 tid=165246]

--- 1080229267 ns (0.17%), 108 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-2 tid=165246]

--- 1080228122 ns (0.17%), 108 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-8 tid=165252]

--- 1080226612 ns (0.17%), 108 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-5 tid=165248]

--- 1070251700 ns (0.17%), 107 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-1 tid=165245]

--- 1070209344 ns (0.17%), 107 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-6 tid=165250]

--- 1070187740 ns (0.17%), 107 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run
  [ 6] [ForkJoinPool-1-worker-7 tid=165251]

--- 1070155105 ns (0.17%), 107 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-6 tid=165250]

--- 1050340030 ns (0.17%), 105 samples
  [ 0] __memcpy_sse2_unaligned
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-5 tid=165248]

--- 1040288457 ns (0.16%), 104 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-8 tid=165252]

--- 1040275872 ns (0.16%), 104 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LockedSingleValue.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run
  [30] [ForkJoinPool-1-worker-1 tid=165245]

--- 1040219329 ns (0.16%), 104 samples
  [ 0] Channel.put
  [ 1] Cell.calculateNextState
  [ 2] Cell.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-1 tid=165245]

--- 1020290155 ns (0.16%), 102 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run
  [ 6] [ForkJoinPool-1-worker-2 tid=165246]

--- 1020206842 ns (0.16%), 102 samples
  [ 0] Channel.put
  [ 1] Cell.calculateNextState
  [ 2] Cell.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-4 tid=165249]

--- 1020191344 ns (0.16%), 102 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] Cell$$Lambda$66.0x0000000801036bd0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$51.0x000000080103df08.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-6 tid=165250]

--- 1020113869 ns (0.16%), 102 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-2 tid=165246]

--- 1010267422 ns (0.16%), 101 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-7 tid=165251]

--- 1010234119 ns (0.16%), 101 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-7 tid=165251]

--- 1000162060 ns (0.16%), 100 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LockedSingleValue.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run
  [30] [ForkJoinPool-1-worker-8 tid=165252]

--- 1000139356 ns (0.16%), 100 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] Cell$$Lambda$66.0x0000000801036bd0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$51.0x000000080103df08.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-1 tid=165245]

--- 1000122819 ns (0.16%), 100 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] TickPerCell.waitTick
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-7 tid=165251]

--- 980258599 ns (0.15%), 98 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-3 tid=165247]

--- 980252414 ns (0.15%), 98 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run
  [ 6] [ForkJoinPool-1-worker-3 tid=165247]

--- 980181983 ns (0.15%), 98 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LockedSingleValue.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run
  [30] [ForkJoinPool-1-worker-4 tid=165249]

--- 980142731 ns (0.15%), 98 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] TickPerCell.waitTick
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-8 tid=165252]

--- 970245188 ns (0.15%), 97 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-8 tid=165252]

--- 960187182 ns (0.15%), 96 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] Cell$$Lambda$66.0x0000000801036bd0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$51.0x000000080103df08.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-4 tid=165249]

--- 960162227 ns (0.15%), 96 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-4 tid=165249]

--- 960120835 ns (0.15%), 96 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LockedSingleValue.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run
  [30] [ForkJoinPool-1-worker-3 tid=165247]

--- 960116913 ns (0.15%), 96 samples
  [ 0] VirtualThread.afterYield
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run
  [ 9] [ForkJoinPool-1-worker-6 tid=165250]

--- 960107485 ns (0.15%), 96 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-5 tid=165248]

--- 950199053 ns (0.15%), 95 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-5 tid=165248]

--- 950193306 ns (0.15%), 95 samples
  [ 0] Channel.put
  [ 1] Cell.calculateNextState
  [ 2] Cell.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-5 tid=165248]

--- 950117272 ns (0.15%), 95 samples
  [ 0] VirtualThread.afterYield
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run
  [ 9] [ForkJoinPool-1-worker-7 tid=165251]

--- 950115659 ns (0.15%), 95 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LockedSingleValue.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run
  [30] [ForkJoinPool-1-worker-5 tid=165248]

--- 940167564 ns (0.15%), 94 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] Cell$$Lambda$66.0x0000000801036bd0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$51.0x000000080103df08.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-8 tid=165252]

--- 930232710 ns (0.15%), 93 samples
  [ 0] __memcpy_sse2_unaligned
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-7 tid=165251]

--- 920089922 ns (0.14%), 92 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] Cell$$Lambda$66.0x0000000801036bd0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$51.0x000000080103df08.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-3 tid=165247]

--- 910249643 ns (0.14%), 91 samples
  [ 0] __memcpy_sse2_unaligned
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-8 tid=165252]

--- 910227983 ns (0.14%), 91 samples
  [ 0] __memcpy_sse2_unaligned
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-3 tid=165247]

--- 910198687 ns (0.14%), 91 samples
  [ 0] __memcpy_sse2_unaligned
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-2 tid=165246]

--- 910111236 ns (0.14%), 91 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] TickPerCell.waitTick
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-4 tid=165249]

--- 910101512 ns (0.14%), 91 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] Cell$$Lambda$66.0x0000000801036bd0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$51.0x000000080103df08.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-2 tid=165246]

--- 900247854 ns (0.14%), 90 samples
  [ 0] __memcpy_sse2_unaligned
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-1 tid=165245]

--- 890194243 ns (0.14%), 89 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-4 tid=165249]

--- 890190445 ns (0.14%), 89 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-2 tid=165246]

--- 890182853 ns (0.14%), 89 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-2 tid=165246]

--- 890182086 ns (0.14%), 89 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] TickPerCell.waitTick
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-3 tid=165247]

--- 890180028 ns (0.14%), 89 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LockedSingleValue.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run
  [30] [ForkJoinPool-1-worker-2 tid=165246]

--- 890120276 ns (0.14%), 89 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] Cell$$Lambda$66.0x0000000801036bd0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$51.0x000000080103df08.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-7 tid=165251]

--- 880084943 ns (0.14%), 88 samples
  [ 0] VirtualThread.afterYield
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run
  [ 9] [ForkJoinPool-1-worker-8 tid=165252]

--- 870235151 ns (0.14%), 87 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-4 tid=165249]

--- 870196973 ns (0.14%), 87 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-3 tid=165247]

--- 870196928 ns (0.14%), 87 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-6 tid=165250]

--- 870136881 ns (0.14%), 87 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run
  [ 6] [ForkJoinPool-1-worker-8 tid=165252]

--- 860161032 ns (0.14%), 86 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$53.0x0000000801035258.run
  [14] VirtualThread.run
  [15] VirtualThread$VThreadContinuation.lambda$new$0
  [16] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [17] Continuation.enter0
  [18] Continuation.enter
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103df08.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-6 tid=165250]

--- 860113169 ns (0.14%), 86 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$53.0x0000000801035258.run
  [14] VirtualThread.run
  [15] VirtualThread$VThreadContinuation.lambda$new$0
  [16] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [17] Continuation.enter0
  [18] Continuation.enter
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103df08.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-1 tid=165245]

--- 860097742 ns (0.14%), 86 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$53.0x0000000801035258.run
  [14] VirtualThread.run
  [15] VirtualThread$VThreadContinuation.lambda$new$0
  [16] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [17] Continuation.enter0
  [18] Continuation.enter
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103df08.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-7 tid=165251]

--- 860091853 ns (0.14%), 86 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$53.0x0000000801035258.run
  [14] VirtualThread.run
  [15] VirtualThread$VThreadContinuation.lambda$new$0
  [16] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [17] Continuation.enter0
  [18] Continuation.enter
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103df08.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-8 tid=165252]

--- 850221572 ns (0.13%), 85 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LockedSingleValue.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run
  [30] [ForkJoinPool-1-worker-7 tid=165251]

--- 850219330 ns (0.13%), 85 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-4 tid=165249]

--- 850162985 ns (0.13%), 85 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] Cell$$Lambda$66.0x0000000801036bd0.apply
  [13] ReferencePipeline$3$1.accept
  [14] ArrayList$ArrayListSpliterator.forEachRemaining
  [15] AbstractPipeline.copyInto
  [16] AbstractPipeline.wrapAndCopyInto
  [17] ReduceOps$ReduceOp.evaluateSequential
  [18] AbstractPipeline.evaluate
  [19] IntPipeline.reduce
  [20] IntPipeline.sum
  [21] Cell.calculateNextState
  [22] Cell.run
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$51.0x000000080103df08.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run
  [33] [ForkJoinPool-1-worker-5 tid=165248]

--- 840250454 ns (0.13%), 84 samples
  [ 0] VirtualThread.afterYield
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run
  [ 9] [ForkJoinPool-1-worker-4 tid=165249]

--- 840228386 ns (0.13%), 84 samples
  [ 0] __memcpy_sse2_unaligned
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-6 tid=165250]

--- 840187248 ns (0.13%), 84 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] TickPerCell.waitTick
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-6 tid=165250]

--- 840183145 ns (0.13%), 84 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run
  [ 6] [ForkJoinPool-1-worker-6 tid=165250]

--- 830170019 ns (0.13%), 83 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-3 tid=165247]

--- 830066552 ns (0.13%), 83 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run
  [ 6] [ForkJoinPool-1-worker-1 tid=165245]

--- 820164755 ns (0.13%), 82 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-6 tid=165250]

--- 810240038 ns (0.13%), 81 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-4 tid=165249]

--- 810146475 ns (0.13%), 81 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] TickPerCell.waitTick
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-2 tid=165246]

--- 810130126 ns (0.13%), 81 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run
  [ 6] [ForkJoinPool-1-worker-5 tid=165248]

--- 800173500 ns (0.13%), 80 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-1 tid=165245]

--- 800096973 ns (0.13%), 80 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$53.0x0000000801035258.run
  [14] VirtualThread.run
  [15] VirtualThread$VThreadContinuation.lambda$new$0
  [16] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [17] Continuation.enter0
  [18] Continuation.enter
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103df08.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-4 tid=165249]

--- 790245285 ns (0.12%), 79 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-1 tid=165245]

--- 790216549 ns (0.12%), 79 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$53.0x0000000801035258.run
  [14] VirtualThread.run
  [15] VirtualThread$VThreadContinuation.lambda$new$0
  [16] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [17] Continuation.enter0
  [18] Continuation.enter
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103df08.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-5 tid=165248]

--- 790160120 ns (0.12%), 79 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-2 tid=165246]

--- 790107813 ns (0.12%), 79 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] TickPerCell.waitTick
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-5 tid=165248]

--- 770165417 ns (0.12%), 77 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LockedSingleValue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-8 tid=165252]

--- 770153358 ns (0.12%), 77 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LockedSingleValue.take
  [11] Channel.take
  [12] TickPerCell.waitTick
  [13] Cell.notifyLiveness
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-1 tid=165245]

--- 740130710 ns (0.12%), 74 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$53.0x0000000801035258.run
  [14] VirtualThread.run
  [15] VirtualThread$VThreadContinuation.lambda$new$0
  [16] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [17] Continuation.enter0
  [18] Continuation.enter
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103df08.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-2 tid=165246]

--- 740106423 ns (0.12%), 74 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-7 tid=165251]

--- 740077404 ns (0.12%), 74 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-6 tid=165250]

--- 730131502 ns (0.11%), 73 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
  [ 2] Continuation.enterSpecial
  [ 3] Continuation.run
  [ 4] VirtualThread.runContinuation
  [ 5] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 6] ForkJoinTask$RunnableExecuteAction.exec
  [ 7] ForkJoinTask.doExec
  [ 8] ForkJoinPool$WorkQueue.topLevelExec
  [ 9] ForkJoinPool.scan
  [10] ForkJoinPool.runWorker
  [11] ForkJoinWorkerThread.run
  [12] [ForkJoinPool-1-worker-3 tid=165247]

--- 730114236 ns (0.11%), 73 samples
  [ 0] VirtualThread.afterYield
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run
  [ 9] [ForkJoinPool-1-worker-1 tid=165245]

--- 730073842 ns (0.11%), 73 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-8 tid=165252]

--- 720141097 ns (0.11%), 72 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run
  [ 6] [ForkJoinPool-1-worker-4 tid=165249]

--- 720125048 ns (0.11%), 72 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-7 tid=165251]

--- 710020072 ns (0.11%), 71 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LockedSingleValue.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$53.0x0000000801035258.run
  [14] VirtualThread.run
  [15] VirtualThread$VThreadContinuation.lambda$new$0
  [16] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [17] Continuation.enter0
  [18] Continuation.enter
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103df08.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-3 tid=165247]

--- 700104277 ns (0.11%), 70 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-3 tid=165247]

--- 690202991 ns (0.11%), 69 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-5 tid=165248]

--- 690162525 ns (0.11%), 69 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-3 tid=165247]

--- 690152678 ns (0.11%), 69 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LockedSingleValue.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-5 tid=165248]

--- 690141440 ns (0.11%), 69 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LockedSingleValue.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-4 tid=165249]

--- 680157381 ns (0.11%), 68 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LockedSingleValue.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-1 tid=165245]

--- 680144421 ns (0.11%), 68 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LockedSingleValue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$66.0x0000000801036bd0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-8 tid=165252]

--- 680104122 ns (0.11%), 68 samples
  [ 0] VirtualThread.compareAndSetState
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run
  [ 9] [ForkJoinPool-1-worker-8 tid=165252]

          ns  percent  samples  top
  ----------  -------  -------  ---
121413774930   19.11%    12139  Cell.lambda$notifyLiveness$0
 36395877748    5.73%     3639  AbstractQueuedSynchronizer.compareAndSetState
 32955594061    5.19%     3295  AbstractQueuedSynchronizer$ConditionObject.doSignal
 26285966787    4.14%     2628  Continuation::prepare_thaw(JavaThread*, bool)
 23724295757    3.73%     2372  ReduceOps$5ReducingSink.get
 19013673106    2.99%     1901  TickPerCell.lambda$tick$0
 17823253163    2.80%     1782  ReentrantLock$Sync.isHeldExclusively
 17282774748    2.72%     1728  VirtualThread.unmount
 16712957842    2.63%     1671  AbstractQueuedSynchronizer.signalNext
 15973298778    2.51%     1597  __memmove_sse2_unaligned_erms
 15742969293    2.48%     1574  AbstractQueuedSynchronizer.release
 15443235581    2.43%     1544  AbstractQueuedSynchronizer$ConditionObject.enableWait
 13502573148    2.12%     1350  VirtualThread.runContinuation
 13161904473    2.07%     1316  AbstractQueuedSynchronizer.acquire
 12572297355    1.98%     1257  System$2.setExtentLocalCache
 11992546548    1.89%     1199  LockedSingleValue.take
 10712403009    1.69%     1071  G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
 10701808721    1.68%     1070  ForkJoinPool$WorkQueue.push
  9361570082    1.47%      936  Channel.put
  8702270897    1.37%      870  __memcpy_sse2_unaligned
  8571596690    1.35%      857  AbstractQueuedSynchronizer.enqueue
  8431746930    1.33%      843  LockSupport.setCurrentBlocker
  8031603497    1.26%      803  ForkJoinTask$RunnableExecuteAction.exec
  7351074692    1.16%      735  VirtualThread.compareAndSetState
  7221144676    1.14%      722  Unsafe.getAndBitwiseAndInt
  6991343071    1.10%      699  ReentrantLock$NonfairSync.initialTryLock
  6450976764    1.02%      645  VirtualThread.afterYield
  6281091041    0.99%      628  VirtualThread.unpark
  6030814480    0.95%      603  ReentrantLock$Sync.tryRelease
  5410693198    0.85%      541  Unsafe.getAndBitwiseOrInt
  5380894265    0.85%      538  int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
  3890879432    0.61%      389  AbstractPipeline.<init>
  3880744389    0.61%      388  Dimensions.forEachRowCol
  3720553880    0.59%      372  ForkJoinPool$WorkQueue.tryPoll
  3690474656    0.58%      369  ForkJoinPool.scan
  3630680306    0.57%      363  VirtualThread.setCarrierThread
  3590662980    0.57%      359  Unsafe.compareAndSetBoolean
  3330631103    0.52%      333  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ul>::oop_access_barrier(oopDesc*, long, oopDesc*)
  3310225083    0.52%      331  ForkJoinPool$WorkQueue.casSlotToNull
  3290479696    0.52%      329  Continuation.yield0
  3070624334    0.48%      307  VirtualThread.mount
  3050653430    0.48%      305  G1BarrierSet::write_ref_field_post_slow(unsigned char volatile*)
  2970492057    0.47%      297  AbstractOwnableSynchronizer.setExclusiveOwnerThread
  2950582744    0.46%      295  LockedSingleValue.put
  2930614969    0.46%      293  SafepointMechanism::update_poll_values(JavaThread*)
  2820409064    0.44%      282  FreezeBase::freeze_fast_copy(stackChunkOopDesc*, int)
  2730318204    0.43%      273  Thread.setContinuation
  2620492751    0.41%      262  Thaw<Config<(oop_kind)0, G1BarrierSet> >::thaw_fast(stackChunkOopDesc*)
  2220322901    0.35%      222  VirtualThread.park
  2170528574    0.34%      217  VirtualThread.state
  2140408866    0.34%      214  vtable stub
  2010438225    0.32%      201  ForkJoinTask$AdaptedRunnableAction.<init>
  1920232145    0.30%      192  long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  1780445153    0.28%      178  AbstractQueuedSynchronizer.tryInitializeHead
  1710254856    0.27%      171  ForkJoinPool$WorkQueue.getAndClearSlot
  1470327256    0.23%      147  Continuation.run
  1160307930    0.18%      116  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)3, 286822ul>::oop_access_barrier(oopDesc*, long)
  1150107691    0.18%      115  Channel.take
  1140184242    0.18%      114  Thread.getContinuation
  1130267560    0.18%      113  ReentrantLock$Sync.lock
  1100470440    0.17%      110  AbstractQueuedSynchronizer$ConditionObject.await
  1050212852    0.17%      105  StreamOpFlag.fromCharacteristics
   980169726    0.15%       98  Continuation.yield
   970181707    0.15%       97  ContinuationEntry::flush_stack_processing(JavaThread*) const
   940227271    0.15%       94  ReferencePipeline$4.opWrapSink
   920191643    0.14%       92  AbstractQueuedSynchronizer$ConditionObject.signal
   850253175    0.13%       85  VirtualThread.setParkPermit
   850215833    0.13%       85  Object.<init>
   840127602    0.13%       84  AbstractOwnableSynchronizer.getExclusiveOwnerThread
   811532371    0.13%       81  _raw_spin_unlock_irqrestore_[k]
   730259838    0.11%       73  VirtualThread.submitRunContinuation
   689999380    0.11%       69  Cell.notifyLiveness
   650171020    0.10%       65  ForkJoinPool$WorkQueue.nextLocalTask
   650102095    0.10%       65  ForkJoinPool$WorkQueue.topLevelExec
   640111280    0.10%       64  ForkJoinPool.poolSubmit
   640093041    0.10%       64  ForkJoinTask.doExec
   590136251    0.09%       59  AbstractQueuedSynchronizer$ConditionNode.isReleasable
   590085959    0.09%       59  ArrayList$ArrayListSpliterator.<init>
   570112735    0.09%       57  ReferencePipeline$3.opWrapSink
   550028755    0.09%       55  Cont thaw
   520081899    0.08%       52  FreezeBase::freeze_fast_existing_chunk()
   500111260    0.08%       50  AbstractQueuedSynchronizer.setState
   480170406    0.08%       48  Sink$ChainedReference.begin
   450404321    0.07%       45  update_blocked_averages_[k]
   450098436    0.07%       45  Sink$ChainedReference.<init>
   440521080    0.07%       44  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
   430083924    0.07%       43  Cell.run
   430046013    0.07%       43  Cell.calculateNextState
   420083236    0.07%       42  VirtualThread.getAndSetParkPermit
   400107455    0.06%       40  Continuation.enterSpecial
   400016609    0.06%       40  LockSupport.unpark
   400016513    0.06%       40  oopDesc::address_field(int) const
   350108081    0.06%       35  AbstractQueuedSynchronizer.casTail
   340101512    0.05%       34  ReentrantLock.lock
   330022115    0.05%       33  Unsafe_AllocateInstance
   320003822    0.05%       32  ArrayList.forEach
   310093586    0.05%       31  StackWatermarkSet::lowest_watermark(JavaThread*)
   290037707    0.05%       29  VirtualThread.yieldContinuation
   279982908    0.04%       28  VirtualThread.getAndClearInterrupt
   270044637    0.04%       27  ForkJoinPool.awaitWork
   260061573    0.04%       26  StreamOpFlag.getMask
   250093065    0.04%       25  cont_doYield
   250072170    0.04%       25  ThreadPoolExecutor$Worker.tryRelease
   250023423    0.04%       25  ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
   240065210    0.04%       24  ForkJoinPool.signalWork
   240059398    0.04%       24  StackWatermarkSet::after_unwind(JavaThread*)
   239951305    0.04%       24  __tls_get_addr
   220045670    0.03%       22  ChannelsGrid$$Lambda$55.0x0000000801035680.accept
   190067098    0.03%       19  ForkJoinPool.runWorker
   190052403    0.03%       19  memcpy@plt
   180058123    0.03%       18  StackWatermarkSet::head(JavaThread*)
   180020487    0.03%       18  oopDesc::address_field_put(int, unsigned char*)
   180006995    0.03%       18  ForkJoinTask$AdaptedRunnableAction.exec
   160607701    0.03%       16  finish_task_switch.isra.0_[k]
   160018220    0.03%       16  MemAllocator::allocate() const
   150324052    0.02%       15  syscall_enter_from_user_mode_[k]
   150056371    0.02%       15  ThawBase::thaw_slow(stackChunkOopDesc*, bool)
   150028657    0.02%       15  Unsafe.allocateInstance
   150023029    0.02%       15  Integer.intValue
   140045977    0.02%       14  Sink$ChainedReference.end
   140023849    0.02%       14  ForkJoinTask.signalWaiters
   140006728    0.02%       14  System$2.unparkVirtualThread
   130142380    0.02%       13  _raw_spin_unlock_irq_[k]
   130061098    0.02%       13  FreezeBase::recurse_freeze_compiled_frame(frame&, frame&, int, bool)
   130024299    0.02%       13  ForkJoinPool.lazySubmit
   120131811    0.02%       12  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
   120019344    0.02%       12  AbstractQueuedSynchronizer$Node.<init>
   120016468    0.02%       12  JvmtiVMObjectAllocEventCollector::JvmtiVMObjectAllocEventCollector()
   120011712    0.02%       12  AbstractQueuedSynchronizer$Node.setPrevRelaxed
   110240643    0.02%       11  Unsafe_Park
   110031685    0.02%       11  Thread.clearInterrupt
   110020143    0.02%       11  PipelineHelper.<init>
   110016460    0.02%       11  itable stub
   100036407    0.02%       10  StreamSupport.stream
    90403974    0.01%        9  __futex_abstimed_wait_common
    90399832    0.01%        9  exit_to_user_mode_prepare_[k]
    90023386    0.01%        9  os::vm_page_size()
    90014560    0.01%        9  AbstractQueuedSynchronizer.getState
    90006993    0.01%        9  Continuation.mount
    80033057    0.01%        8  ForkJoinPool.execute
    80031303    0.01%        8  VirtualThread.setState
    80022315    0.01%        8  ThawBase::recurse_thaw_interpreted_frame(frame const&, frame&, int)
    80020566    0.01%        8  Cell$$Lambda$57.0x00000008010358a0.accept
    80018630    0.01%        8  void stackChunkOopDesc::fix_thawed_frame<SmallRegisterMap>(frame const&, SmallRegisterMap const*)
    79992836    0.01%        8  Thread.isInterrupted
    70433652    0.01%        7  ___pthread_cond_signal
    70400032    0.01%        7  do_futex_[k]
    70102980    0.01%        7  schedule_[k]
    70077320    0.01%        7  __schedule_[k]
    70027315    0.01%        7  Thread.interrupted
    70010922    0.01%        7  CodeCache::find_blob(void*)
    70006723    0.01%        7  Continuation.setMounted
    60054168    0.01%        6  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
    60040189    0.01%        6  get_futex_key_[k]
    60032092    0.01%        6  AbstractPipeline.wrapSink
    60022467    0.01%        6  __memset_avx2_unaligned_erms
    60021406    0.01%        6  JavaThread::threadObj() const
    60018978    0.01%        6  CodeHeap::find_blob_unsafe(void*) const
    60017435    0.01%        6  Collection.stream
    60014828    0.01%        6  __GI___pthread_getspecific
    60012543    0.01%        6  FreezeBase::recurse_freeze_interpreted_frame(frame&, frame&, int, bool)
    60009580    0.01%        6  VirtualThread$$Lambda$51.0x000000080103df08.run
    50195699    0.01%        5  I2C/C2I adapters
    50078191    0.01%        5  futex_q_lock_[k]
    50065905    0.01%        5  rebalance_domains_[k]
    50033313    0.01%        5  FreezeBase::finalize_freeze(frame const&, frame&, int)
    50026255    0.01%        5  futex_wake_[k]
    50014450    0.01%        5  InstanceKlass::check_valid_for_instantiation(bool, JavaThread*)
    50012271    0.01%        5  JvmtiObjectAllocEventCollector::JvmtiObjectAllocEventCollector()
    50003285    0.01%        5  ThawBase::finalize_thaw(frame&, int)
    49998094    0.01%        5  AbstractQueuedSynchronizer$Node.getAndUnsetStatus
    49993859    0.01%        5  AbstractQueuedSynchronizer$ConditionObject.canReacquire
    49990501    0.01%        5  freeze_epilog(JavaThread*, ContinuationWrapper&, freeze_result) [clone .part.0] [clone .isra.0]
    40233083    0.01%        4  futex_wait_[k]
    40231457    0.01%        4  __lll_lock_wake
    40212349    0.01%        4  Parker::park(bool, long)
    40097444    0.01%        4  G1CardSet::occupied() const
    40054243    0.01%        4  __x64_sys_futex_[k]
    40020121    0.01%        4  AbstractQueuedSynchronizer$ExclusiveNode.<init>
    40016920    0.01%        4  Method::record_gc_epoch()
    40012482    0.01%        4  pthread_mutex_trylock@@GLIBC_2.34
    40012170    0.01%        4  java_lang_Thread::get_thread_status(oopDesc*)
    40008700    0.01%        4  ForkJoinPool$WorkQueue.getAndSetAccess
    40004217    0.01%        4  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<2646116ul, G1BarrierSet>, (AccessInternal::BarrierType)0, 2646116ul>::oop_access_barrier(void*, oopDesc*)
    40003278    0.01%        4  ArrayList.elementAt
    40001839    0.01%        4  oopDesc::metadata_field(int) const
    40000505    0.01%        4  Freeze<Config<(oop_kind)0, G1BarrierSet> >::allocate_chunk(unsigned long)
    39995661    0.01%        4  TickPerCell.waitTick
    30591386    0.00%        3  GameOfLifeBenchmark_benchmark_jmhTest.benchmark_thrpt_jmhStub
    30264838    0.00%        3  __condvar_dec_grefs
    30259333    0.00%        3  Unsafe.park
    30258004    0.00%        3  Unsafe_Unpark
    30081844    0.00%        3  futex_hash_[k]
    30035049    0.00%        3  plist_add_[k]
    30027577    0.00%        3  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
    30021914    0.00%        3  Unsafe.unpark
    30014293    0.00%        3  FreezeBase::recurse_freeze(frame&, frame&, int, bool, bool)
    30012328    0.00%        3  Unsafe.getAndSetBoolean
    30012318    0.00%        3  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
    30010711    0.00%        3  ObjArrayAllocator::initialize(HeapWordImpl**) const
