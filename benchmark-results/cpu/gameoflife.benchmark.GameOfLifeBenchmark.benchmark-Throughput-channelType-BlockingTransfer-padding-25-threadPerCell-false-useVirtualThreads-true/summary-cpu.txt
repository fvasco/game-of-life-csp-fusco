--- Execution profile ---
Total samples       : 51483
unknown_Java        : 257 (0.50%)
not_walkable_Java   : 131 (0.25%)

--- 16112840002 ns (3.13%), 1610 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103e978.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-4 tid=121564]

--- 15551869959 ns (3.02%), 1554 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103e978.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-3 tid=121563]

--- 15241674085 ns (2.96%), 1523 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103e978.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-6 tid=121566]

--- 15211688831 ns (2.95%), 1520 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103e978.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-1 tid=121561]

--- 15141993136 ns (2.94%), 1513 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103e978.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-8 tid=121568]

--- 15011567097 ns (2.91%), 1500 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103e978.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-7 tid=121567]

--- 14991619921 ns (2.91%), 1498 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103e978.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-2 tid=121562]

--- 14981460474 ns (2.91%), 1497 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103e978.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-5 tid=121565]

--- 10196559041 ns (1.98%), 1019 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103e978.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-5 tid=121565]

--- 9796377726 ns (1.90%), 979 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103e978.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-4 tid=121564]

--- 9795804907 ns (1.90%), 979 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103e978.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-8 tid=121568]

--- 9745823945 ns (1.89%), 974 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103e978.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-2 tid=121562]

--- 9655546605 ns (1.87%), 965 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103e978.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-3 tid=121563]

--- 9585336849 ns (1.86%), 958 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103e978.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-7 tid=121567]

--- 9425477975 ns (1.83%), 942 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103e978.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-6 tid=121566]

--- 9245421473 ns (1.79%), 924 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103e978.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-1 tid=121561]

--- 4562661230 ns (0.89%), 456 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-3 tid=121563]

--- 4482636799 ns (0.87%), 448 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-8 tid=121568]

--- 4462574872 ns (0.87%), 446 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-5 tid=121565]

--- 4452345049 ns (0.86%), 445 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-1 tid=121561]

--- 4382420038 ns (0.85%), 438 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-7 tid=121567]

--- 4362540093 ns (0.85%), 436 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-6 tid=121566]

--- 4342669582 ns (0.84%), 434 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-4 tid=121564]

--- 4262485367 ns (0.83%), 426 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-2 tid=121562]

--- 3432164040 ns (0.67%), 343 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103e978.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-8 tid=121568]

--- 3312027276 ns (0.64%), 331 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103e978.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-7 tid=121567]

--- 3281893521 ns (0.64%), 328 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103e978.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-3 tid=121563]

--- 3131914082 ns (0.61%), 313 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103e978.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-1 tid=121561]

--- 3092024053 ns (0.60%), 309 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103e978.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-6 tid=121566]

--- 3041840705 ns (0.59%), 304 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103e978.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-5 tid=121565]

--- 2961809138 ns (0.57%), 296 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103e978.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-2 tid=121562]

--- 2821597949 ns (0.55%), 282 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103e978.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-4 tid=121564]

--- 2581440387 ns (0.50%), 258 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-5 tid=121565]

--- 2481545176 ns (0.48%), 248 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-1 tid=121561]

--- 2481463243 ns (0.48%), 248 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-4 tid=121564]

--- 2371416322 ns (0.46%), 237 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-2 tid=121562]

--- 2311646043 ns (0.45%), 231 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-6 tid=121566]

--- 2271389019 ns (0.44%), 227 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-6 tid=121566]

--- 2261190498 ns (0.44%), 226 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-7 tid=121567]

--- 2161333643 ns (0.42%), 216 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-3 tid=121563]

--- 2151402665 ns (0.42%), 215 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-2 tid=121562]

--- 2141441937 ns (0.42%), 214 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x0000000801036978.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103e978.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-8 tid=121568]

--- 2081011553 ns (0.40%), 208 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x0000000801036978.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-8 tid=121568]

--- 2051404463 ns (0.40%), 205 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-4 tid=121564]

--- 2041430484 ns (0.40%), 204 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-3 tid=121563]

--- 2041214275 ns (0.40%), 204 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x0000000801036978.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103e978.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-6 tid=121566]

--- 2021432819 ns (0.39%), 202 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-8 tid=121568]

--- 1961255295 ns (0.38%), 196 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x0000000801036978.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103e978.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-7 tid=121567]

--- 1951278895 ns (0.38%), 195 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-1 tid=121561]

--- 1921110155 ns (0.37%), 192 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x0000000801036978.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103e978.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-1 tid=121561]

--- 1911386621 ns (0.37%), 191 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-5 tid=121565]

--- 1911383361 ns (0.37%), 191 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x0000000801036978.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103e978.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-2 tid=121562]

--- 1831190629 ns (0.36%), 183 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-7 tid=121567]

--- 1781228511 ns (0.35%), 178 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x0000000801036978.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103e978.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-3 tid=121563]

--- 1771019713 ns (0.34%), 177 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x0000000801036978.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103e978.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-4 tid=121564]

--- 1711122757 ns (0.33%), 171 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x0000000801036978.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103e978.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-5 tid=121565]

--- 1361103881 ns (0.26%), 136 samples
  [ 0] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 1] Iterable.forEach
  [ 2] CellsGroup.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103e978.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-6 tid=121566]

--- 1220886292 ns (0.24%), 122 samples
  [ 0] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 1] Iterable.forEach
  [ 2] CellsGroup.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103e978.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-1 tid=121561]

--- 1200999136 ns (0.23%), 120 samples
  [ 0] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 1] Iterable.forEach
  [ 2] CellsGroup.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103e978.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-7 tid=121567]

--- 1130677772 ns (0.22%), 113 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-3 tid=121563]

--- 1120851069 ns (0.22%), 112 samples
  [ 0] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 1] Iterable.forEach
  [ 2] CellsGroup.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103e978.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-4 tid=121564]

--- 1120819833 ns (0.22%), 112 samples
  [ 0] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 1] Iterable.forEach
  [ 2] CellsGroup.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103e978.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-2 tid=121562]

--- 1060614033 ns (0.21%), 106 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.put
  [ 3] BlockingTransfer.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103e978.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-1 tid=121561]

--- 1020605957 ns (0.20%), 102 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.put
  [ 3] BlockingTransfer.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103e978.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-8 tid=121568]

--- 1010626941 ns (0.20%), 101 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-1 tid=121561]

--- 1010544853 ns (0.20%), 101 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.put
  [ 3] BlockingTransfer.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103e978.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-2 tid=121562]

--- 1000816783 ns (0.19%), 100 samples
  [ 0] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 1] Iterable.forEach
  [ 2] CellsGroup.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103e978.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-8 tid=121568]

--- 1000629426 ns (0.19%), 100 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-4 tid=121564]

--- 990957899 ns (0.19%), 99 samples
  [ 0] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 1] Iterable.forEach
  [ 2] CellsGroup.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103e978.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-5 tid=121565]

--- 970678552 ns (0.19%), 97 samples
  [ 0] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 1] Iterable.forEach
  [ 2] CellsGroup.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103e978.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run
  [13] [ForkJoinPool-1-worker-3 tid=121563]

--- 950675760 ns (0.18%), 95 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.put
  [ 3] BlockingTransfer.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103e978.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-7 tid=121567]

--- 950492959 ns (0.18%), 95 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.put
  [ 3] BlockingTransfer.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103e978.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-6 tid=121566]

--- 950436516 ns (0.18%), 95 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-6 tid=121566]

--- 930515804 ns (0.18%), 93 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] TickPerCell.tick
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$53.0x0000000801035458.run
  [ 6] VirtualThread.run
  [ 7] VirtualThread$VThreadContinuation.lambda$new$0
  [ 8] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [ 9] Continuation.enter0
  [10] Continuation.enter
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-2 tid=121562]

--- 900651616 ns (0.17%), 90 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-7 tid=121567]

--- 890634940 ns (0.17%), 89 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] TickPerCell.tick
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$53.0x0000000801035458.run
  [ 6] VirtualThread.run
  [ 7] VirtualThread$VThreadContinuation.lambda$new$0
  [ 8] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [ 9] Continuation.enter0
  [10] Continuation.enter
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-7 tid=121567]

--- 880806599 ns (0.17%), 88 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] TickPerCell.tick
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$53.0x0000000801035458.run
  [ 6] VirtualThread.run
  [ 7] VirtualThread$VThreadContinuation.lambda$new$0
  [ 8] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [ 9] Continuation.enter0
  [10] Continuation.enter
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-1 tid=121561]

--- 870608934 ns (0.17%), 87 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-5 tid=121565]

--- 870479408 ns (0.17%), 87 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] TickPerCell.tick
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$53.0x0000000801035458.run
  [ 6] VirtualThread.run
  [ 7] VirtualThread$VThreadContinuation.lambda$new$0
  [ 8] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [ 9] Continuation.enter0
  [10] Continuation.enter
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-3 tid=121563]

--- 840511731 ns (0.16%), 84 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.put
  [ 3] BlockingTransfer.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103e978.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-4 tid=121564]

--- 790560754 ns (0.15%), 79 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.put
  [ 3] BlockingTransfer.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103e978.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-5 tid=121565]

--- 790512343 ns (0.15%), 79 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-8 tid=121568]

--- 790479268 ns (0.15%), 79 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] TickPerCell.tick
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$53.0x0000000801035458.run
  [ 6] VirtualThread.run
  [ 7] VirtualThread$VThreadContinuation.lambda$new$0
  [ 8] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [ 9] Continuation.enter0
  [10] Continuation.enter
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-6 tid=121566]

--- 770594816 ns (0.15%), 77 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-2 tid=121562]

--- 770446436 ns (0.15%), 77 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-1 tid=121561]

--- 760555718 ns (0.15%), 76 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] TickPerCell.tick
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$53.0x0000000801035458.run
  [ 6] VirtualThread.run
  [ 7] VirtualThread$VThreadContinuation.lambda$new$0
  [ 8] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [ 9] Continuation.enter0
  [10] Continuation.enter
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-8 tid=121568]

--- 760463757 ns (0.15%), 76 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] TickPerCell.tick
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$53.0x0000000801035458.run
  [ 6] VirtualThread.run
  [ 7] VirtualThread$VThreadContinuation.lambda$new$0
  [ 8] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [ 9] Continuation.enter0
  [10] Continuation.enter
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-5 tid=121565]

--- 710537340 ns (0.14%), 71 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.put
  [ 3] BlockingTransfer.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103e978.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-3 tid=121563]

--- 650315412 ns (0.13%), 65 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-8 tid=121568]

--- 640496457 ns (0.12%), 64 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-8 tid=121568]

--- 630441754 ns (0.12%), 63 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] TickPerCell.tick
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$53.0x0000000801035458.run
  [ 6] VirtualThread.run
  [ 7] VirtualThread$VThreadContinuation.lambda$new$0
  [ 8] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [ 9] Continuation.enter0
  [10] Continuation.enter
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-4 tid=121564]

--- 630419689 ns (0.12%), 63 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-2 tid=121562]

--- 630364185 ns (0.12%), 63 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-7 tid=121567]

--- 610383069 ns (0.12%), 61 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-4 tid=121564]

--- 610295529 ns (0.12%), 61 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-2 tid=121562]

--- 600484329 ns (0.12%), 60 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-8 tid=121568]

--- 600390943 ns (0.12%), 60 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-5 tid=121565]

--- 600358085 ns (0.12%), 60 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-3 tid=121563]

--- 600318029 ns (0.12%), 60 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-4 tid=121564]

--- 580442004 ns (0.11%), 58 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-4 tid=121564]

--- 580349927 ns (0.11%), 58 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-6 tid=121566]

--- 580334292 ns (0.11%), 58 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-5 tid=121565]

--- 570302471 ns (0.11%), 57 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-3 tid=121563]

--- 570280291 ns (0.11%), 57 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-6 tid=121566]

--- 550329752 ns (0.11%), 55 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-5 tid=121565]

--- 540404490 ns (0.10%), 54 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-8 tid=121568]

--- 540334637 ns (0.10%), 54 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-2 tid=121562]

--- 540325636 ns (0.10%), 54 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-3 tid=121563]

--- 530361275 ns (0.10%), 53 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-2 tid=121562]

--- 520444179 ns (0.10%), 52 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-5 tid=121565]

--- 520386963 ns (0.10%), 52 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-7 tid=121567]

--- 510195823 ns (0.10%), 51 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$57.0x0000000801035cb0.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$58.0x0000000801035ec8.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035458.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103e978.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run
  [32] [ForkJoinPool-1-worker-6 tid=121566]

--- 500283910 ns (0.10%), 50 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-8 tid=121568]

--- 490339992 ns (0.10%), 49 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-1 tid=121561]

--- 490283294 ns (0.10%), 49 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-1 tid=121561]

--- 480311486 ns (0.09%), 48 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-5 tid=121565]

--- 480280654 ns (0.09%), 48 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-1 tid=121561]

--- 470225041 ns (0.09%), 47 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-6 tid=121566]

--- 460263620 ns (0.09%), 46 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-7 tid=121567]

--- 450354783 ns (0.09%), 45 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-3 tid=121563]

--- 450278228 ns (0.09%), 45 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-4 tid=121564]

--- 450267160 ns (0.09%), 45 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-7 tid=121567]

--- 450183454 ns (0.09%), 45 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$57.0x0000000801035cb0.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$58.0x0000000801035ec8.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035458.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103e978.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run
  [32] [ForkJoinPool-1-worker-7 tid=121567]

--- 430304342 ns (0.08%), 43 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-6 tid=121566]

--- 420334075 ns (0.08%), 42 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-3 tid=121563]

--- 420232616 ns (0.08%), 42 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$57.0x0000000801035cb0.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$58.0x0000000801035ec8.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035458.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103e978.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run
  [32] [ForkJoinPool-1-worker-8 tid=121568]

--- 410318852 ns (0.08%), 41 samples
  [ 0] ForkJoinPool.awaitWork
  [ 1] ForkJoinPool.runWorker
  [ 2] ForkJoinWorkerThread.run
  [ 3] [ForkJoinPool-1-worker-5 tid=121565]

--- 410293887 ns (0.08%), 41 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-1 tid=121561]

--- 410266081 ns (0.08%), 41 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-2 tid=121562]

--- 410121832 ns (0.08%), 41 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 9] ChannelsGrid.lambda$forEachChannel$1
  [10] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$53.0x0000000801035458.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-2 tid=121562]

--- 400419414 ns (0.08%), 40 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-6 tid=121566]

--- 400263654 ns (0.08%), 40 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-6 tid=121566]

--- 400254614 ns (0.08%), 40 samples
  [ 0] LockSupport.unpark
  [ 1] LinkedTransferQueue$Node.tryMatch
  [ 2] LinkedTransferQueue.xfer
  [ 3] LinkedTransferQueue.take
  [ 4] BlockingTransfer.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x0000000801036978.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103e978.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-3 tid=121563]

--- 400208548 ns (0.08%), 40 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-7 tid=121567]

--- 400175985 ns (0.08%), 40 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035458.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-3 tid=121563]

--- 390369024 ns (0.08%), 39 samples
  [ 0] ForkJoinPool.awaitWork
  [ 1] ForkJoinPool.runWorker
  [ 2] ForkJoinWorkerThread.run
  [ 3] [ForkJoinPool-1-worker-3 tid=121563]

--- 390355786 ns (0.08%), 39 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-6 tid=121566]

--- 390338865 ns (0.08%), 39 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-1 tid=121561]

--- 390251449 ns (0.08%), 39 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 5] Iterable.forEach
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-4 tid=121564]

--- 390160734 ns (0.08%), 39 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035458.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-4 tid=121564]

--- 380386117 ns (0.07%), 38 samples
  [ 0] Channel.take
  [ 1] TickPerCell.waitTick
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-7 tid=121567]

--- 380366669 ns (0.07%), 38 samples
  [ 0] LockSupport.unpark
  [ 1] LinkedTransferQueue$Node.tryMatch
  [ 2] LinkedTransferQueue.xfer
  [ 3] LinkedTransferQueue.take
  [ 4] BlockingTransfer.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x0000000801036978.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103e978.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-7 tid=121567]

--- 380237152 ns (0.07%), 38 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$57.0x0000000801035cb0.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$58.0x0000000801035ec8.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035458.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103e978.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run
  [32] [ForkJoinPool-1-worker-1 tid=121561]

--- 380226381 ns (0.07%), 38 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$57.0x0000000801035cb0.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$58.0x0000000801035ec8.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035458.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103e978.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run
  [32] [ForkJoinPool-1-worker-3 tid=121563]

--- 380212872 ns (0.07%), 38 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-5 tid=121565]

--- 380181125 ns (0.07%), 38 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$57.0x0000000801035cb0.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$58.0x0000000801035ec8.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035458.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103e978.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run
  [32] [ForkJoinPool-1-worker-2 tid=121562]

--- 370297001 ns (0.07%), 37 samples
  [ 0] ArrayList.elementAt
  [ 1] ArrayList.forEach
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-7 tid=121567]

--- 370289053 ns (0.07%), 37 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-2 tid=121562]

--- 370268779 ns (0.07%), 37 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-3 tid=121563]

--- 370220678 ns (0.07%), 37 samples
  [ 0] LockSupport.unpark
  [ 1] LinkedTransferQueue$Node.tryMatch
  [ 2] LinkedTransferQueue.xfer
  [ 3] LinkedTransferQueue.take
  [ 4] BlockingTransfer.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x0000000801036978.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103e978.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-2 tid=121562]

--- 370210647 ns (0.07%), 37 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-2 tid=121562]

--- 370195366 ns (0.07%), 37 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 6] ChannelsGrid.lambda$forEachChannel$1
  [ 7] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$4
  [12] GameOfLife$$Lambda$53.0x0000000801035458.run
  [13] VirtualThread.run
  [14] VirtualThread$VThreadContinuation.lambda$new$0
  [15] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [16] Continuation.enter0
  [17] Continuation.enter
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103e978.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-5 tid=121565]

--- 360274531 ns (0.07%), 36 samples
  [ 0] LockSupport.unpark
  [ 1] LinkedTransferQueue$Node.tryMatch
  [ 2] LinkedTransferQueue.xfer
  [ 3] LinkedTransferQueue.take
  [ 4] BlockingTransfer.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x0000000801036978.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103e978.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-4 tid=121564]

--- 360229088 ns (0.07%), 36 samples
  [ 0] StreamOpFlag.fromCharacteristics
  [ 1] StreamSupport.stream
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103e978.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-3 tid=121563]

--- 350368093 ns (0.07%), 35 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-8 tid=121568]

--- 350273726 ns (0.07%), 35 samples
  [ 0] Channel.take
  [ 1] TickPerCell.waitTick
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-6 tid=121566]

--- 350128123 ns (0.07%), 35 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 9] ChannelsGrid.lambda$forEachChannel$1
  [10] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$53.0x0000000801035458.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-6 tid=121566]

--- 340314694 ns (0.07%), 34 samples
  [ 0] Channel.take
  [ 1] TickPerCell.waitTick
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-4 tid=121564]

--- 340239315 ns (0.07%), 34 samples
  [ 0] ForkJoinPool.awaitWork
  [ 1] ForkJoinPool.runWorker
  [ 2] ForkJoinWorkerThread.run
  [ 3] [ForkJoinPool-1-worker-2 tid=121562]

--- 340199196 ns (0.07%), 34 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 9] ChannelsGrid.lambda$forEachChannel$1
  [10] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$53.0x0000000801035458.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-1 tid=121561]

--- 340180599 ns (0.07%), 34 samples
  [ 0] LockSupport.unpark
  [ 1] LinkedTransferQueue$Node.tryMatch
  [ 2] LinkedTransferQueue.xfer
  [ 3] LinkedTransferQueue.take
  [ 4] BlockingTransfer.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x0000000801036978.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103e978.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-8 tid=121568]

--- 330302625 ns (0.06%), 33 samples
  [ 0] ForkJoinPool.awaitWork
  [ 1] ForkJoinPool.runWorker
  [ 2] ForkJoinWorkerThread.run
  [ 3] [ForkJoinPool-1-worker-4 tid=121564]

--- 330283340 ns (0.06%), 33 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-8 tid=121568]

--- 330282499 ns (0.06%), 33 samples
  [ 0] Channel.take
  [ 1] TickPerCell.waitTick
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-5 tid=121565]

--- 330225022 ns (0.06%), 33 samples
  [ 0] ArrayList.elementAt
  [ 1] ArrayList.forEach
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-8 tid=121568]

--- 320335936 ns (0.06%), 32 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-7 tid=121567]

--- 320321464 ns (0.06%), 32 samples
  [ 0] Channel.take
  [ 1] TickPerCell.waitTick
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-3 tid=121563]

--- 320280389 ns (0.06%), 32 samples
  [ 0] LockSupport.unpark
  [ 1] LinkedTransferQueue$Node.tryMatch
  [ 2] LinkedTransferQueue.xfer
  [ 3] LinkedTransferQueue.take
  [ 4] BlockingTransfer.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x0000000801036978.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103e978.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-6 tid=121566]

--- 320235451 ns (0.06%), 32 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] GameOfLife.calculateFrame
  [ 3] GameOfLife.lambda$calculateFrameBlocking$4
  [ 4] GameOfLife$$Lambda$53.0x0000000801035458.run
  [ 5] VirtualThread.run
  [ 6] VirtualThread$VThreadContinuation.lambda$new$0
  [ 7] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [ 8] Continuation.enter0
  [ 9] Continuation.enter
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103e978.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-7 tid=121567]

--- 320223258 ns (0.06%), 32 samples
  [ 0] Channel.take
  [ 1] TickPerCell.waitTick
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-2 tid=121562]

--- 320171683 ns (0.06%), 32 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$57.0x0000000801035cb0.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$58.0x0000000801035ec8.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035458.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103e978.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run
  [32] [ForkJoinPool-1-worker-5 tid=121565]

--- 320148153 ns (0.06%), 32 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035458.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-6 tid=121566]

--- 320144375 ns (0.06%), 32 samples
  [ 0] StreamOpFlag.fromCharacteristics
  [ 1] StreamSupport.stream
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103e978.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-6 tid=121566]

--- 320139465 ns (0.06%), 32 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035458.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-7 tid=121567]

--- 320116502 ns (0.06%), 32 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 9] ChannelsGrid.lambda$forEachChannel$1
  [10] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$53.0x0000000801035458.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-7 tid=121567]

--- 320073021 ns (0.06%), 32 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 9] ChannelsGrid.lambda$forEachChannel$1
  [10] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$53.0x0000000801035458.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-4 tid=121564]

--- 310268187 ns (0.06%), 31 samples
  [ 0] LockSupport.unpark
  [ 1] LinkedTransferQueue$Node.tryMatch
  [ 2] LinkedTransferQueue.xfer
  [ 3] LinkedTransferQueue.take
  [ 4] BlockingTransfer.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x0000000801036978.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103e978.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-1 tid=121561]

--- 310232321 ns (0.06%), 31 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-5 tid=121565]

--- 310228818 ns (0.06%), 31 samples
  [ 0] ForkJoinPool.awaitWork
  [ 1] ForkJoinPool.runWorker
  [ 2] ForkJoinWorkerThread.run
  [ 3] [ForkJoinPool-1-worker-8 tid=121568]

--- 310225093 ns (0.06%), 31 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-2 tid=121562]

--- 310192871 ns (0.06%), 31 samples
  [ 0] LockSupport.unpark
  [ 1] LinkedTransferQueue$Node.tryMatch
  [ 2] LinkedTransferQueue.xfer
  [ 3] LinkedTransferQueue.take
  [ 4] BlockingTransfer.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x0000000801036978.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103e978.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-5 tid=121565]

--- 310191039 ns (0.06%), 31 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$Head.<init>
  [ 3] StreamSupport.stream
  [ 4] Collection.stream
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103e978.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-6 tid=121566]

--- 310183447 ns (0.06%), 31 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035458.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-2 tid=121562]

--- 310068543 ns (0.06%), 31 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 9] ChannelsGrid.lambda$forEachChannel$1
  [10] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$53.0x0000000801035458.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$AdaptedRunnableAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-5 tid=121565]

--- 300197476 ns (0.06%), 30 samples
  [ 0] ForkJoinPool.awaitWork
  [ 1] ForkJoinPool.runWorker
  [ 2] ForkJoinWorkerThread.run
  [ 3] [ForkJoinPool-1-worker-6 tid=121566]

--- 300181039 ns (0.06%), 30 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-7 tid=121567]

--- 300156801 ns (0.06%), 30 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-8 tid=121568]

--- 300089278 ns (0.06%), 30 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 9] ChannelsGrid.lambda$forEachChannel$1
  [10] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$53.0x0000000801035458.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103e978.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-5 tid=121565]

--- 290285856 ns (0.06%), 29 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-3 tid=121563]

--- 290228223 ns (0.06%), 29 samples
  [ 0] ArrayList.elementAt
  [ 1] ArrayList.forEach
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-1 tid=121561]

--- 290215716 ns (0.06%), 29 samples
  [ 0] StreamOpFlag.fromCharacteristics
  [ 1] StreamSupport.stream
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103e978.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-2 tid=121562]

--- 290201234 ns (0.06%), 29 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$60.0x0000000801036308.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$61.0x0000000801036540.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035458.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-8 tid=121568]

--- 290199802 ns (0.06%), 29 samples
  [ 0] ForkJoinPool.awaitWork
  [ 1] ForkJoinPool.runWorker
  [ 2] ForkJoinWorkerThread.run
  [ 3] [ForkJoinPool-1-worker-1 tid=121561]

--- 290179032 ns (0.06%), 29 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] GameOfLife.calculateFrame
  [ 3] GameOfLife.lambda$calculateFrameBlocking$4
  [ 4] GameOfLife$$Lambda$53.0x0000000801035458.run
  [ 5] VirtualThread.run
  [ 6] VirtualThread$VThreadContinuation.lambda$new$0
  [ 7] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103e768.run
  [ 8] Continuation.enter0
  [ 9] Continuation.enter
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103e978.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-5 tid=121565]

--- 280269915 ns (0.05%), 28 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$59.0x00000008010360e8.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103e978.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-5 tid=121565]

--- 280249409 ns (0.05%), 28 samples
  [ 0] StreamOpFlag.fromCharacteristics
  [ 1] StreamSupport.stream
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103e978.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run
  [17] [ForkJoinPool-1-worker-5 tid=121565]

--- 280247381 ns (0.05%), 28 samples
  [ 0] ArrayList.elementAt
  [ 1] ArrayList.forEach
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103e978.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run
  [16] [ForkJoinPool-1-worker-6 tid=121566]

--- 280234593 ns (0.05%), 28 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-6 tid=121566]

--- 280221606 ns (0.05%), 28 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$54.0x0000000801035668.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103e978.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-4 tid=121564]

--- 280168011 ns (0.05%), 28 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x0000000801036978.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$62.0x0000000801036760.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103e978.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-1 tid=121561]

          ns  percent  samples  top
  ----------  -------  -------  ---
126067619518   24.47%    12597  Cell.lambda$notifyLiveness$0
 99661941136   19.34%     9960  LinkedTransferQueue.xfer
 80526042214   15.63%     8048  VarHandleReferences$FieldInstanceReadWrite.compareAndSet
 78556970255   15.25%     7851  ReduceOps$5ReducingSink.get
 28107339827    5.46%     2809  LinkedTransferQueue.skipDeadNodesNearHead
 10988353872    2.13%     1098  CellsGroup$$Lambda$54.0x0000000801035668.accept
  9855944639    1.91%      985  Dimensions.forEachRowCol
  7014046943    1.36%      701  AbstractPipeline.<init>
  4974069538    0.97%      497  ArrayList.forEach
  4243257460    0.82%      424  ForkJoinPool.awaitWork
  3893643485    0.76%      389  Channel.take
  3822765332    0.74%      382  Cell.notifyLiveness
  3241994878    0.63%      324  StreamOpFlag.fromCharacteristics
  3222261091    0.63%      322  LockSupport.unpark
  2812304223    0.55%      281  ArrayList.elementAt
  2652046193    0.51%      265  Cell$$Lambda$59.0x00000008010360e8.accept
  2597286248    0.50%      259  _raw_spin_unlock_irqrestore_[k]
  1921167613    0.37%      192  LinkedTransferQueue.take
  1691272821    0.33%      169  ChannelsGrid.getChannel
  1510820416    0.29%      151  ReferencePipeline$3.opWrapSink
  1480933702    0.29%      148  ForkJoinPool.scan
  1325360296    0.26%      132  __futex_abstimed_wait_common
  1320915135    0.26%      132  ReferencePipeline$4.opWrapSink
  1220800241    0.24%      122  Sink$ChainedReference.<init>
  1130745950    0.22%      113  vtable stub
  1120837623    0.22%      112  ArrayList$SubList$1.next
  1100639434    0.21%      110  Sink$ChainedReference.begin
  1100499125    0.21%      110  Sink$ChainedReference.end
  1060637542    0.21%      106  Cell.calculateNextState
   870523630    0.17%       87  LinkedTransferQueue.put
   830663724    0.16%       83  Channel.put
   810474056    0.16%       81  LinkedTransferQueue$Node.tryMatch
   730655770    0.14%       73  __memmove_sse2_unaligned_erms
   660392000    0.13%       66  ForkJoinPool$WorkQueue.push
   641592858    0.12%       64  update_blocked_averages_[k]
   620468657    0.12%       62  Iterable.forEach
   562544521    0.11%       56  __lll_lock_wake
   531883983    0.10%       53  syscall_enter_from_user_mode_[k]
   530860197    0.10%       53  ___pthread_cond_signal
   511479710    0.10%       51  LinkedTransferQueue.awaitMatch
   510291094    0.10%       51  System$2.setExtentLocalCache
   480293866    0.09%       48  VirtualThread.unmount
   431905880    0.08%       43  finish_task_switch.isra.0_[k]
   340174854    0.07%       34  VirtualThread.compareAndSetState
   320159196    0.06%       32  int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
   310218876    0.06%       31  Unsafe.getAndBitwiseOrInt
   300283319    0.06%       30  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ul>::oop_access_barrier(oopDesc*, long, oopDesc*)
   300200494    0.06%       30  CellsGroup$$Lambda$62.0x0000000801036760.accept
   280150726    0.05%       28  VirtualThread.runContinuation
   271427480    0.05%       27  Parker::park(bool, long)
   270249661    0.05%       27  __memset_avx2_unaligned_erms
   270228165    0.05%       27  BlockingTransfer.put
   270189219    0.05%       27  SafepointMechanism::update_poll_values(JavaThread*)
   270154512    0.05%       27  LinkedTransferQueue$Node.<init>
   261267381    0.05%       26  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)3, 286822ul>::oop_access_barrier(oopDesc*, long)
   260138895    0.05%       26  VirtualThread.setState
   241004926    0.05%       24  exit_to_user_mode_prepare_[k]
   240169747    0.05%       24  G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
   230235524    0.04%       23  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
   230174496    0.04%       23  ArrayList$SubList$1.checkForComodification
   230150696    0.04%       23  VirtualThread.afterYield
   230107530    0.04%       23  VirtualThread.unpark
   230102659    0.04%       23  Thaw<Config<(oop_kind)0, G1BarrierSet> >::thaw_fast(stackChunkOopDesc*)
   210310781    0.04%       21  futex_wake_[k]
   210242787    0.04%       21  futex_wait_[k]
   210099343    0.04%       21  ForkJoinPool.signalWork
   200553882    0.04%       20  __GI___pthread_getspecific
   191445732    0.04%       19  __condvar_dec_grefs
   190116201    0.04%       19  Continuation.yield0
   180198536    0.03%       18  FreezeBase::freeze_fast_copy(stackChunkOopDesc*, int)
   180116080    0.03%       18  ForkJoinPool.poolSubmit
   173742776    0.03%       17  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
   172613268    0.03%       17  Unsafe_Park
   170287695    0.03%       17  futex_q_lock_[k]
   170110812    0.03%       17  AbstractPipeline.wrapSink
   170081086    0.03%       17  ReferencePipeline.map
   170044976    0.03%       17  Integer.valueOf
   160163683    0.03%       16  ForkJoinPool$WorkQueue.casSlotToNull
   160130086    0.03%       16  Continuation::prepare_thaw(JavaThread*, bool)
   150655878    0.03%       15  __get_user_8_[k]
   150133246    0.03%       15  ForkJoinTask.doExec
   150116399    0.03%       15  Cont thaw
   150107058    0.03%       15  Unsafe.compareAndSetBoolean
   143269142    0.03%       14  __schedule_[k]
   141107778    0.03%       14  schedule_[k]
   131258008    0.03%       13  Unsafe.park
   130110457    0.03%       13  ForkJoinPool.compareAndExchangeCtl
   120073895    0.02%       12  VirtualThread.mount
   120071077    0.02%       12  long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
   120066050    0.02%       12  __GI___pthread_mutex_lock
   120042497    0.02%       12  ChannelsGrid.lambda$forEachChannel$1
   114966255    0.02%       11  GameOfLifeBenchmark_benchmark_jmhTest.benchmark_thrpt_jmhStub
   110957236    0.02%       11  __pthread_mutex_unlock_usercnt
   110088022    0.02%       11  __tls_get_addr
   110068590    0.02%       11  LinkedTransferQueue$Node.block
   100161827    0.02%       10  __x64_sys_futex_[k]
   100108265    0.02%       10  java_lang_Thread::set_thread_status(oopDesc*, JavaThreadStatus)
   100095519    0.02%       10  Continuation.run
   100073098    0.02%       10  VirtualThread.tryYield
   100045298    0.02%       10  VirtualThread.setCarrierThread
   100038657    0.02%       10  StreamSupport.stream
    91319754    0.02%        9  Unsafe_Unpark
    90607196    0.02%        9  ThreadLocalStorage::is_initialized()
    90117859    0.02%        9  TypeArrayKlass::multi_allocate(int, int*, JavaThread*)
    90104672    0.02%        9  futex_wake_mark_[k]
    90083896    0.02%        9  ForkJoinPool$WorkQueue.getAndClearSlot
    90074141    0.02%        9  PipelineHelper.<init>
    90062515    0.02%        9  VirtualThread.state
    83737417    0.02%        8  sched_yield
    80831301    0.02%        8  get_futex_key_[k]
    80627789    0.02%        8  do_futex_[k]
    80577625    0.02%        8  do_syscall_64_[k]
    80231807    0.02%        8  futex_wait_queue_[k]
    80099168    0.02%        8  FreezeBase::freeze_fast_existing_chunk()
    80067585    0.02%        8  Thread.setContinuation
    80062776    0.02%        8  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*)
    80052969    0.02%        8  Continuation.yield
    80051252    0.02%        8  ForkJoinPool$WorkQueue.topLevelExec
    80022435    0.02%        8  ReferencePipeline$4.<init>
    70199050    0.01%        7  G1CardSet::occupied() const
    70126528    0.01%        7  rebalance_domains_[k]
    70068181    0.01%        7  vframeStream::vframeStream(JavaThread*, bool, bool, bool)
    70053619    0.01%        7  VirtualThread.park
    70053024    0.01%        7  __GI___pthread_enable_asynccancel
    70048202    0.01%        7  VirtualThread.yieldContinuation
    70047114    0.01%        7  OopMapStream::find_next() [clone .part.0]
    70044879    0.01%        7  Object.<init>
    70032116    0.01%        7  LambdaForm$MH.0x0000000801002800.invoke
    60070359    0.01%        6  ForkJoinPool.runWorker
    60067400    0.01%        6  __pthread_mutex_cond_lock
    60065196    0.01%        6  ForkJoinPool.unmanagedBlock
    60047555    0.01%        6  pthread_mutex_trylock@@GLIBC_2.34
    60045660    0.01%        6  ContinuationEntry::flush_stack_processing(JavaThread*) const
    60036929    0.01%        6  ChannelsGrid$$Lambda$61.0x0000000801036540.accept
    60036001    0.01%        6  JavaFrameAnchor::make_walkable()
    60029364    0.01%        6  MemAllocator::allocate() const
    60027072    0.01%        6  wrong_method_stub
    60023734    0.01%        6  VirtualThread$$Lambda$51.0x000000080103e978.run
    50520933    0.01%        5  futex_hash_[k]
    50492949    0.01%        5  _raw_spin_lock_[k]
    50491370    0.01%        5  JavaThread::threadObj() const
    50096848    0.01%        5  _raw_spin_unlock_irq_[k]
    50070127    0.01%        5  ObjArrayKlass::allocate(int, JavaThread*)
    50054443    0.01%        5  CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*)
    50051624    0.01%        5  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
    50049028    0.01%        5  __softirqentry_text_start_[k]
    50047047    0.01%        5  ObjArrayKlass::multi_allocate(int, int*, JavaThread*)
    50032243    0.01%        5  DirectMethodHandle.allocateInstance
    50030277    0.01%        5  __GI___pthread_mutex_unlock
    50027934    0.01%        5  update_register_map1(ImmutableOopMap const*, frame const*, RegisterMap*)
    50026555    0.01%        5  OptoRuntime::multianewarray2_C(Klass*, int, int, JavaThread*)
    50016076    0.01%        5  DirectMethodHandle$Holder.newInvokeSpecial
    41324653    0.01%        4  I2C/C2I adapters
    40468392    0.01%        4  LinkedTransferQueue$Node.isReleasable
    40425867    0.01%        4  __GI___pthread_disable_asynccancel
    40392582    0.01%        4  VirtualThread.submitRunContinuation
    40068712    0.01%        4  __rseq_handle_notify_resume_[k]
    40067588    0.01%        4  mem_cgroup_handle_over_high_[k]
    40065157    0.01%        4  SafeThreadsListPtr::release_stable_list()
    40055605    0.01%        4  ___pthread_cond_wait
    40048716    0.01%        4  G1Policy::predict_region_non_copy_time_ms(HeapRegion*, bool) const
    40046608    0.01%        4  syscall_exit_to_user_mode_prepare_[k]
    40043710    0.01%        4  __get_user_nocheck_4_[k]
    40043044    0.01%        4  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
    40042029    0.01%        4  StackWatermarkSet::head(JavaThread*)
    40039166    0.01%        4  OptoRuntime::new_instance_C(Klass*, JavaThread*)
    40033385    0.01%        4  ForkJoinPool.managedBlock
    40031607    0.01%        4  VirtualThread.getAndSetParkPermit
    40031035    0.01%        4  HeapRegion::fill_with_dummy_object(HeapWordImpl**, unsigned long, bool)
    40028133    0.01%        4  oopDesc::address_field(int) const
    40027838    0.01%        4  ForkJoinPool$WorkQueue.tryPoll
    40025055    0.01%        4  ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
    40024131    0.01%        4  ForkJoinPool$WorkQueue.nextLocalTask
    40023500    0.01%        4  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
    40023196    0.01%        4  ObjArrayAllocator::initialize(HeapWordImpl**) const
    40019768    0.01%        4  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<1335398ul, G1BarrierSet>, (AccessInternal::BarrierType)1, 1335398ul>::oop_access_barrier(oopDesc*, long, oopDesc*)
    40017617    0.01%        4  G1Allocator::unsafe_max_tlab_alloc()
    40017315    0.01%        4  JfrObjectAllocationSample::send_event(Klass const*, unsigned long, bool, Thread*)
    40014587    0.01%        4  cont_doYield
    40014574    0.01%        4  __memcpy_sse2_unaligned
    40013630    0.01%        4  CellsGroup.run
    40012165    0.01%        4  AbsSeq::davg() const
    40009389    0.01%        4  CodeCache::find_blob(void*)
    40007893    0.01%        4  ReferencePipeline.<init>
    40001715    0.01%        4  __vdso_clock_gettime
    30641100    0.01%        3  LinkedTransferQueue$Node.isMatched
    30586552    0.01%        3  G1MonitoringSupport::update_eden_size()
    30542511    0.01%        3  G1FromCardCache::clear(unsigned int)
    30479661    0.01%        3  __clock_gettime
    30042702    0.01%        3  syscall_exit_to_user_mode_[k]
    30041997    0.01%        3  Freeze<Config<(oop_kind)0, G1BarrierSet> >::allocate_chunk(unsigned long)
    30040349    0.01%        3  FreeCSetClosure::do_heap_region(HeapRegion*)
    30037013    0.01%        3  StackWatermarkSet::lowest_watermark(JavaThread*)
    30033428    0.01%        3  preempt_count_add_[k]
    30033134    0.01%        3  LockSupport.setCurrentBlocker
    30030260    0.01%        3  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
    30025063    0.01%        3  ObjAllocator::initialize(HeapWordImpl**) const
    30023252    0.01%        3  wake_q_add_safe_[k]
    30022057    0.01%        3  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<544868ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 544868ul>::oop_access_barrier(void*)
    30016899    0.01%        3  JavaThread::is_interrupted(bool)
