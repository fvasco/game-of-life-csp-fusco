--- Execution profile ---
Total samples       : 65171
unknown_Java        : 275 (0.42%)
not_walkable_Java   : 4655 (7.14%)
deoptimization      : 1 (0.00%)

--- 5020933817 ns (0.77%), 502 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-6 tid=42758]

--- 4880830575 ns (0.75%), 488 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-1 tid=42753]

--- 4800789520 ns (0.74%), 480 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-7 tid=42759]

--- 4780838716 ns (0.73%), 478 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-5 tid=42757]

--- 4780663631 ns (0.73%), 478 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-4 tid=42756]

--- 4590873977 ns (0.70%), 459 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-2 tid=42754]

--- 4380678391 ns (0.67%), 438 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-8 tid=42760]

--- 4280721797 ns (0.66%), 428 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-3 tid=42755]

--- 3990635197 ns (0.61%), 399 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801036340.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-1 tid=42753]

--- 3870657145 ns (0.59%), 387 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801036340.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-2 tid=42754]

--- 3790663671 ns (0.58%), 379 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801036340.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-8 tid=42760]

--- 3750695808 ns (0.58%), 375 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801036340.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-6 tid=42758]

--- 3610802069 ns (0.55%), 361 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801036340.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-4 tid=42756]

--- 3600768390 ns (0.55%), 360 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801036340.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-3 tid=42755]

--- 3580656790 ns (0.55%), 358 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801036340.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-7 tid=42759]

--- 3560640414 ns (0.55%), 356 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x0000000801036340.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run
  [15] [ForkJoinPool-1-worker-5 tid=42757]

--- 3290450493 ns (0.50%), 329 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801036340.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-8 tid=42760]

--- 3160267001 ns (0.48%), 316 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801036340.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-1 tid=42753]

--- 3040437067 ns (0.47%), 304 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801036340.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-2 tid=42754]

--- 2950400744 ns (0.45%), 295 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801036340.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-5 tid=42757]

--- 2920333746 ns (0.45%), 292 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801036340.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-3 tid=42755]

--- 2910479864 ns (0.45%), 291 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-6 tid=42758]

--- 2910342846 ns (0.45%), 291 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-2 tid=42754]

--- 2900269819 ns (0.44%), 290 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801036340.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-6 tid=42758]

--- 2880360996 ns (0.44%), 288 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-4 tid=42756]

--- 2850373266 ns (0.44%), 285 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801036340.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-7 tid=42759]

--- 2810463251 ns (0.43%), 281 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-7 tid=42759]

--- 2790383759 ns (0.43%), 279 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x0000000801036340.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run
  [21] [ForkJoinPool-1-worker-4 tid=42756]

--- 2750485403 ns (0.42%), 275 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-3 tid=42755]

--- 2680286246 ns (0.41%), 268 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-8 tid=42760]

--- 2640360662 ns (0.41%), 264 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-1 tid=42753]

--- 2580231658 ns (0.40%), 258 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-4 tid=42756]

--- 2570624392 ns (0.39%), 257 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-2 tid=42754]

--- 2570390127 ns (0.39%), 257 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-5 tid=42757]

--- 2510151352 ns (0.39%), 251 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-8 tid=42760]

--- 2320308533 ns (0.36%), 232 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-2 tid=42754]

--- 2290481022 ns (0.35%), 229 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-6 tid=42758]

--- 2270422334 ns (0.35%), 227 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-5 tid=42757]

--- 2270344783 ns (0.35%), 227 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-7 tid=42759]

--- 2240407567 ns (0.34%), 224 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-7 tid=42759]

--- 2230389592 ns (0.34%), 223 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-6 tid=42758]

--- 2220448332 ns (0.34%), 222 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-2 tid=42754]

--- 2220317382 ns (0.34%), 222 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-3 tid=42755]

--- 2220275774 ns (0.34%), 222 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-1 tid=42753]

--- 2150404495 ns (0.33%), 215 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-5 tid=42757]

--- 2140526166 ns (0.33%), 214 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-8 tid=42760]

--- 2140411913 ns (0.33%), 214 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-1 tid=42753]

--- 2130287515 ns (0.33%), 213 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-1 tid=42753]

--- 2090489575 ns (0.32%), 209 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-5 tid=42757]

--- 2090361496 ns (0.32%), 209 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-4 tid=42756]

--- 2090243275 ns (0.32%), 209 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-6 tid=42758]

--- 2090139041 ns (0.32%), 209 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-5 tid=42757]

--- 2070228103 ns (0.32%), 207 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-7 tid=42759]

--- 2050468829 ns (0.31%), 205 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-4 tid=42756]

--- 2050308828 ns (0.31%), 205 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-8 tid=42760]

--- 2040423345 ns (0.31%), 204 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-3 tid=42755]

--- 2040332212 ns (0.31%), 204 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-3 tid=42755]

--- 2010277741 ns (0.31%), 201 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-1 tid=42753]

--- 2010237894 ns (0.31%), 201 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-6 tid=42758]

--- 1990327014 ns (0.31%), 199 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-3 tid=42755]

--- 1990215618 ns (0.31%), 199 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-3 tid=42755]

--- 1980278428 ns (0.30%), 198 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$53.0x0000000801035258.run
  [10] VirtualThread.run
  [11] VirtualThread$VThreadContinuation.lambda$new$0
  [12] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [13] Continuation.enter0
  [14] Continuation.enter
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run
  [25] [ForkJoinPool-1-worker-8 tid=42760]

--- 1950404312 ns (0.30%), 195 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-7 tid=42759]

--- 1950303633 ns (0.30%), 195 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-1 tid=42753]

--- 1950214803 ns (0.30%), 195 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-4 tid=42756]

--- 1930146891 ns (0.30%), 193 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-4 tid=42756]

--- 1900430146 ns (0.29%), 190 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-7 tid=42759]

--- 1860309817 ns (0.29%), 186 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-8 tid=42760]

--- 1850202397 ns (0.28%), 185 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-5 tid=42757]

--- 1840184252 ns (0.28%), 184 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-4 tid=42756]

--- 1810217077 ns (0.28%), 181 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-6 tid=42758]

--- 1790250292 ns (0.27%), 179 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-2 tid=42754]

--- 1770343629 ns (0.27%), 177 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-2 tid=42754]

--- 1760282117 ns (0.27%), 176 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-1 tid=42753]

--- 1700285094 ns (0.26%), 170 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-3 tid=42755]

--- 1700274264 ns (0.26%), 170 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-2 tid=42754]

--- 1690309282 ns (0.26%), 169 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$51.0x000000080103df08.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run
  [24] [ForkJoinPool-1-worker-7 tid=42759]

--- 1690276433 ns (0.26%), 169 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-6 tid=42758]

--- 1680284318 ns (0.26%), 168 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-5 tid=42757]

--- 1660249657 ns (0.25%), 166 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-8 tid=42760]

--- 1600395585 ns (0.25%), 160 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-4 tid=42756]

--- 1590243954 ns (0.24%), 159 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-7 tid=42759]

--- 1570218611 ns (0.24%), 157 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$51.0x000000080103df08.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run
  [24] [ForkJoinPool-1-worker-8 tid=42760]

--- 1510315210 ns (0.23%), 151 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-1 tid=42753]

--- 1480211173 ns (0.23%), 148 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$51.0x000000080103df08.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run
  [24] [ForkJoinPool-1-worker-1 tid=42753]

--- 1400159758 ns (0.21%), 140 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$51.0x000000080103df08.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run
  [24] [ForkJoinPool-1-worker-5 tid=42757]

--- 1380311752 ns (0.21%), 138 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-2 tid=42754]

--- 1360262890 ns (0.21%), 136 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-7 tid=42759]

--- 1350341955 ns (0.21%), 135 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-5 tid=42757]

--- 1350166484 ns (0.21%), 135 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$51.0x000000080103df08.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run
  [24] [ForkJoinPool-1-worker-4 tid=42756]

--- 1340247985 ns (0.21%), 134 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$51.0x000000080103df08.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run
  [24] [ForkJoinPool-1-worker-3 tid=42755]

--- 1310228738 ns (0.20%), 131 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$51.0x000000080103df08.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run
  [24] [ForkJoinPool-1-worker-6 tid=42758]

--- 1280220607 ns (0.20%), 128 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-3 tid=42755]

--- 1250204762 ns (0.19%), 125 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$51.0x000000080103df08.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run
  [24] [ForkJoinPool-1-worker-2 tid=42754]

--- 1240301313 ns (0.19%), 124 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-2 tid=42754]

--- 1240089404 ns (0.19%), 124 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-4 tid=42756]

--- 1220232357 ns (0.19%), 122 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-5 tid=42757]

--- 1200236279 ns (0.18%), 120 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-8 tid=42760]

--- 1200202971 ns (0.18%), 120 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-6 tid=42758]

--- 1200169207 ns (0.18%), 120 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-7 tid=42759]

--- 1190252792 ns (0.18%), 119 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-6 tid=42758]

--- 1190215327 ns (0.18%), 119 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-8 tid=42760]

--- 1180326705 ns (0.18%), 118 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-4 tid=42756]

--- 1180259623 ns (0.18%), 118 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-1 tid=42753]

--- 1170285916 ns (0.18%), 117 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]
  [ 4] [ForkJoinPool-1-worker-8 tid=42760]

--- 1170248932 ns (0.18%), 117 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-5 tid=42757]

--- 1150277060 ns (0.18%), 115 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$83.0x0000000801033410.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$84.0x0000000801033648.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035258.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-5 tid=42757]

--- 1150225970 ns (0.18%), 115 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-2 tid=42754]

--- 1140219997 ns (0.17%), 114 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-1 tid=42753]

--- 1140093759 ns (0.17%), 114 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-3 tid=42755]

--- 1120295008 ns (0.17%), 112 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-6 tid=42758]

--- 1120236863 ns (0.17%), 112 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-5 tid=42757]

--- 1110161469 ns (0.17%), 111 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-5 tid=42757]

--- 1110157298 ns (0.17%), 111 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-8 tid=42760]

--- 1100276398 ns (0.17%), 110 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-7 tid=42759]

--- 1100060582 ns (0.17%), 110 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-6 tid=42758]

--- 1090192294 ns (0.17%), 109 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$83.0x0000000801033410.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$84.0x0000000801033648.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035258.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-2 tid=42754]

--- 1090101167 ns (0.17%), 109 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-7 tid=42759]

--- 1070144636 ns (0.16%), 107 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-7 tid=42759]

--- 1060155672 ns (0.16%), 106 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-2 tid=42754]

--- 1030194993 ns (0.16%), 103 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-8 tid=42760]

--- 1030173823 ns (0.16%), 103 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-2 tid=42754]

--- 1010251458 ns (0.15%), 101 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-3 tid=42755]

--- 1010132282 ns (0.15%), 101 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-1 tid=42753]

--- 1010055252 ns (0.15%), 101 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$83.0x0000000801033410.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$84.0x0000000801033648.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035258.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-8 tid=42760]

--- 1000219494 ns (0.15%), 100 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-1 tid=42753]

--- 1000216443 ns (0.15%), 100 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-1 tid=42753]

--- 1000187702 ns (0.15%), 100 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x0000000801036340.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run
  [19] [ForkJoinPool-1-worker-3 tid=42755]

--- 1000143091 ns (0.15%), 100 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-2 tid=42754]

--- 1000096419 ns (0.15%), 100 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-1 tid=42753]

--- 990149951 ns (0.15%), 99 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-3 tid=42755]

--- 960163593 ns (0.15%), 96 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-8 tid=42760]

--- 950089445 ns (0.15%), 95 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-7 tid=42759]

--- 950083573 ns (0.15%), 95 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$83.0x0000000801033410.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$84.0x0000000801033648.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035258.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-4 tid=42756]

--- 940161299 ns (0.14%), 94 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-5 tid=42757]

--- 930119333 ns (0.14%), 93 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-4 tid=42756]

--- 930042606 ns (0.14%), 93 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$83.0x0000000801033410.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$84.0x0000000801033648.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035258.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-7 tid=42759]

--- 920179820 ns (0.14%), 92 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$83.0x0000000801033410.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$84.0x0000000801033648.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035258.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-1 tid=42753]

--- 920052024 ns (0.14%), 92 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-6 tid=42758]

--- 920020787 ns (0.14%), 92 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-1 tid=42753]

--- 910118932 ns (0.14%), 91 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035258.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103df08.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run
  [32] [ForkJoinPool-1-worker-4 tid=42756]

--- 910091729 ns (0.14%), 91 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-4 tid=42756]

--- 900188875 ns (0.14%), 90 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-3 tid=42755]

--- 900149188 ns (0.14%), 90 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-8 tid=42760]

--- 900085039 ns (0.14%), 90 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] BlockingQueue.take
  [12] Channel.take
  [13] Cell$$Lambda$63.0x00000008010369a8.apply
  [14] ReferencePipeline$3$1.accept
  [15] ArrayList$ArrayListSpliterator.forEachRemaining
  [16] AbstractPipeline.copyInto
  [17] AbstractPipeline.wrapAndCopyInto
  [18] ReduceOps$ReduceOp.evaluateSequential
  [19] AbstractPipeline.evaluate
  [20] IntPipeline.reduce
  [21] IntPipeline.sum
  [22] Cell.calculateNextState
  [23] Cell.run
  [24] Continuation.enterSpecial
  [25] Continuation.run
  [26] VirtualThread.runContinuation
  [27] VirtualThread$$Lambda$51.0x000000080103df08.run
  [28] ForkJoinTask$RunnableExecuteAction.exec
  [29] ForkJoinTask.doExec
  [30] ForkJoinPool$WorkQueue.topLevelExec
  [31] ForkJoinPool.scan
  [32] ForkJoinPool.runWorker
  [33] ForkJoinWorkerThread.run
  [34] [ForkJoinPool-1-worker-3 tid=42755]

--- 890195979 ns (0.14%), 89 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-2 tid=42754]

--- 880229980 ns (0.14%), 88 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-1 tid=42753]

--- 880119276 ns (0.14%), 88 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-4 tid=42756]

--- 880112406 ns (0.14%), 88 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$83.0x0000000801033410.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$84.0x0000000801033648.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035258.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-6 tid=42758]

--- 879968835 ns (0.14%), 88 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$58.0x0000000801036340.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-1 tid=42753]

--- 870193666 ns (0.13%), 87 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-7 tid=42759]

--- 870112677 ns (0.13%), 87 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-5 tid=42757]

--- 860183733 ns (0.13%), 86 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-4 tid=42756]

--- 860123385 ns (0.13%), 86 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-3 tid=42755]

--- 860082573 ns (0.13%), 86 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$83.0x0000000801033410.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$84.0x0000000801033648.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035258.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-3 tid=42755]

--- 850137714 ns (0.13%), 85 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run
  [10] [ForkJoinPool-1-worker-6 tid=42758]

--- 840150656 ns (0.13%), 84 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run
  [ 6] [ForkJoinPool-1-worker-3 tid=42755]

--- 840147306 ns (0.13%), 84 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-4 tid=42756]

--- 830112625 ns (0.13%), 83 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035258.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103df08.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run
  [32] [ForkJoinPool-1-worker-3 tid=42755]

--- 830091276 ns (0.13%), 83 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] BlockingQueue.take
  [12] Channel.take
  [13] Cell$$Lambda$63.0x00000008010369a8.apply
  [14] ReferencePipeline$3$1.accept
  [15] ArrayList$ArrayListSpliterator.forEachRemaining
  [16] AbstractPipeline.copyInto
  [17] AbstractPipeline.wrapAndCopyInto
  [18] ReduceOps$ReduceOp.evaluateSequential
  [19] AbstractPipeline.evaluate
  [20] IntPipeline.reduce
  [21] IntPipeline.sum
  [22] Cell.calculateNextState
  [23] Cell.run
  [24] Continuation.enterSpecial
  [25] Continuation.run
  [26] VirtualThread.runContinuation
  [27] VirtualThread$$Lambda$51.0x000000080103df08.run
  [28] ForkJoinTask$RunnableExecuteAction.exec
  [29] ForkJoinTask.doExec
  [30] ForkJoinPool$WorkQueue.topLevelExec
  [31] ForkJoinPool.scan
  [32] ForkJoinPool.runWorker
  [33] ForkJoinWorkerThread.run
  [34] [ForkJoinPool-1-worker-7 tid=42759]

--- 820211508 ns (0.13%), 82 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$58.0x0000000801036340.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] Cell.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103df08.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-4 tid=42756]

--- 820147811 ns (0.13%), 82 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run
  [ 6] [ForkJoinPool-1-worker-4 tid=42756]

--- 820143224 ns (0.13%), 82 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-4 tid=42756]

--- 820140986 ns (0.13%), 82 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-6 tid=42758]

--- 820051001 ns (0.13%), 82 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$58.0x0000000801036340.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] Cell.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103df08.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-6 tid=42758]

--- 810222753 ns (0.12%), 81 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-1 tid=42753]

--- 810206558 ns (0.12%), 81 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801036340.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-2 tid=42754]

--- 810192188 ns (0.12%), 81 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-2 tid=42754]

--- 810137075 ns (0.12%), 81 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$58.0x0000000801036340.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] Cell.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103df08.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-2 tid=42754]

--- 810122281 ns (0.12%), 81 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] TickPerCell.waitTick
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-5 tid=42757]

--- 810064043 ns (0.12%), 81 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-4 tid=42756]

--- 800262120 ns (0.12%), 80 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run
  [ 8] [ForkJoinPool-1-worker-5 tid=42757]

--- 800204350 ns (0.12%), 80 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$58.0x0000000801036340.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] Cell.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103df08.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-1 tid=42753]

--- 800187189 ns (0.12%), 80 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-6 tid=42758]

--- 800171270 ns (0.12%), 80 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] TickPerCell.lambda$tick$0
  [ 7] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 8] ChannelsGrid.lambda$forEachChannel$0
  [ 9] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] TickPerCell.tick
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$53.0x0000000801035258.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103df08.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run
  [31] [ForkJoinPool-1-worker-7 tid=42759]

--- 800128940 ns (0.12%), 80 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035258.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103df08.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run
  [32] [ForkJoinPool-1-worker-5 tid=42757]

--- 800107399 ns (0.12%), 80 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-7 tid=42759]

--- 800103870 ns (0.12%), 80 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] GameOfLife$$Lambda$83.0x0000000801033410.test
  [ 7] ChannelsGrid.lambda$forEachChannel$1
  [ 8] ChannelsGrid$$Lambda$84.0x0000000801033648.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$53.0x0000000801035258.run
  [14] VirtualThread.run
  [15] VirtualThread$VThreadContinuation.lambda$new$0
  [16] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [17] Continuation.enter0
  [18] Continuation.enter
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103df08.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run
  [29] [ForkJoinPool-1-worker-3 tid=42755]

--- 800072249 ns (0.12%), 80 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] TickPerCell.waitTick
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-3 tid=42755]

--- 790174104 ns (0.12%), 79 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035258.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103df08.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run
  [32] [ForkJoinPool-1-worker-6 tid=42758]

--- 790147970 ns (0.12%), 79 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$58.0x0000000801036340.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-8 tid=42760]

--- 790123715 ns (0.12%), 79 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$58.0x0000000801036340.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] Cell.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103df08.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-8 tid=42760]

--- 790120294 ns (0.12%), 79 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-6 tid=42758]

--- 790088244 ns (0.12%), 79 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-5 tid=42757]

--- 790048258 ns (0.12%), 79 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-8 tid=42760]

--- 790013435 ns (0.12%), 79 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x0000000801036340.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run
  [22] [ForkJoinPool-1-worker-2 tid=42754]

--- 780191591 ns (0.12%), 78 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-2 tid=42754]

--- 780171634 ns (0.12%), 78 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-3 tid=42755]

--- 780140139 ns (0.12%), 78 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run
  [28] [ForkJoinPool-1-worker-5 tid=42757]

--- 780127450 ns (0.12%), 78 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$58.0x0000000801036340.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-6 tid=42758]

--- 780090933 ns (0.12%), 78 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-6 tid=42758]

--- 780081354 ns (0.12%), 78 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x0000000801036340.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-1 tid=42753]

--- 770191179 ns (0.12%), 77 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] BlockingQueue.take
  [12] Channel.take
  [13] Cell$$Lambda$63.0x00000008010369a8.apply
  [14] ReferencePipeline$3$1.accept
  [15] ArrayList$ArrayListSpliterator.forEachRemaining
  [16] AbstractPipeline.copyInto
  [17] AbstractPipeline.wrapAndCopyInto
  [18] ReduceOps$ReduceOp.evaluateSequential
  [19] AbstractPipeline.evaluate
  [20] IntPipeline.reduce
  [21] IntPipeline.sum
  [22] Cell.calculateNextState
  [23] Cell.run
  [24] Continuation.enterSpecial
  [25] Continuation.run
  [26] VirtualThread.runContinuation
  [27] VirtualThread$$Lambda$51.0x000000080103df08.run
  [28] ForkJoinTask$RunnableExecuteAction.exec
  [29] ForkJoinTask.doExec
  [30] ForkJoinPool$WorkQueue.topLevelExec
  [31] ForkJoinPool.scan
  [32] ForkJoinPool.runWorker
  [33] ForkJoinWorkerThread.run
  [34] [ForkJoinPool-1-worker-4 tid=42756]

--- 770129849 ns (0.12%), 77 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$58.0x0000000801036340.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] Cell.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103df08.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run
  [23] [ForkJoinPool-1-worker-3 tid=42755]

--- 770121352 ns (0.12%), 77 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-3 tid=42755]

--- 770117437 ns (0.12%), 77 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run
  [18] [ForkJoinPool-1-worker-1 tid=42753]

--- 770097418 ns (0.12%), 77 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run
  [27] [ForkJoinPool-1-worker-1 tid=42753]

--- 770091416 ns (0.12%), 77 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x00000008010369a8.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run
  [26] [ForkJoinPool-1-worker-8 tid=42760]

--- 770071808 ns (0.12%), 77 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] TickPerCell.waitTick
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run
  [20] [ForkJoinPool-1-worker-4 tid=42756]

--- 760199820 ns (0.12%), 76 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]
  [ 3] [ForkJoinPool-1-worker-5 tid=42757]

          ns  percent  samples  top
  ----------  -------  -------  ---
 52027834226    7.98%     5202  VirtualThread.getAndClearInterrupt
 41936936841    6.43%     4193  AbstractQueuedSynchronizer.signalNext
 33624220790    5.16%     3362  Thread.interrupted
 31083623323    4.77%     3108  AbstractOwnableSynchronizer.setExclusiveOwnerThread
 30845672929    4.73%     3084  Cell.lambda$notifyLiveness$0
 24543378336    3.77%     2454  LinkedBlockingQueue.dequeue
 22073506789    3.39%     2207  ReentrantLock.lockInterruptibly
 21773298951    3.34%     2177  AbstractQueuedSynchronizer.compareAndSetState
 21033002207    3.23%     2103  LinkedBlockingQueue.take
 18772783741    2.88%     1877  ReentrantLock$Sync.isHeldExclusively
 17003118125    2.61%     1700  TickPerCell.lambda$tick$0
 16823417651    2.58%     1682  Continuation::prepare_thaw(JavaThread*, bool)
 16352494512    2.51%     1635  LinkedBlockingQueue.put
 14833212535    2.28%     1483  __memmove_sse2_unaligned_erms
 14522363990    2.23%     1452  ReduceOps$5ReducingSink.get
 13211936953    2.03%     1321  ReentrantLock$Sync.lockInterruptibly
 12611613726    1.93%     1261  AbstractQueuedSynchronizer.release
 12071659140    1.85%     1207  VirtualThread.unmount
 11661857763    1.79%     1166  AbstractQueuedSynchronizer$ConditionObject.enableWait
 11171814178    1.71%     1117  LinkedBlockingQueue.enqueue
 10321980339    1.58%     1032  AbstractQueuedSynchronizer.enqueue
  9931708718    1.52%      993  VirtualThread.runContinuation
  8630948460    1.32%      863  AbstractQueuedSynchronizer.acquire
  8271752962    1.27%      827  G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  8081214704    1.24%      808  System$2.setExtentLocalCache
  6700959212    1.03%      670  LockSupport.setCurrentBlocker
  6620790463    1.02%      662  ReentrantLock$NonfairSync.initialTryLock
  6570217366    1.01%      657  ForkJoinPool$WorkQueue.push
  6271244022    0.96%      627  ForkJoinTask$RunnableExecuteAction.exec
  6121206168    0.94%      612  AbstractQueuedSynchronizer$ConditionObject.doSignal
  4970779517    0.76%      497  VirtualThread.compareAndSetState
  4840608797    0.74%      484  Unsafe.getAndBitwiseAndInt
  4490697367    0.69%      449  Channel.put
  4430472474    0.68%      443  VirtualThread.afterYield
  4310642521    0.66%      431  Unsafe.getAndBitwiseOrInt
  3910654553    0.60%      391  int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
  3650558783    0.56%      365  ReentrantLock$Sync.tryRelease
  3600820884    0.55%      360  __memcpy_sse2_unaligned
  3150465439    0.48%      315  VirtualThread.unpark
  3040412112    0.47%      304  VirtualThread.setCarrierThread
  2990326645    0.46%      299  ForkJoinPool.poolSubmit
  2970453369    0.46%      297  AbstractQueuedSynchronizer.casTail
  2810553487    0.43%      281  AbstractQueuedSynchronizer$ConditionObject.signal
  2740430608    0.42%      274  itable stub
  2640439759    0.41%      264  Channel.take
  2610274903    0.40%      261  ForkJoinPool$WorkQueue.casSlotToNull
  2470592494    0.38%      247  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ul>::oop_access_barrier(oopDesc*, long, oopDesc*)
  2370226498    0.36%      237  Unsafe.compareAndSetBoolean
  2340319330    0.36%      234  Sink$ChainedReference.<init>
  2310373601    0.35%      231  Continuation.yield0
  2280542687    0.35%      228  VirtualThread.mount
  2180181943    0.33%      218  ForkJoinPool$WorkQueue.tryPoll
  2040300621    0.31%      204  SafepointMechanism::update_poll_values(JavaThread*)
  1990359995    0.31%      199  FreezeBase::freeze_fast_copy(stackChunkOopDesc*, int)
  1990198026    0.31%      199  ForkJoinPool$WorkQueue.getAndClearSlot
  1910294660    0.29%      191  G1BarrierSet::write_ref_field_post_slow(unsigned char volatile*)
  1840157944    0.28%      184  ForkJoinPool.scan
  1780316638    0.27%      178  long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  1750270927    0.27%      175  Thaw<Config<(oop_kind)0, G1BarrierSet> >::thaw_fast(stackChunkOopDesc*)
  1730233217    0.27%      173  VirtualThread.state
  1710150943    0.26%      171  VirtualThread.park
  1610143214    0.25%      161  Thread.setContinuation
  1570239390    0.24%      157  Thread.clearInterrupt
  1500210811    0.23%      150  ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  1220109013    0.19%      122  AbstractPipeline.<init>
  1150319179    0.18%      115  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)3, 286822ul>::oop_access_barrier(oopDesc*, long)
  1150207658    0.18%      115  Continuation.run
  1090158510    0.17%      109  AtomicInteger.getAndIncrement
  1080140596    0.17%      108  ArrayList.forEach
  1010064457    0.15%      101  ReferencePipeline$4.opWrapSink
   990080728    0.15%       99  Continuation.enterSpecial
   900158027    0.14%       90  AbstractQueuedSynchronizer.getState
   760093268    0.12%       76  LinkedBlockingQueue.signalNotEmpty
   750145675    0.12%       75  ThawBase::thaw_slow(stackChunkOopDesc*, bool)
   750105487    0.12%       75  vtable stub
   740076863    0.11%       74  Thread.getContinuation
   740053307    0.11%       74  AbstractQueuedSynchronizer.setState
   690061633    0.11%       69  Cell.calculateNextState
   670073652    0.10%       67  Continuation.yield
   660071411    0.10%       66  ForkJoinPool$WorkQueue.nextLocalTask
   650136909    0.10%       65  Unsafe.getAndSetBoolean
   650066300    0.10%       65  LockSupport.unpark
   610092798    0.09%       61  StreamOpFlag.fromCharacteristics
   600097517    0.09%       60  FreezeBase::recurse_freeze_compiled_frame(frame&, frame&, int, bool)
   580113153    0.09%       58  Integer.intValue
   560089132    0.09%       56  ReferencePipeline$3$1.accept
   550107080    0.08%       55  Sink$ChainedReference.begin
   540029729    0.08%       54  AbstractQueuedSynchronizer$ConditionObject.await
   530516783    0.08%       53  I2C/C2I adapters
   520076939    0.08%       52  Dimensions.forEachRowCol
   490087319    0.08%       49  VirtualThread.setParkPermit
   480026061    0.07%       48  VirtualThread.submitRunContinuation
   469990995    0.07%       47  ReentrantLock$Sync.lock
   460123819    0.07%       46  AbstractQueuedSynchronizer$ConditionNode.isReleasable
   460088122    0.07%       46  VirtualThread.getAndSetParkPermit
   450090311    0.07%       45  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
   450075747    0.07%       45  ThawBase::recurse_thaw_interpreted_frame(frame const&, frame&, int)
   440920668    0.07%       44  _raw_spin_unlock_irqrestore_[k]
   440110730    0.07%       44  Sink$ChainedReference.end
   400056859    0.06%       40  CodeHeap::find_blob_unsafe(void*) const
   390123717    0.06%       39  Object.<init>
   390084729    0.06%       39  Cont thaw
   370054688    0.06%       37  __tls_get_addr
   350043486    0.05%       35  CodeCache::find_blob(void*)
   350037502    0.05%       35  Cell.notifyLiveness
   340109107    0.05%       34  ChannelsGrid.getChannel
   340097761    0.05%       34  ReferencePipeline$3.opWrapSink
   340029529    0.05%       34  ReentrantLock.unlock
   340006223    0.05%       34  Cell.run
   330078500    0.05%       33  ForkJoinTask.doExec
   320041466    0.05%       32  FreezeBase::freeze_fast_existing_chunk()
   310061757    0.05%       31  AbstractOwnableSynchronizer.getExclusiveOwnerThread
   300029042    0.05%       30  ReduceOps$5ReducingSink.begin
   290246033    0.04%       29  ForkJoinPool.awaitWork
   290105328    0.04%       29  oopDesc::address_field(int) const
   290043221    0.04%       29  ThawBase::finalize_thaw(frame&, int)
   290028803    0.04%       29  ForkJoinPool$WorkQueue.topLevelExec
   280262682    0.04%       28  update_blocked_averages_[k]
   270071088    0.04%       27  BlockingQueue.take
   270019265    0.04%       27  Cell$$Lambda$58.0x0000000801036340.accept
   250030287    0.04%       25  AbstractQueuedSynchronizer$Node.setPrevRelaxed
   240044905    0.04%       24  VirtualThread.yieldContinuation
   240016870    0.04%       24  Unsafe_AllocateInstance
   230035464    0.04%       23  FreezeBase::recurse_freeze(frame&, frame&, int, bool, bool)
   230030184    0.04%       23  AtomicInteger.getAndDecrement
   220050487    0.03%       22  StackWatermarkSet::after_unwind(JavaThread*)
   220039906    0.03%       22  MemAllocator::allocate() const
   220026094    0.03%       22  ForkJoinPool.signalWork
   220008464    0.03%       22  ReentrantLock.lock
   200050410    0.03%       20  ContinuationEntry::flush_stack_processing(JavaThread*) const
   200027152    0.03%       20  StackWatermarkSet::lowest_watermark(JavaThread*)
   200001805    0.03%       20  ChannelsGrid.lambda$forEachChannel$1
   190039138    0.03%       19  cont_doYield
   190015804    0.03%       19  oopDesc::address_field_put(int, unsigned char*)
   180936485    0.03%       18  finish_task_switch.isra.0_[k]
   180094921    0.03%       18  ThawBase::finish_thaw(frame&)
   180041273    0.03%       18  Sink.end
   180009646    0.03%       18  Class$$Lambda$30.0x0000000801064738.apply
   170489121    0.03%       17  __futex_abstimed_wait_common
   170050645    0.03%       17  FreezeBase::recurse_freeze_interpreted_frame(frame&, frame&, int, bool)
   170009039    0.03%       17  AbstractQueuedSynchronizer$Node.getAndUnsetStatus
   160353698    0.02%       16  syscall_enter_from_user_mode_[k]
   160030446    0.02%       16  void stackChunkOopDesc::fix_thawed_frame<SmallRegisterMap>(frame const&, SmallRegisterMap const*)
   160029959    0.02%       16  FreezeBase::finalize_freeze(frame const&, frame&, int)
   160011857    0.02%       16  CodeBlob::is_zombie() const
   150029239    0.02%       15  FreezeBase::freeze_slow()
   150027232    0.02%       15  Interpreter
   150016291    0.02%       15  BlockingQueue.put
   139981377    0.02%       14  ArrayList$ArrayListSpliterator.forEachRemaining
   130014036    0.02%       13  System$2.unparkVirtualThread
   120676861    0.02%       12  futex_wake_[k]
   120016899    0.02%       12  ThreadPoolExecutor$Worker.tryRelease
   120016638    0.02%       12  JNIHandleBlock::allocate_handle(JavaThread*, oopDesc*, AllocFailStrategy::AllocFailEnum)
   120010243    0.02%       12  ForkJoinTask$AdaptedRunnableAction.exec
   120010115    0.02%       12  PipelineHelper.<init>
   120001301    0.02%       12  FreezeBase::freeze_start_frame()
   110109419    0.02%       11  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
   100790232    0.02%       10  __lll_lock_wake
   100515260    0.02%       10  exit_to_user_mode_prepare_[k]
   100473250    0.02%       10  ___pthread_cond_signal
   100386659    0.02%       10  schedule_[k]
   100090881    0.02%       10  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
   100002640    0.02%       10  ConstantPoolCache::record_gc_epoch()
    99981191    0.02%       10  memcpy@plt
    90101099    0.01%        9  _raw_spin_unlock_irq_[k]
    90005244    0.01%        9  ForkJoinPool.execute
    90000042    0.01%        9  AtomicInteger.get
    89965976    0.01%        9  InstanceKlass::check_valid_for_instantiation(bool, JavaThread*)
    80116334    0.01%        8  __get_user_8_[k]
    80052640    0.01%        8  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
    80035442    0.01%        8  FreezeBase::patch(frame const&, frame&, frame const&, bool)
    80020817    0.01%        8  os::vm_page_size()
    80006625    0.01%        8  FreezeBase::finish_freeze(frame const&, frame const&)
    80003029    0.01%        8  Method::get_c2i_entry()
    79995158    0.01%        8  Method::from_compiled_entry_no_trampoline() const
    70027702    0.01%        7  StackWatermarkSet::head(JavaThread*)
    70016808    0.01%        7  InstanceKlass::initialize(JavaThread*)
    70012778    0.01%        7  JNIHandles::make_local(JavaThread*, oopDesc*, AllocFailStrategy::AllocFailEnum)
    70010898    0.01%        7  LinkedBlockingQueue.signalNotFull
    70001149    0.01%        7  Method::record_gc_epoch()
    69999820    0.01%        7  CodeBlob::is_safepoint_stub() const
    60019911    0.01%        6  pthread_mutex_trylock@@GLIBC_2.34
    60018041    0.01%        6  ForkJoinPool.lazySubmit
    60016702    0.01%        6  frame::is_deoptimized_frame() const
    60011713    0.01%        6  ForkJoinTask.signalWaiters
    60008455    0.01%        6  Continuation.setMounted
    60006097    0.01%        6  ChannelsGrid$$Lambda$55.0x0000000801035680.accept
    59986833    0.01%        6  g1_post_barrier_slow
    50087381    0.01%        5  futex_q_lock_[k]
    50075032    0.01%        5  futex_wait_[k]
    50023973    0.01%        5  Freeze<Config<(oop_kind)0, G1BarrierSet> >::allocate_chunk(unsigned long)
    50013726    0.01%        5  JvmtiVMObjectAllocEventCollector::JvmtiVMObjectAllocEventCollector()
    50008820    0.01%        5  AbstractPipeline.wrapSink
    50008794    0.01%        5  VirtualThread.setState
    50001866    0.01%        5  ForkJoinTask.adapt
    49975221    0.01%        5  ForkJoinPool$WorkQueue.getAndSetAccess
    40727802    0.01%        4  GameOfLifeBenchmark_benchmark_jmhTest.benchmark_thrpt_jmhStub
    40096801    0.01%        4  G1CardSet::occupied() const
    40039612    0.01%        4  __schedule_[k]
    40031770    0.01%        4  rebalance_domains_[k]
