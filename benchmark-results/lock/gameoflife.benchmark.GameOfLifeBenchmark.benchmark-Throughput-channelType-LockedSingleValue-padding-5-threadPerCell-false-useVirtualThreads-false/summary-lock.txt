--- Execution profile ---
Total samples       : 12252

--- 30356774 ns (42.70%), 364 samples
  [ 0] ReentrantLock$NonfairSync
  [ 1] Unsafe.park
  [ 2] LockSupport.park
  [ 3] AbstractQueuedSynchronizer.acquire
  [ 4] AbstractQueuedSynchronizer.acquire
  [ 5] ReentrantLock$Sync.lock
  [ 6] ReentrantLock.lock
  [ 7] LockedSingleValue.take
  [ 8] Channel.take
  [ 9] GameOfLife$$Lambda$57.0x0000000801036d88.test
  [10] ChannelsGrid.lambda$forEachChannel$1
  [11] ChannelsGrid$$Lambda$60.0x0000000801037410.accept
  [12] Dimensions.forEachRowCol
  [13] ChannelsGrid.forEachChannel
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$49.0x0000000801035ac0.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 28196748 ns (39.66%), 22 samples
  [ 0] ReentrantLock$NonfairSync
  [ 1] Unsafe.park
  [ 2] LockSupport.park
  [ 3] AbstractQueuedSynchronizer.acquire
  [ 4] AbstractQueuedSynchronizer.acquire
  [ 5] ReentrantLock$Sync.lock
  [ 6] ReentrantLock.lock
  [ 7] LockedSingleValue.take
  [ 8] Channel.take
  [ 9] TickPerCell.waitTick
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 10417938 ns (14.65%), 10954 samples
  [ 0] ReentrantLock$NonfairSync
  [ 1] Unsafe.park
  [ 2] LockSupport.park
  [ 3] AbstractQueuedSynchronizer.acquire
  [ 4] AbstractQueuedSynchronizer.acquire
  [ 5] ReentrantLock$Sync.lock
  [ 6] ReentrantLock.lock
  [ 7] LockedSingleValue.put
  [ 8] Channel.put
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$55.0x0000000801036958.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 1078485 ns (1.52%), 813 samples
  [ 0] ReentrantLock$NonfairSync
  [ 1] Unsafe.park
  [ 2] LockSupport.park
  [ 3] AbstractQueuedSynchronizer.acquire
  [ 4] AbstractQueuedSynchronizer$ConditionObject.await
  [ 5] LockedSingleValue.take
  [ 6] Channel.take
  [ 7] GameOfLife$$Lambda$57.0x0000000801036d88.test
  [ 8] ChannelsGrid.lambda$forEachChannel$1
  [ 9] ChannelsGrid$$Lambda$60.0x0000000801037410.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$49.0x0000000801035ac0.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 805959 ns (1.13%), 17 samples
  [ 0] ReentrantLock$NonfairSync
  [ 1] Unsafe.park
  [ 2] LockSupport.park
  [ 3] AbstractQueuedSynchronizer.acquire
  [ 4] AbstractQueuedSynchronizer.acquire
  [ 5] ReentrantLock$Sync.lock
  [ 6] ReentrantLock.lock
  [ 7] LockedSingleValue.take
  [ 8] Channel.take
  [ 9] Cell$$Lambda$58.0x0000000801036fc0.apply
  [10] ReferencePipeline$3$1.accept
  [11] ArrayList$ArrayListSpliterator.forEachRemaining
  [12] AbstractPipeline.copyInto
  [13] AbstractPipeline.wrapAndCopyInto
  [14] ReduceOps$ReduceOp.evaluateSequential
  [15] AbstractPipeline.evaluate
  [16] IntPipeline.reduce
  [17] IntPipeline.sum
  [18] Cell.calculateNextState
  [19] CellsGroup$$Lambda$55.0x0000000801036958.accept
  [20] Iterable.forEach
  [21] CellsGroup.run
  [22] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [23] ThreadPoolExecutor.runWorker
  [24] ThreadPoolExecutor$Worker.run
  [25] Thread.run

--- 211756 ns (0.30%), 72 samples
  [ 0] ReentrantLock$NonfairSync
  [ 1] Unsafe.park
  [ 2] LockSupport.park
  [ 3] AbstractQueuedSynchronizer.acquire
  [ 4] AbstractQueuedSynchronizer.acquire
  [ 5] ReentrantLock$Sync.lock
  [ 6] ReentrantLock.lock
  [ 7] LockedSingleValue.put
  [ 8] Channel.put
  [ 9] Cell.lambda$notifyLiveness$0
  [10] Cell$$Lambda$52.0x00000008010362f8.accept
  [11] ArrayList.forEach
  [12] Cell.notifyLiveness
  [13] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 20673 ns (0.03%), 1 sample
  [ 0] ReentrantLock$NonfairSync
  [ 1] Unsafe.park
  [ 2] LockSupport.park
  [ 3] AbstractQueuedSynchronizer.acquire
  [ 4] AbstractQueuedSynchronizer.acquire
  [ 5] ReentrantLock$Sync.lock
  [ 6] ReentrantLock.lock
  [ 7] LockedSingleValue.put
  [ 8] Channel.put
  [ 9] TickPerCell.lambda$tick$0
  [10] TickPerCell$$Lambda$50.0x0000000801035ec0.accept
  [11] ChannelsGrid.lambda$forEachChannel$0
  [12] ChannelsGrid$$Lambda$51.0x00000008010360d8.accept
  [13] Dimensions.forEachRowCol
  [14] ChannelsGrid.forEachChannel
  [15] TickPerCell.tick
  [16] GameOfLife.calculateFrame
  [17] GameOfLife.lambda$calculateFrameBlocking$4
  [18] GameOfLife$$Lambda$49.0x0000000801035ac0.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 2905 ns (0.00%), 1 sample
  [ 0] ReentrantLock$NonfairSync
  [ 1] Unsafe.park
  [ 2] LockSupport.park
  [ 3] AbstractQueuedSynchronizer.acquire
  [ 4] AbstractQueuedSynchronizer.acquire
  [ 5] ReentrantLock$Sync.lock
  [ 6] ReentrantLock.lock
  [ 7] LinkedBlockingQueue.signalNotEmpty
  [ 8] LinkedBlockingQueue.offer
  [ 9] ThreadPoolExecutor.execute
  [10] GameOfLife$$Lambda$43.0x0000000801034c28.accept
  [11] GameOfLife.calculateFrameBlocking
  [12] GameOfLifeBenchmark.benchmark
  [13] GameOfLifeBenchmark_benchmark_jmhTest.benchmark_thrpt_jmhStub
  [14] GameOfLifeBenchmark_benchmark_jmhTest.benchmark_Throughput
  [15] DirectMethodHandle$Holder.invokeSpecial
  [16] LambdaForm$MH.0x000000080102e000.invoke
  [17] LambdaForm$MH.0x000000080102e400.invokeExact_MT
  [18] DirectMethodHandleAccessor.invokeImpl
  [19] DirectMethodHandleAccessor.invoke
  [20] Method.invoke
  [21] BenchmarkHandler$BenchmarkTask.call
  [22] BenchmarkHandler$BenchmarkTask.call
  [23] FutureTask.run
  [24] Executors$RunnableAdapter.call
  [25] FutureTask.run
  [26] ThreadPoolExecutor.runWorker
  [27] ThreadPoolExecutor$Worker.run
  [28] Thread.run

--- 2167 ns (0.00%), 8 samples
  [ 0] ReentrantLock$NonfairSync
  [ 1] Unsafe.park
  [ 2] LockSupport.park
  [ 3] AbstractQueuedSynchronizer.acquire
  [ 4] AbstractQueuedSynchronizer$ConditionObject.await
  [ 5] LockedSingleValue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$58.0x0000000801036fc0.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] CellsGroup$$Lambda$55.0x0000000801036958.accept
  [18] Iterable.forEach
  [19] CellsGroup.run
  [20] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [21] ThreadPoolExecutor.runWorker
  [22] ThreadPoolExecutor$Worker.run
  [23] Thread.run

          ns  percent  samples  top
  ----------  -------  -------  ---
    71093405  100.00%    12252  ReentrantLock$NonfairSync
