--- Execution profile ---
Total samples       : 12445417
unknown_Java        : 98862 (0.79%)
not_walkable_Java   : 204 (0.00%)
deoptimization      : 5 (0.00%)
skipped             : 1 (0.00%)

--- 1474308419 total (11.85%), 1474862 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 1412980238 total (11.35%), 1412343 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$53.0x0000000801036510.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 853939275 total (6.86%), 855957 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [22] ThreadPoolExecutor.runWorker
  [23] ThreadPoolExecutor$Worker.run
  [24] Thread.run

--- 768015370 total (6.17%), 768572 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$53.0x0000000801036510.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 424895334 total (3.41%), 422235 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 385886839 total (3.10%), 386940 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [22] ThreadPoolExecutor.runWorker
  [23] ThreadPoolExecutor$Worker.run
  [24] Thread.run

--- 382026229 total (3.07%), 381751 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 320593092 total (2.58%), 321047 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 9] ChannelsGrid.lambda$forEachChannel$1
  [10] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 306955927 total (2.47%), 306280 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$53.0x0000000801036510.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 286635995 total (2.30%), 286817 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 277163813 total (2.23%), 276895 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 267320668 total (2.15%), 267585 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 226980331 total (1.82%), 227047 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casTail
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$53.0x0000000801036510.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 205806393 total (1.65%), 205382 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 6] ChannelsGrid.lambda$forEachChannel$1
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$4
  [12] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 175423844 total (1.41%), 175758 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 142949706 total (1.15%), 143429 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 9] ChannelsGrid.lambda$forEachChannel$1
  [10] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 138548313 total (1.11%), 138706 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 138318447 total (1.11%), 138675 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 135485782 total (1.09%), 135035 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 134024800 total (1.08%), 134286 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.put
  [ 6] BlockingTransfer.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$53.0x0000000801036510.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 121515370 total (0.98%), 121548 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 121458680 total (0.98%), 120825 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.put
  [ 3] BlockingTransfer.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 109495550 total (0.88%), 109510 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 108531827 total (0.87%), 108325 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 103387378 total (0.83%), 103575 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 91702473 total (0.74%), 91747 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 81936627 total (0.66%), 81946 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 78872999 total (0.63%), 79036 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 72716707 total (0.58%), 72887 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 65613884 total (0.53%), 65641 samples
  [ 0] StreamOpFlag.fromCharacteristics
  [ 1] StreamSupport.stream
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 62404230 total (0.50%), 62372 samples
  [ 0] TickPerCell.lambda$tick$0
  [ 1] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 2] ChannelsGrid.lambda$forEachChannel$0
  [ 3] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] TickPerCell.tick
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 58744108 total (0.47%), 58623 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.put
  [ 3] BlockingTransfer.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$53.0x0000000801036510.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 58187158 total (0.47%), 58132 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$Head.<init>
  [ 3] StreamSupport.stream
  [ 4] Collection.stream
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 52008989 total (0.42%), 52066 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casTail
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 48553266 total (0.39%), 48601 samples
  [ 0] LinkedTransferQueue.put
  [ 1] BlockingTransfer.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$53.0x0000000801036510.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 48191742 total (0.39%), 48329 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 47922968 total (0.39%), 48037 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$3.<init>
  [ 4] ReferencePipeline.map
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 47421769 total (0.38%), 47470 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] [unknown_Java]

--- 46700271 total (0.38%), 46671 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casHead
  [ 3] LinkedTransferQueue.skipDeadNodesNearHead
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.take
  [ 6] BlockingTransfer.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 44380923 total (0.36%), 44436 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 42743785 total (0.34%), 42795 samples
  [ 0] LinkedTransferQueue.put
  [ 1] BlockingTransfer.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$53.0x0000000801036510.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 42190764 total (0.34%), 42171 samples
  [ 0] StreamOpFlag.fromCharacteristics
  [ 1] StreamSupport.stream
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 42147249 total (0.34%), 42203 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 41743443 total (0.34%), 41906 samples
  [ 0] Channel.take
  [ 1] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 2] ChannelsGrid.lambda$forEachChannel$1
  [ 3] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 4] Dimensions.forEachRowCol
  [ 5] ChannelsGrid.forEachChannel
  [ 6] GameOfLife.calculateFrame
  [ 7] GameOfLife.lambda$calculateFrameBlocking$4
  [ 8] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 37783655 total (0.30%), 37752 samples
  [ 0] ReferencePipeline$3.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 35549173 total (0.29%), 35513 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 35071508 total (0.28%), 35146 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 34852114 total (0.28%), 34837 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 34532138 total (0.28%), 34637 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 33581709 total (0.27%), 33540 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 32808617 total (0.26%), 32762 samples
  [ 0] vtable stub
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 31577880 total (0.25%), 31604 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 31534057 total (0.25%), 31514 samples
  [ 0] ArrayList$ArrayListSpliterator.<init>
  [ 1] ArrayList.spliterator
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 31033546 total (0.25%), 30957 samples
  [ 0] ReferencePipeline$4.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 29350496 total (0.24%), 29378 samples
  [ 0] LinkedTransferQueue$Node.<init>
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.put
  [ 3] BlockingTransfer.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$53.0x0000000801036510.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 29309584 total (0.24%), 29285 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$3.<init>
  [ 4] ReferencePipeline.map
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 29280047 total (0.24%), 29289 samples
  [ 0] itable stub
  [ 1] Dimensions.forEachRowCol
  [ 2] ChannelsGrid.forEachChannel
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 28241083 total (0.23%), 28185 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$Head.<init>
  [ 3] StreamSupport.stream
  [ 4] Collection.stream
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 27972837 total (0.22%), 28025 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 26626598 total (0.21%), 26649 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 26539024 total (0.21%), 26571 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 26305207 total (0.21%), 26333 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue.casTail
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.put
  [ 5] BlockingTransfer.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 26079491 total (0.21%), 26114 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 25938607 total (0.21%), 25959 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] GameOfLife.calculateFrame
  [ 3] GameOfLife.lambda$calculateFrameBlocking$4
  [ 4] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 25893147 total (0.21%), 25950 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 25496137 total (0.20%), 25453 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 25481663 total (0.20%), 25515 samples
  [ 0] itable stub
  [ 1] Dimensions.forEachRowCol
  [ 2] ChannelsGrid.forEachChannel
  [ 3] TickPerCell.tick
  [ 4] GameOfLife.calculateFrame
  [ 5] GameOfLife.lambda$calculateFrameBlocking$4
  [ 6] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 24168051 total (0.19%), 24189 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.put
  [ 6] BlockingTransfer.put
  [ 7] Channel.put
  [ 8] Cell.calculateNextState
  [ 9] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 24068924 total (0.19%), 24067 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 23165616 total (0.19%), 23189 samples
  [ 0] LinkedTransferQueue.put
  [ 1] [unknown_Java]

--- 22770245 total (0.18%), 22822 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 22690747 total (0.18%), 22717 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 22609011 total (0.18%), 22545 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 22433141 total (0.18%), 22465 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 21286864 total (0.17%), 21319 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$3.<init>
  [ 4] ReferencePipeline.map
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 20778585 total (0.17%), 20820 samples
  [ 0] PipelineHelper.<init>
  [ 1] AbstractPipeline.<init>
  [ 2] ReferencePipeline.<init>
  [ 3] ReferencePipeline$Head.<init>
  [ 4] StreamSupport.stream
  [ 5] Collection.stream
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 19662556 total (0.16%), 19676 samples
  [ 0] LockSupport.unpark
  [ 1] LinkedTransferQueue$Node.tryMatch
  [ 2] LinkedTransferQueue.xfer
  [ 3] LinkedTransferQueue.take
  [ 4] BlockingTransfer.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run

--- 18996663 total (0.15%), 18929 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 18920780 total (0.15%), 18919 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 18467007 total (0.15%), 18500 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 18305871 total (0.15%), 18339 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 18061101 total (0.15%), 17989 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 17553829 total (0.14%), 17549 samples
  [ 0] Sink$ChainedReference.<init>
  [ 1] ReferencePipeline$3$1.<init>
  [ 2] ReferencePipeline$3.opWrapSink
  [ 3] AbstractPipeline.wrapSink
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 17292601 total (0.14%), 17340 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 17234324 total (0.14%), 17273 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 16924744 total (0.14%), 16971 samples
  [ 0] LinkedTransferQueue$Node.tryMatch
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 16512988 total (0.13%), 16528 samples
  [ 0] Sink$ChainedReference.begin
  [ 1] Sink$ChainedReference.begin
  [ 2] AbstractPipeline.copyInto
  [ 3] AbstractPipeline.wrapAndCopyInto
  [ 4] ReduceOps$ReduceOp.evaluateSequential
  [ 5] AbstractPipeline.evaluate
  [ 6] IntPipeline.reduce
  [ 7] IntPipeline.sum
  [ 8] Cell.calculateNextState
  [ 9] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 16467520 total (0.13%), 16502 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 16103102 total (0.13%), 16163 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 15575882 total (0.13%), 15599 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 15106988 total (0.12%), 15120 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 15079835 total (0.12%), 15089 samples
  [ 0] ReferencePipeline.map
  [ 1] Cell.calculateNextState
  [ 2] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 3] Iterable.forEach
  [ 4] CellsGroup.run
  [ 5] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 14817455 total (0.12%), 14842 samples
  [ 0] Channel.put
  [ 1] Cell.lambda$notifyLiveness$0
  [ 2] Cell$$Lambda$53.0x0000000801036510.accept
  [ 3] ArrayList.forEach
  [ 4] Cell.notifyLiveness
  [ 5] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 14582452 total (0.12%), 14556 samples
  [ 0] Sink$ChainedReference.<init>
  [ 1] ReferencePipeline$4$1.<init>
  [ 2] ReferencePipeline$4.opWrapSink
  [ 3] AbstractPipeline.wrapSink
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 14499956 total (0.12%), 14477 samples
  [ 0] void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] WorkerThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 14452822 total (0.12%), 14460 samples
  [ 0] Sink$ChainedReference.end
  [ 1] Sink$ChainedReference.end
  [ 2] AbstractPipeline.copyInto
  [ 3] AbstractPipeline.wrapAndCopyInto
  [ 4] ReduceOps$ReduceOp.evaluateSequential
  [ 5] AbstractPipeline.evaluate
  [ 6] IntPipeline.reduce
  [ 7] IntPipeline.sum
  [ 8] Cell.calculateNextState
  [ 9] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 13287674 total (0.11%), 13248 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 13233167 total (0.11%), 13259 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 12849952 total (0.10%), 12863 samples
  [ 0] LockSupport.unpark
  [ 1] LinkedTransferQueue$Node.tryMatch
  [ 2] LinkedTransferQueue.xfer
  [ 3] LinkedTransferQueue.take
  [ 4] BlockingTransfer.take
  [ 5] Channel.take
  [ 6] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 7] ChannelsGrid.lambda$forEachChannel$1
  [ 8] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 12718820 total (0.10%), 12773 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casNext
  [ 3] LinkedTransferQueue.xfer
  [ 4] LinkedTransferQueue.take
  [ 5] BlockingTransfer.take
  [ 6] Channel.take
  [ 7] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 8] ChannelsGrid.lambda$forEachChannel$1
  [ 9] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 12289281 total (0.10%), 12326 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 12061657 total (0.10%), 12081 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 12012363 total (0.10%), 11995 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 11902283 total (0.10%), 11938 samples
  [ 0] G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
  [ 1] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 2] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 3] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 4] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 5] WorkerThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 11899962 total (0.10%), 11916 samples
  [ 0] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 1] Dimensions.forEachRowCol
  [ 2] ChannelsGrid.forEachChannel
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 11725820 total (0.09%), 11747 samples
  [ 0] ReferencePipeline$StatelessOp.<init>
  [ 1] ReferencePipeline$3.<init>
  [ 2] ReferencePipeline.map
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 11706942 total (0.09%), 11719 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] TickPerCell.tick
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 11626948 total (0.09%), 11637 samples
  [ 0] VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  [ 1] VarHandleGuards.guard_LLL_Z
  [ 2] LinkedTransferQueue$Node.casItem
  [ 3] LinkedTransferQueue$Node.tryMatch
  [ 4] LinkedTransferQueue.xfer
  [ 5] LinkedTransferQueue.put
  [ 6] BlockingTransfer.put
  [ 7] Channel.put
  [ 8] TickPerCell.lambda$tick$0
  [ 9] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [10] ChannelsGrid.lambda$forEachChannel$0
  [11] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [12] Dimensions.forEachRowCol
  [13] ChannelsGrid.forEachChannel
  [14] TickPerCell.tick
  [15] GameOfLife.calculateFrame
  [16] GameOfLife.lambda$calculateFrameBlocking$4
  [17] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 11227740 total (0.09%), 11254 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 11088487 total (0.09%), 11088 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 11071297 total (0.09%), 11107 samples
  [ 0] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 1] Iterable.forEach
  [ 2] CellsGroup.run
  [ 3] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 4] ThreadPoolExecutor.runWorker
  [ 5] ThreadPoolExecutor$Worker.run
  [ 6] Thread.run

--- 10943170 total (0.09%), 10957 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 10821713 total (0.09%), 10820 samples
  [ 0] Cell.notifyLiveness
  [ 1] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 2] Iterable.forEach
  [ 3] CellsGroup.run
  [ 4] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 10650873 total (0.09%), 10671 samples
  [ 0] void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
  [ 1] G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
  [ 2] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 3] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 4] G1ConcurrentRefineThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 10616827 total (0.09%), 10595 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$3.<init>
  [ 4] ReferencePipeline.map
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 10484845 total (0.08%), 10509 samples
  [ 0] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 1] Dimensions.forEachRowCol
  [ 2] ChannelsGrid.forEachChannel
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 10385288 total (0.08%), 10396 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 10337833 total (0.08%), 10342 samples
  [ 0] Sink$ChainedReference.begin
  [ 1] Sink$ChainedReference.begin
  [ 2] AbstractPipeline.copyInto
  [ 3] AbstractPipeline.wrapAndCopyInto
  [ 4] ReduceOps$ReduceOp.evaluateSequential
  [ 5] AbstractPipeline.evaluate
  [ 6] IntPipeline.reduce
  [ 7] IntPipeline.sum
  [ 8] Cell.calculateNextState
  [ 9] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 10195664 total (0.08%), 10203 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 10110449 total (0.08%), 10104 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 10068623 total (0.08%), 10090 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 9943722 total (0.08%), 9953 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 9798773 total (0.08%), 9807 samples
  [ 0] Object.<init>
  [ 1] ArrayList$ArrayListSpliterator.<init>
  [ 2] ArrayList.spliterator
  [ 3] Collection.stream
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 9667238 total (0.08%), 9677 samples
  [ 0] ChannelsGrid.getChannel
  [ 1] ChannelsGrid.lambda$forEachChannel$1
  [ 2] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 3] Dimensions.forEachRowCol
  [ 4] ChannelsGrid.forEachChannel
  [ 5] GameOfLife.calculateFrame
  [ 6] GameOfLife.lambda$calculateFrameBlocking$4
  [ 7] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 9352995 total (0.08%), 9328 samples
  [ 0] StreamOpFlag.fromCharacteristics
  [ 1] StreamSupport.stream
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 9203003 total (0.07%), 9212 samples
  [ 0] Cell.calculateNextState
  [ 1] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 2] Iterable.forEach
  [ 3] CellsGroup.run
  [ 4] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 9132271 total (0.07%), 9120 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 9009753 total (0.07%), 9018 samples
  [ 0] LinkedTransferQueue.put
  [ 1] BlockingTransfer.put
  [ 2] Channel.put
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 8984403 total (0.07%), 8991 samples
  [ 0] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 1] Dimensions.forEachRowCol
  [ 2] ChannelsGrid.forEachChannel
  [ 3] TickPerCell.tick
  [ 4] GameOfLife.calculateFrame
  [ 5] GameOfLife.lambda$calculateFrameBlocking$4
  [ 6] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 8817700 total (0.07%), 8816 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 8462619 total (0.07%), 8477 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 8438493 total (0.07%), 8444 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 8338855 total (0.07%), 8331 samples
  [ 0] Sink$ChainedReference.<init>
  [ 1] ReferencePipeline$3$1.<init>
  [ 2] ReferencePipeline$3.opWrapSink
  [ 3] AbstractPipeline.wrapSink
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 7982296 total (0.06%), 7979 samples
  [ 0] AbstractPipeline.<init>
  [ 1] IntPipeline.<init>
  [ 2] IntPipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$4.<init>
  [ 4] ReferencePipeline.mapToInt
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 7964901 total (0.06%), 7963 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 7897014 total (0.06%), 7900 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 7727791 total (0.06%), 7721 samples
  [ 0] ReferencePipeline$3.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 7698969 total (0.06%), 7704 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] GameOfLife.calculateFrame
  [ 3] GameOfLife.lambda$calculateFrameBlocking$4
  [ 4] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 7456982 total (0.06%), 7446 samples
  [ 0] G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
  [ 1] G1RemSet::scan_heap_roots(G1ParScanThreadState*, unsigned int, G1GCPhaseTimes::GCParPhases, G1GCPhaseTimes::GCParPhases, bool)
  [ 2] G1EvacuateRegionsTask::scan_roots(G1ParScanThreadState*, unsigned int)
  [ 3] G1EvacuateRegionsBaseTask::work(unsigned int)
  [ 4] WorkerThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

--- 7206130 total (0.06%), 7183 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.put
  [ 3] BlockingTransfer.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 7149078 total (0.06%), 7164 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 7092268 total (0.06%), 7097 samples
  [ 0] ArrayList.forEach
  [ 1] Cell.notifyLiveness
  [ 2] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 3] Iterable.forEach
  [ 4] CellsGroup.run
  [ 5] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 6993325 total (0.06%), 6989 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 6874248 total (0.06%), 6883 samples
  [ 0] LinkedTransferQueue.put
  [ 1] BlockingTransfer.put
  [ 2] Channel.put
  [ 3] TickPerCell.lambda$tick$0
  [ 4] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 5] ChannelsGrid.lambda$forEachChannel$0
  [ 6] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] TickPerCell.tick
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$4
  [12] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 6820419 total (0.05%), 6817 samples
  [ 0] Integer.intValue
  [ 1] ChannelsGrid.lambda$forEachChannel$1
  [ 2] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 3] Dimensions.forEachRowCol
  [ 4] ChannelsGrid.forEachChannel
  [ 5] GameOfLife.calculateFrame
  [ 6] GameOfLife.lambda$calculateFrameBlocking$4
  [ 7] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 6811267 total (0.05%), 6738 samples
  [ 0] __entry_text_start_[k]
  [ 1] sched_yield
  [ 2] Thread.yield0
  [ 3] Thread.yield
  [ 4] LinkedTransferQueue.awaitMatch
  [ 5] LinkedTransferQueue.xfer
  [ 6] LinkedTransferQueue.take
  [ 7] BlockingTransfer.take
  [ 8] Channel.take
  [ 9] GameOfLife$$Lambda$54.0x0000000801036730.test
  [10] ChannelsGrid.lambda$forEachChannel$1
  [11] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [12] Dimensions.forEachRowCol
  [13] ChannelsGrid.forEachChannel
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 6792669 total (0.05%), 6777 samples
  [ 0] ReferencePipeline$4.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 6634304 total (0.05%), 6633 samples
  [ 0] LinkedTransferQueue.put
  [ 1] BlockingTransfer.put
  [ 2] Channel.put
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 6480955 total (0.05%), 6462 samples
  [ 0] Sink$ChainedReference.<init>
  [ 1] ReferencePipeline$4$1.<init>
  [ 2] ReferencePipeline$4.opWrapSink
  [ 3] AbstractPipeline.wrapSink
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 6263067 total (0.05%), 6280 samples
  [ 0] LinkedTransferQueue$Node.tryMatch
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 6] ChannelsGrid.lambda$forEachChannel$1
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$4
  [12] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 6230251 total (0.05%), 6233 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 6097015 total (0.05%), 6105 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 5994278 total (0.05%), 5995 samples
  [ 0] Cell.calculateNextState
  [ 1] [unknown_Java]

--- 5894387 total (0.05%), 5899 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 5830167 total (0.05%), 5831 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 5720021 total (0.05%), 5710 samples
  [ 0] BlockingTransfer.take
  [ 1] Channel.take
  [ 2] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 3] ChannelsGrid.lambda$forEachChannel$1
  [ 4] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] ChannelsGrid.forEachChannel
  [ 7] GameOfLife.calculateFrame
  [ 8] GameOfLife.lambda$calculateFrameBlocking$4
  [ 9] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 5597058 total (0.04%), 5601 samples
  [ 0] Cell$$Lambda$53.0x0000000801036510.accept
  [ 1] ArrayList.forEach
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 5587653 total (0.04%), 5600 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 5552652 total (0.04%), 5557 samples
  [ 0] LinkedTransferQueue.put
  [ 1] BlockingTransfer.put
  [ 2] Channel.put
  [ 3] TickPerCell.lambda$tick$0
  [ 4] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 5] ChannelsGrid.lambda$forEachChannel$0
  [ 6] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] TickPerCell.tick
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$4
  [12] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 5547603 total (0.04%), 5535 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 5482268 total (0.04%), 5492 samples
  [ 0] ChannelsGrid.lambda$forEachChannel$1
  [ 1] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 2] Dimensions.forEachRowCol
  [ 3] ChannelsGrid.forEachChannel
  [ 4] GameOfLife.calculateFrame
  [ 5] GameOfLife.lambda$calculateFrameBlocking$4
  [ 6] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 5456231 total (0.04%), 5471 samples
  [ 0] LinkedTransferQueue.skipDeadNodesNearHead
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.take
  [ 3] BlockingTransfer.take
  [ 4] Channel.take
  [ 5] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 6] ChannelsGrid.lambda$forEachChannel$1
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$4
  [12] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 5388648 total (0.04%), 5393 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 5358847 total (0.04%), 5360 samples
  [ 0] Sink$ChainedReference.begin
  [ 1] [unknown_Java]

--- 5246054 total (0.04%), 5261 samples
  [ 0] Cell.calculateNextState
  [ 1] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 2] Iterable.forEach
  [ 3] CellsGroup.run
  [ 4] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 5116393 total (0.04%), 5127 samples
  [ 0] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 1] ChannelsGrid.lambda$forEachChannel$1
  [ 2] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 3] Dimensions.forEachRowCol
  [ 4] ChannelsGrid.forEachChannel
  [ 5] GameOfLife.calculateFrame
  [ 6] GameOfLife.lambda$calculateFrameBlocking$4
  [ 7] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 4941168 total (0.04%), 4941 samples
  [ 0] Iterable.forEach
  [ 1] CellsGroup.run
  [ 2] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 3] ThreadPoolExecutor.runWorker
  [ 4] ThreadPoolExecutor$Worker.run
  [ 5] Thread.run

--- 4887072 total (0.04%), 4889 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 4812603 total (0.04%), 4806 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$3.<init>
  [ 4] ReferencePipeline.map
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 4735519 total (0.04%), 4740 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 4732024 total (0.04%), 4727 samples
  [ 0] LinkedTransferQueue$Node.<init>
  [ 1] LinkedTransferQueue.xfer
  [ 2] LinkedTransferQueue.put
  [ 3] BlockingTransfer.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 4680623 total (0.04%), 4678 samples
  [ 0] LinkedTransferQueue.take
  [ 1] BlockingTransfer.take
  [ 2] Channel.take
  [ 3] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 4] ChannelsGrid.lambda$forEachChannel$1
  [ 5] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 6] Dimensions.forEachRowCol
  [ 7] ChannelsGrid.forEachChannel
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$4
  [10] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 4673330 total (0.04%), 4672 samples
  [ 0] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 1] Dimensions.forEachRowCol
  [ 2] ChannelsGrid.forEachChannel
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 4551371 total (0.04%), 4562 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$59.0x00000008010373f8.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 4513724 total (0.04%), 4520 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 4504221 total (0.04%), 4508 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] TickPerCell.tick
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 4466477 total (0.04%), 4464 samples
  [ 0] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 1] Dimensions.forEachRowCol
  [ 2] ChannelsGrid.forEachChannel
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 4368912 total (0.04%), 4374 samples
  [ 0] Iterable.forEach
  [ 1] CellsGroup.run
  [ 2] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 3] ThreadPoolExecutor.runWorker
  [ 4] ThreadPoolExecutor$Worker.run
  [ 5] Thread.run

--- 4328309 total (0.03%), 4323 samples
  [ 0] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 1] [unknown_Java]

--- 4296682 total (0.03%), 4302 samples
  [ 0] AbstractPipeline.<init>
  [ 1] IntPipeline.<init>
  [ 2] IntPipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$4.<init>
  [ 4] ReferencePipeline.mapToInt
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 4207547 total (0.03%), 4212 samples
  [ 0] Channel.put
  [ 1] Cell.lambda$notifyLiveness$0
  [ 2] Cell$$Lambda$53.0x0000000801036510.accept
  [ 3] ArrayList.forEach
  [ 4] Cell.notifyLiveness
  [ 5] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 4174461 total (0.03%), 4172 samples
  [ 0] ChannelsGrid.getChannel
  [ 1] ChannelsGrid.lambda$forEachChannel$1
  [ 2] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 3] Dimensions.forEachRowCol
  [ 4] ChannelsGrid.forEachChannel
  [ 5] GameOfLife.calculateFrame
  [ 6] GameOfLife.lambda$calculateFrameBlocking$4
  [ 7] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 3973536 total (0.03%), 3966 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 3950443 total (0.03%), 3958 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 3824332 total (0.03%), 3814 samples
  [ 0] AbstractPipeline.wrapSink
  [ 1] AbstractPipeline.wrapAndCopyInto
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 3730167 total (0.03%), 3727 samples
  [ 0] ReferencePipeline$3.opWrapSink
  [ 1] [unknown_Java]

--- 3725887 total (0.03%), 3730 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$Head.<init>
  [ 3] StreamSupport.stream
  [ 4] Collection.stream
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 3615896 total (0.03%), 3623 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 3596061 total (0.03%), 3598 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 3541349 total (0.03%), 3533 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 3400917 total (0.03%), 3411 samples
  [ 0] Iterable.forEach
  [ 1] CellsGroup.run
  [ 2] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 3] ThreadPoolExecutor.runWorker
  [ 4] ThreadPoolExecutor$Worker.run
  [ 5] Thread.run

--- 3238140 total (0.03%), 3229 samples
  [ 0] ReferencePipeline$4.opWrapSink
  [ 1] [unknown_Java]

--- 3238005 total (0.03%), 3235 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 3166049 total (0.03%), 3168 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 3161133 total (0.03%), 3160 samples
  [ 0] Sink$ChainedReference.end
  [ 1] Sink$ChainedReference.end
  [ 2] AbstractPipeline.copyInto
  [ 3] AbstractPipeline.wrapAndCopyInto
  [ 4] ReduceOps$ReduceOp.evaluateSequential
  [ 5] AbstractPipeline.evaluate
  [ 6] IntPipeline.reduce
  [ 7] IntPipeline.sum
  [ 8] Cell.calculateNextState
  [ 9] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 3104093 total (0.02%), 3090 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.put
  [ 2] BlockingTransfer.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$56.0x0000000801036b88.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 3099063 total (0.02%), 3094 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 3069049 total (0.02%), 3064 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$54.0x0000000801036730.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801036968.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035cd8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 3057436 total (0.02%), 3062 samples
  [ 0] LinkedTransferQueue.xfer
  [ 1] LinkedTransferQueue.take
  [ 2] BlockingTransfer.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035478.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 3045142 total (0.02%), 3050 samples
  [ 0] oopDesc::size()
  [ 1] G1DirtyCardQueueSet::refine_buffer(BufferNode*, unsigned int, G1ConcurrentRefineStats*)
  [ 2] G1DirtyCardQueueSet::refine_completed_buffer_concurrently(unsigned int, unsigned long, G1ConcurrentRefineStats*)
  [ 3] G1ConcurrentRefineThread::run_service()
  [ 4] ConcurrentGCThread::run()
  [ 5] Thread::call_run()
  [ 6] thread_native_entry(Thread*)
  [ 7] start_thread

       total  percent  samples  top
  ----------  -------  -------  ---
  3477137092   27.94%  3482501  VarHandleReferences$FieldInstanceReadWrite.compareAndSet
  3436033675   27.61%  3434959  LinkedTransferQueue.xfer
  1720141693   13.82%  1718829  Cell.lambda$notifyLiveness$0
  1474345269   11.85%  1474899  ReduceOps$5ReducingSink.get
   714096699    5.74%   712620  LinkedTransferQueue.skipDeadNodesNearHead
   221458205    1.78%   221441  AbstractPipeline.<init>
   142533624    1.15%   142676  LinkedTransferQueue.put
   117157643    0.94%   117140  StreamOpFlag.fromCharacteristics
    62404230    0.50%    62372  TickPerCell.lambda$tick$0
    54761710    0.44%    54804  itable stub
    53735602    0.43%    53779  Dimensions.forEachRowCol
    51408466    0.41%    51367  ReferencePipeline$3.opWrapSink
    46956091    0.38%    46898  Sink$ChainedReference.<init>
    44775378    0.36%    44944  Channel.take
    42960041    0.35%    42856  ReferencePipeline$4.opWrapSink
    38138553    0.31%    38169  ChannelsGrid$$Lambda$55.0x0000000801036968.accept
    37648284    0.30%    37669  Sink$ChainedReference.begin
    37301950    0.30%    37326  LinkedTransferQueue$Node.<init>
    35649908    0.29%    35662  LockSupport.unpark
    32848453    0.26%    32802  vtable stub
    31979153    0.26%    31958  ArrayList$ArrayListSpliterator.<init>
    26397808    0.21%    26465  LinkedTransferQueue$Node.tryMatch
    24129772    0.19%    24155  Cell.calculateNextState
    20789321    0.17%    20792  Sink$ChainedReference.end
    20778585    0.17%    20820  PipelineHelper.<init>
    20600592    0.17%    20631  Channel.put
    17395900    0.14%    17415  Iterable.forEach
    16453682    0.13%    16456  Cell.notifyLiveness
    15749981    0.13%    15726  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
    15704460    0.13%    15714  ChannelsGrid.getChannel
    15286430    0.12%    15296  ReferencePipeline.map
    12651974    0.10%    12660  ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
    12150101    0.10%    12157  ArrayList.forEach
    11959488    0.10%    11995  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
    11725820    0.09%    11747  ReferencePipeline$StatelessOp.<init>
    11511099    0.09%    11506  Integer.intValue
    11323231    0.09%    11344  void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
    11071297    0.09%    11107  CellsGroup$$Lambda$46.0x0000000801035478.accept
    10171951    0.08%    10179  Object.<init>
     9504587    0.08%     9387  __entry_text_start_[k]
     8218308    0.07%     8231  ChannelsGrid.lambda$forEachChannel$1
     8099391    0.07%     8100  Integer.valueOf
     7456982    0.06%     7446  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
     7426987    0.06%     7415  BlockingTransfer.take
     6610417    0.05%     6599  AbstractPipeline.wrapSink
     6076660    0.05%     5918  update_load_avg_[k]
     5597058    0.04%     5601  Cell$$Lambda$53.0x0000000801036510.accept
     5281108    0.04%     5278  LinkedTransferQueue.take
     5197766    0.04%     5064  __update_load_avg_cfs_rq_[k]
     5116393    0.04%     5127  GameOfLife$$Lambda$54.0x0000000801036730.test
     4869375    0.04%     4864  CellsGroup$$Lambda$56.0x0000000801036b88.accept
     4720597    0.04%     4724  oopDesc::size()
     4714452    0.04%     4595  __update_load_avg_se_[k]
     4489262    0.04%     4490  BlockingTransfer.put
     4451500    0.04%     4392  psi_group_change_[k]
     4339946    0.03%     4310  __memset_avx2_unaligned_erms
     4304163    0.03%     4195  update_curr_[k]
     3847196    0.03%     3849  StreamOpFlag.getMask
     3829676    0.03%     3826  StreamOpFlag.combineOpFlags
     3730898    0.03%     3729  StreamSupport.stream
     3301495    0.03%     3301  void G1ScanCardClosure::do_oop_work<narrowOop>(narrowOop*)
     3091348    0.02%     3097  ArrayList$SubList$1.next
     2948487    0.02%     2960  LinkedTransferQueue.awaitMatch
     2865750    0.02%     2878  void OopOopIterateBackwardsDispatch<G1ScanEvacuatedObjClosure>::Table::oop_oop_iterate_backwards<InstanceKlass, narrowOop>(G1ScanEvacuatedObjClosure*, oopDesc*, Klass*)
     2833345    0.02%     2813  CellsGroup.run
     2754001    0.02%     2692  update_cfs_group_[k]
     2707455    0.02%     2712  G1RemSet::refine_card_concurrently(unsigned char*, unsigned int)
     1931772    0.02%     1937  G1CardSet::add_card(unsigned int, unsigned int, bool)
     1842415    0.01%     1806  syscall_exit_to_user_mode_[k]
     1811472    0.01%     1771  __calc_delta_[k]
     1668241    0.01%     1661  G1CardSet::occupied() const
     1664605    0.01%     1623  asm_sysvec_apic_timer_interrupt_[k]
     1602236    0.01%     1574  update_blocked_averages_[k]
     1453529    0.01%     1454  Objects.requireNonNull
     1377747    0.01%     1347  reweight_entity_[k]
     1358397    0.01%     1364  JVM_Yield
     1340279    0.01%     1301  update_min_vruntime_[k]
     1318825    0.01%     1283  task_tick_fair_[k]
     1260174    0.01%     1231  check_preemption_disabled_[k]
     1235458    0.01%     1236  void OopOopIterateDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*)
     1211739    0.01%     1208  __GI___pthread_mutex_lock
     1179784    0.01%     1141  rcu_sched_clock_irq_[k]
     1177955    0.01%     1180  ThreadPoolExecutor.runWorker
     1150502    0.01%     1153  Thread.yield0
     1115832    0.01%     1077  rb_next_[k]
     1114276    0.01%     1105  Unsafe_Park
     1086339    0.01%     1067  G1Allocator::unsafe_max_tlab_alloc()
     1035767    0.01%     1011  update_rq_clock_[k]
     1014689    0.01%     1002  G1Policy::preventive_collection_required(unsigned int)
     1002570    0.01%      982  _raw_spin_lock_[k]
      993976    0.01%      995  ArrayList.elementAt
      943238    0.01%      950  MemAllocator::allocate() const
      941434    0.01%      916  preempt_count_sub_[k]
      932075    0.01%      921  __schedule_[k]
      892425    0.01%      885  HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
      887539    0.01%      891  __tls_get_addr
      880442    0.01%      869  enqueue_entity_[k]
      870827    0.01%      876  pthread_mutex_trylock@@GLIBC_2.34
      865106    0.01%      840  __hrtimer_run_queues_[k]
      851373    0.01%      844  Parker::park(bool, long)
      843266    0.01%      831  G1CollectedHeap::attempt_allocation_slow(unsigned long)
      827535    0.01%      826  TypeArrayKlass::multi_allocate(int, int*, JavaThread*)
      824986    0.01%      819  G1Analytics::predict_scan_card_num(unsigned long, bool) const
      818070    0.01%      802  timerqueue_add_[k]
      796750    0.01%      776  native_read_msr_[k]
      781175    0.01%      753  __cgroup_account_cputime_field_[k]
      777154    0.01%      778  _dl_update_slotinfo
      773895    0.01%      766  ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
      766617    0.01%      761  ___pthread_cond_wait
      760179    0.01%      747  preempt_count_add_[k]
      754757    0.01%      751  OptoRuntime::new_instance_C(Klass*, JavaThread*)
      753676    0.01%      747  G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
      751735    0.01%      733  update_irq_load_avg_[k]
      738329    0.01%      741  G1HotCardCache::insert(unsigned char*)
      731018    0.01%      732  G1FromCardCache::clear(unsigned int)
      724785    0.01%      712  select_task_rq_fair_[k]
      721691    0.01%      716  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
      715976    0.01%      684  syscall_return_via_sysret_[k]
      712680    0.01%      711  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<1335398ul, G1BarrierSet>, (AccessInternal::BarrierType)1, 1335398ul>::oop_access_barrier(oopDesc*, long, oopDesc*)
      694514    0.01%      694  ReferencePipeline.mapToInt
      687919    0.01%      687  I2C/C2I adapters
      681955    0.01%      681  Unsafe_Unpark
      678426    0.01%      678  SharedRuntime::on_slowpath_allocation_exit(JavaThread*)
      677937    0.01%      675  Unsafe.park
      675442    0.01%      677  __pthread_mutex_unlock_usercnt
      657725    0.01%      660  G1CardSet::add_to_howl(void*, unsigned int, unsigned int, bool)
      641703    0.01%      631  native_sched_clock_[k]
      621595    0.00%      610  AbsSeq::davg() const
      617447    0.00%      612  MethodHandle.invokeBasic
      613705    0.00%      609  HSpaceCounters::update_used(unsigned long)
      613371    0.00%      616  ReferencePipeline$Head.<init>
      611347    0.00%      613  G1RemSet::clean_card_before_refine(unsigned char**)
      607731    0.00%      591  _raw_spin_lock_irqsave_[k]
      603977    0.00%      596  pick_next_task_fair_[k]
      601758    0.00%      600  G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*)
      594780    0.00%      587  iterate_groups_[k]
      593190    0.00%      597  native_write_msr_[k]
      585146    0.00%      577  psi_task_change_[k]
      583330    0.00%      579  LambdaForm$MH.0x0000000801002800.invoke
      563281    0.00%      546  scheduler_tick_[k]
      555156    0.00%      542  read_tsc_[k]
      545660    0.00%      539  enqueue_task_fair_[k]
      545314    0.00%      547  AbsSeq::dsd() const
      542956    0.00%      545  sched_yield
      541630    0.00%      545  ObjAllocator::initialize(HeapWordImpl**) const
      537628    0.00%      532  entry_SYSCALL_64_safe_stack_[k]
      534787    0.00%      528  futex_q_lock_[k]
      533791    0.00%      523  futex_wait_[k]
      528386    0.00%      516  futex_wake_[k]
      522569    0.00%      507  update_process_times_[k]
      518669    0.00%      521  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)3, 286822ul>::oop_access_barrier(oopDesc*, long)
      515776    0.00%      512  ClassLoaderData::holder() const
      515350    0.00%      509  G1CollectionSet::add_eden_region(HeapRegion*)
      511872    0.00%      497  __accumulate_pelt_segments_[k]
      508513    0.00%      506  ThreadsListHandle::ThreadsListHandle(Thread*)
      508030    0.00%      494  hrtimer_active_[k]
      504748    0.00%      500  G1CollectedHeap::fill_with_dummy_object(HeapWordImpl**, HeapWordImpl**, bool)
      502590    0.00%      493  cpuacct_charge_[k]
      499410    0.00%      496  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
      490106    0.00%      474  __condvar_dec_grefs
      489437    0.00%      475  timekeeping_advance_[k]
      482186    0.00%      482  FreeListAllocator::reset()
      480171    0.00%      480  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<ObjArrayKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
      478669    0.00%      480  ___pthread_cond_signal
      473091    0.00%      466  GameOfLifeBenchmark_benchmark_jmhTest.benchmark_thrpt_jmhStub
      465049    0.00%      465  G1BlockOffsetTablePart::block_start(void const*)
      453852    0.00%      452  ObjArrayAllocator::initialize(HeapWordImpl**) const
      449129    0.00%      449  Collection.stream
      442917    0.00%      435  try_to_wake_up_[k]
      439829    0.00%      428  hrtimer_interrupt_[k]
      430149    0.00%      430  void OopOopIterateBoundedDispatch<G1ConcurrentRefineOopClosure>::Table::oop_oop_iterate_bounded<ObjArrayKlass, narrowOop>(G1ConcurrentRefineOopClosure*, oopDesc*, Klass*, MemRegion)
      426156    0.00%      421  update_sd_lb_stats.constprop.0_[k]
      423494    0.00%      417  ThreadPoolExecutor.getTask
      417804    0.00%      385  exit_to_user_mode_prepare_[k]
      416679    0.00%      418  ObjectSampler::is_created()
      416208    0.00%      414  Invokers$Holder.linkToTargetMethod
      404784    0.00%      397  GameOfLife.calculateFrame
      404465    0.00%      394  tick_sched_timer_[k]
      402903    0.00%      400  HeapRegion::fill_with_dummy_object(HeapWordImpl**, unsigned long, bool)
      394366    0.00%      394  java_lang_Thread::get_thread_status(oopDesc*)
      385487    0.00%      386  CardTableBarrierSet::on_slowpath_allocation_exit(JavaThread*, oopDesc*)
      381664    0.00%      355  __get_user_8_[k]
      380512    0.00%      371  ktime_get_[k]
      378836    0.00%      379  G1Analytics::predict_card_merge_time_ms(unsigned long, bool) const
      375643    0.00%      377  G1CardSet::add_to_container(void* volatile*, void*, unsigned int, unsigned int, bool)
      371276    0.00%      363  futex_wake_mark_[k]
      367156    0.00%      355  pvclock_gtod_notify?[kvm]_[k]
      365297    0.00%      367  g1_post_barrier_slow
      362864    0.00%      366  InstanceKlass::allocate_instance(JavaThread*)
      360716    0.00%      350  account_user_time_[k]
      353106    0.00%      350  G1MonitoringSupport::update_eden_size()
      351095    0.00%      349  G1Policy::predict_region_non_copy_time_ms(HeapRegion*, bool) const
      351051    0.00%      350  G1DirtyCardQueueSet::num_par_ids()
      347880    0.00%      350  Thread.yield
      345297    0.00%      320  restore_fpregs_from_fpstate_[k]
      340143    0.00%      310  fpregs_restore_userregs_[k]
      334969    0.00%      329  __hrtimer_next_event_base_[k]
      333097    0.00%      329  G1NUMA::index_of_current_thread() const
      332941    0.00%      334  LinkedTransferQueue$Node.isReleasable
      326989    0.00%      327  G1CardTable::is_in_young(oopDesc*) const
