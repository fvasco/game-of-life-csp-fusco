--- Execution profile ---
Total samples       : 10271886
not_walkable_not_Java: 3 (0.00%)
unknown_Java        : 47590 (0.46%)
not_walkable_Java   : 1190015 (11.59%)
deoptimization      : 349 (0.00%)
skipped             : 1 (0.00%)

--- 922892626 total (8.98%), 924190 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 484074822 total (4.71%), 478411 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]

--- 410059557 total (3.99%), 410097 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run

--- 263561464 total (2.57%), 264246 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 234467991 total (2.28%), 234772 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 227012768 total (2.21%), 227628 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 222151929 total (2.16%), 222242 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 219882785 total (2.14%), 219026 samples
  [ 0] G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]

--- 191260292 total (1.86%), 191310 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 157547973 total (1.53%), 157438 samples
  [ 0] Continuation::prepare_thaw(JavaThread*, bool)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]

--- 135542177 total (1.32%), 135609 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 127160241 total (1.24%), 126898 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035258.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103df08.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run

--- 122387845 total (1.19%), 122256 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] GameOfLife$$Lambda$77.0x0000000801037a68.test
  [ 8] ChannelsGrid.lambda$forEachChannel$1
  [ 9] ChannelsGrid$$Lambda$78.0x0000000801037ca0.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run

--- 119502964 total (1.16%), 119685 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035258.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103df08.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run

--- 119356433 total (1.16%), 119352 samples
  [ 0] VirtualThread.setCarrierThread
  [ 1] VirtualThread.mount
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] BlockingQueue.take
  [13] Channel.take
  [14] TickPerCell.waitTick
  [15] Cell.notifyLiveness
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 118041394 total (1.15%), 118366 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 112790108 total (1.10%), 112801 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 110148629 total (1.07%), 110691 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 110119330 total (1.07%), 110595 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 100936683 total (0.98%), 101209 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 98314759 total (0.96%), 98510 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 95760861 total (0.93%), 95946 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 92516291 total (0.90%), 92281 samples
  [ 0] VirtualThread.state
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run

--- 91583020 total (0.89%), 91857 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 90121210 total (0.88%), 90173 samples
  [ 0] VirtualThread.compareAndSetState
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run

--- 86649357 total (0.84%), 85140 samples
  [ 0] __memcpy_sse2_unaligned
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]

--- 85923783 total (0.84%), 86175 samples
  [ 0] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 1] ReferencePipeline$3$1.accept
  [ 2] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 3] AbstractPipeline.copyInto
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 85414578 total (0.83%), 85381 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] BlockingQueue.take
  [12] Channel.take
  [13] TickPerCell.waitTick
  [14] Cell.notifyLiveness
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 82544433 total (0.80%), 82448 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] TickPerCell.lambda$tick$0
  [ 7] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 8] ChannelsGrid.lambda$forEachChannel$0
  [ 9] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] TickPerCell.tick
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$53.0x0000000801035258.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103df08.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run

--- 78957304 total (0.77%), 79118 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 78218876 total (0.76%), 77695 samples
  [ 0] Thaw<Config<(oop_kind)0, G1BarrierSet> >::thaw_fast(stackChunkOopDesc*)
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]

--- 77687400 total (0.76%), 77884 samples
  [ 0] Unsafe.getAndBitwiseAndInt
  [ 1] AbstractQueuedSynchronizer$Node.getAndUnsetStatus
  [ 2] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 3] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] TickPerCell.lambda$tick$0
  [ 9] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [10] ChannelsGrid.lambda$forEachChannel$0
  [11] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [12] Dimensions.forEachRowCol
  [13] ChannelsGrid.forEachChannel
  [14] TickPerCell.tick
  [15] GameOfLife.calculateFrame
  [16] GameOfLife.lambda$calculateFrameBlocking$4
  [17] GameOfLife$$Lambda$53.0x0000000801035258.run
  [18] VirtualThread.run
  [19] VirtualThread$VThreadContinuation.lambda$new$0
  [20] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [21] Continuation.enter0
  [22] Continuation.enter
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$51.0x000000080103df08.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run

--- 76263505 total (0.74%), 76419 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 73438418 total (0.71%), 73752 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 72853693 total (0.71%), 72566 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 72788271 total (0.71%), 72990 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] TickPerCell.waitTick
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 71904178 total (0.70%), 71767 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] TickPerCell.lambda$tick$0
  [ 7] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 8] ChannelsGrid.lambda$forEachChannel$0
  [ 9] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] TickPerCell.tick
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$53.0x0000000801035258.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103df08.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run

--- 65356972 total (0.64%), 65626 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 63811176 total (0.62%), 63831 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$53.0x0000000801035258.run
  [14] VirtualThread.run
  [15] VirtualThread$VThreadContinuation.lambda$new$0
  [16] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [17] Continuation.enter0
  [18] Continuation.enter
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103df08.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run

--- 62643982 total (0.61%), 62668 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] GameOfLife$$Lambda$77.0x0000000801037a68.test
  [ 8] ChannelsGrid.lambda$forEachChannel$1
  [ 9] ChannelsGrid$$Lambda$78.0x0000000801037ca0.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run

--- 60449033 total (0.59%), 60433 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$77.0x0000000801037a68.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$78.0x0000000801037ca0.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035258.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 60436754 total (0.59%), 60406 samples
  [ 0] VirtualThread.setCarrierThread
  [ 1] VirtualThread.mount
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] BlockingQueue.take
  [13] Channel.take
  [14] Cell$$Lambda$63.0x00000008010369b0.apply
  [15] ReferencePipeline$3$1.accept
  [16] ArrayList$ArrayListSpliterator.forEachRemaining
  [17] AbstractPipeline.copyInto
  [18] AbstractPipeline.wrapAndCopyInto
  [19] ReduceOps$ReduceOp.evaluateSequential
  [20] AbstractPipeline.evaluate
  [21] IntPipeline.reduce
  [22] IntPipeline.sum
  [23] Cell.calculateNextState
  [24] Cell.run
  [25] Continuation.enterSpecial
  [26] Continuation.run
  [27] VirtualThread.runContinuation
  [28] VirtualThread$$Lambda$51.0x000000080103df08.run
  [29] ForkJoinTask$RunnableExecuteAction.exec
  [30] ForkJoinTask.doExec
  [31] ForkJoinPool$WorkQueue.topLevelExec
  [32] ForkJoinPool.scan
  [33] ForkJoinPool.runWorker
  [34] ForkJoinWorkerThread.run

--- 60137180 total (0.59%), 60214 samples
  [ 0] VirtualThread.unmount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] BlockingQueue.take
  [12] Channel.take
  [13] Cell$$Lambda$63.0x00000008010369b0.apply
  [14] ReferencePipeline$3$1.accept
  [15] ArrayList$ArrayListSpliterator.forEachRemaining
  [16] AbstractPipeline.copyInto
  [17] AbstractPipeline.wrapAndCopyInto
  [18] ReduceOps$ReduceOp.evaluateSequential
  [19] AbstractPipeline.evaluate
  [20] IntPipeline.reduce
  [21] IntPipeline.sum
  [22] Cell.calculateNextState
  [23] Cell.run
  [24] Continuation.enterSpecial
  [25] Continuation.run
  [26] VirtualThread.runContinuation
  [27] VirtualThread$$Lambda$51.0x000000080103df08.run
  [28] ForkJoinTask$RunnableExecuteAction.exec
  [29] ForkJoinTask.doExec
  [30] ForkJoinPool$WorkQueue.topLevelExec
  [31] ForkJoinPool.scan
  [32] ForkJoinPool.runWorker
  [33] ForkJoinWorkerThread.run

--- 58833215 total (0.57%), 58864 samples
  [ 0] AbstractQueuedSynchronizer.casTail
  [ 1] AbstractQueuedSynchronizer.enqueue
  [ 2] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 3] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] TickPerCell.lambda$tick$0
  [ 9] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [10] ChannelsGrid.lambda$forEachChannel$0
  [11] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [12] Dimensions.forEachRowCol
  [13] ChannelsGrid.forEachChannel
  [14] TickPerCell.tick
  [15] GameOfLife.calculateFrame
  [16] GameOfLife.lambda$calculateFrameBlocking$4
  [17] GameOfLife$$Lambda$53.0x0000000801035258.run
  [18] VirtualThread.run
  [19] VirtualThread$VThreadContinuation.lambda$new$0
  [20] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [21] Continuation.enter0
  [22] Continuation.enter
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$51.0x000000080103df08.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run

--- 58599331 total (0.57%), 58836 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.tryAcquire
  [ 2] AbstractQueuedSynchronizer.acquire
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] TickPerCell.waitTick
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 58014884 total (0.56%), 57921 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035258.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103df08.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run

--- 57390756 total (0.56%), 57409 samples
  [ 0] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]

--- 56949613 total (0.55%), 57141 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] GameOfLife$$Lambda$77.0x0000000801037a68.test
  [ 6] ChannelsGrid.lambda$forEachChannel$1
  [ 7] ChannelsGrid$$Lambda$78.0x0000000801037ca0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$4
  [12] GameOfLife$$Lambda$53.0x0000000801035258.run
  [13] VirtualThread.run
  [14] VirtualThread$VThreadContinuation.lambda$new$0
  [15] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [16] Continuation.enter0
  [17] Continuation.enter
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 55668841 total (0.54%), 55776 samples
  [ 0] VirtualThread.runContinuation
  [ 1] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 2] ForkJoinTask$RunnableExecuteAction.exec
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run

--- 54978430 total (0.54%), 54627 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] BlockingQueue.take
  [13] Channel.take
  [14] TickPerCell.waitTick
  [15] Cell.notifyLiveness
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 54795452 total (0.53%), 54969 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 53948341 total (0.53%), 53984 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run

--- 51834703 total (0.50%), 52043 samples
  [ 0] System$2.setExtentLocalCache
  [ 1] Continuation.run
  [ 2] VirtualThread.runContinuation
  [ 3] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 4] ForkJoinTask$RunnableExecuteAction.exec
  [ 5] ForkJoinTask.doExec
  [ 6] ForkJoinPool$WorkQueue.topLevelExec
  [ 7] ForkJoinPool.scan
  [ 8] ForkJoinPool.runWorker
  [ 9] ForkJoinWorkerThread.run

--- 49871734 total (0.49%), 49727 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035258.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103df08.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run

--- 49425925 total (0.48%), 49365 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] GameOfLife.calculateFrame
  [ 3] GameOfLife.lambda$calculateFrameBlocking$4
  [ 4] GameOfLife$$Lambda$53.0x0000000801035258.run
  [ 5] VirtualThread.run
  [ 6] VirtualThread$VThreadContinuation.lambda$new$0
  [ 7] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [ 8] Continuation.enter0
  [ 9] Continuation.enter
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 49203552 total (0.48%), 49351 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] Cell.run
  [ 7] Continuation.enterSpecial
  [ 8] Continuation.run
  [ 9] VirtualThread.runContinuation
  [10] VirtualThread$$Lambda$51.0x000000080103df08.run
  [11] ForkJoinTask$RunnableExecuteAction.exec
  [12] ForkJoinTask.doExec
  [13] ForkJoinPool$WorkQueue.topLevelExec
  [14] ForkJoinPool.scan
  [15] ForkJoinPool.runWorker
  [16] ForkJoinWorkerThread.run

--- 48888107 total (0.48%), 48642 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] BlockingQueue.take
  [13] Channel.take
  [14] TickPerCell.waitTick
  [15] Cell.notifyLiveness
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 46298622 total (0.45%), 46192 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] GameOfLife$$Lambda$77.0x0000000801037a68.test
  [ 8] ChannelsGrid.lambda$forEachChannel$1
  [ 9] ChannelsGrid$$Lambda$78.0x0000000801037ca0.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run

--- 43741853 total (0.43%), 43862 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] GameOfLife$$Lambda$77.0x0000000801037a68.test
  [ 8] ChannelsGrid.lambda$forEachChannel$1
  [ 9] ChannelsGrid$$Lambda$78.0x0000000801037ca0.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run

--- 42704961 total (0.42%), 42600 samples
  [ 0] Continuation.yield
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] BlockingQueue.take
  [12] Channel.take
  [13] TickPerCell.waitTick
  [14] Cell.notifyLiveness
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 39129271 total (0.38%), 39208 samples
  [ 0] VirtualThread.compareAndSetState
  [ 1] VirtualThread.unpark
  [ 2] System$2.unparkVirtualThread
  [ 3] VirtualThreads.unpark
  [ 4] LockSupport.unpark
  [ 5] AbstractQueuedSynchronizer.signalNext
  [ 6] AbstractQueuedSynchronizer.release
  [ 7] ReentrantLock.unlock
  [ 8] LinkedBlockingQueue.signalNotEmpty
  [ 9] LinkedBlockingQueue.put
  [10] BlockingQueue.put
  [11] Channel.put
  [12] TickPerCell.lambda$tick$0
  [13] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [14] ChannelsGrid.lambda$forEachChannel$0
  [15] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [16] Dimensions.forEachRowCol
  [17] ChannelsGrid.forEachChannel
  [18] TickPerCell.tick
  [19] GameOfLife.calculateFrame
  [20] GameOfLife.lambda$calculateFrameBlocking$4
  [21] GameOfLife$$Lambda$53.0x0000000801035258.run
  [22] VirtualThread.run
  [23] VirtualThread$VThreadContinuation.lambda$new$0
  [24] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [25] Continuation.enter0
  [26] Continuation.enter
  [27] Continuation.enterSpecial
  [28] Continuation.run
  [29] VirtualThread.runContinuation
  [30] VirtualThread$$Lambda$51.0x000000080103df08.run
  [31] ForkJoinTask$RunnableExecuteAction.exec
  [32] ForkJoinTask.doExec
  [33] ForkJoinPool$WorkQueue.topLevelExec
  [34] ForkJoinPool.scan
  [35] ForkJoinPool.runWorker
  [36] ForkJoinWorkerThread.run

--- 38866040 total (0.38%), 38988 samples
  [ 0] Unsafe.compareAndSetBoolean
  [ 1] VarHandleBooleans$FieldInstanceReadWrite.compareAndSet
  [ 2] VarHandleGuards.guard_LII_Z
  [ 3] Continuation.compareAndSetMounted
  [ 4] Continuation.mount
  [ 5] Continuation.run
  [ 6] VirtualThread.runContinuation
  [ 7] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 8] ForkJoinTask$RunnableExecuteAction.exec
  [ 9] ForkJoinTask.doExec
  [10] ForkJoinPool$WorkQueue.topLevelExec
  [11] ForkJoinPool.scan
  [12] ForkJoinPool.runWorker
  [13] ForkJoinWorkerThread.run

--- 37221885 total (0.36%), 37330 samples
  [ 0] AbstractQueuedSynchronizer.getState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 35866467 total (0.35%), 36019 samples
  [ 0] __memmove_sse2_unaligned_erms
  [ 1] int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
  [ 2] Continuation.enterSpecial
  [ 3] Continuation.run
  [ 4] VirtualThread.runContinuation
  [ 5] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 6] ForkJoinTask$RunnableExecuteAction.exec
  [ 7] ForkJoinTask.doExec
  [ 8] ForkJoinPool$WorkQueue.topLevelExec
  [ 9] ForkJoinPool.scan
  [10] ForkJoinPool.runWorker
  [11] ForkJoinWorkerThread.run

--- 34006919 total (0.33%), 34131 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 33172013 total (0.32%), 33280 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 32025670 total (0.31%), 32051 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] TickPerCell.lambda$tick$0
  [ 4] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 5] ChannelsGrid.lambda$forEachChannel$0
  [ 6] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] TickPerCell.tick
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$4
  [12] GameOfLife$$Lambda$53.0x0000000801035258.run
  [13] VirtualThread.run
  [14] VirtualThread$VThreadContinuation.lambda$new$0
  [15] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [16] Continuation.enter0
  [17] Continuation.enter
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 30066114 total (0.29%), 30082 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] TickPerCell.lambda$tick$0
  [ 7] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 8] ChannelsGrid.lambda$forEachChannel$0
  [ 9] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] TickPerCell.tick
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$53.0x0000000801035258.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103df08.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run

--- 30036986 total (0.29%), 29927 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] BlockingQueue.take
  [13] Channel.take
  [14] TickPerCell.waitTick
  [15] Cell.notifyLiveness
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 29785971 total (0.29%), 29822 samples
  [ 0] VirtualThread.unpark
  [ 1] System$2.unparkVirtualThread
  [ 2] VirtualThreads.unpark
  [ 3] LockSupport.unpark
  [ 4] AbstractQueuedSynchronizer.signalNext
  [ 5] AbstractQueuedSynchronizer.release
  [ 6] ReentrantLock.unlock
  [ 7] LinkedBlockingQueue.signalNotEmpty
  [ 8] LinkedBlockingQueue.put
  [ 9] BlockingQueue.put
  [10] Channel.put
  [11] TickPerCell.lambda$tick$0
  [12] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [13] ChannelsGrid.lambda$forEachChannel$0
  [14] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [15] Dimensions.forEachRowCol
  [16] ChannelsGrid.forEachChannel
  [17] TickPerCell.tick
  [18] GameOfLife.calculateFrame
  [19] GameOfLife.lambda$calculateFrameBlocking$4
  [20] GameOfLife$$Lambda$53.0x0000000801035258.run
  [21] VirtualThread.run
  [22] VirtualThread$VThreadContinuation.lambda$new$0
  [23] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [24] Continuation.enter0
  [25] Continuation.enter
  [26] Continuation.enterSpecial
  [27] Continuation.run
  [28] VirtualThread.runContinuation
  [29] VirtualThread$$Lambda$51.0x000000080103df08.run
  [30] ForkJoinTask$RunnableExecuteAction.exec
  [31] ForkJoinTask.doExec
  [32] ForkJoinPool$WorkQueue.topLevelExec
  [33] ForkJoinPool.scan
  [34] ForkJoinPool.runWorker
  [35] ForkJoinWorkerThread.run

--- 29784634 total (0.29%), 29891 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 29274941 total (0.29%), 29365 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 29234172 total (0.28%), 29257 samples
  [ 0] VirtualThread.mount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] BlockingQueue.take
  [12] Channel.take
  [13] Cell$$Lambda$63.0x00000008010369b0.apply
  [14] ReferencePipeline$3$1.accept
  [15] ArrayList$ArrayListSpliterator.forEachRemaining
  [16] AbstractPipeline.copyInto
  [17] AbstractPipeline.wrapAndCopyInto
  [18] ReduceOps$ReduceOp.evaluateSequential
  [19] AbstractPipeline.evaluate
  [20] IntPipeline.reduce
  [21] IntPipeline.sum
  [22] Cell.calculateNextState
  [23] Cell.run
  [24] Continuation.enterSpecial
  [25] Continuation.run
  [26] VirtualThread.runContinuation
  [27] VirtualThread$$Lambda$51.0x000000080103df08.run
  [28] ForkJoinTask$RunnableExecuteAction.exec
  [29] ForkJoinTask.doExec
  [30] ForkJoinPool$WorkQueue.topLevelExec
  [31] ForkJoinPool.scan
  [32] ForkJoinPool.runWorker
  [33] ForkJoinWorkerThread.run

--- 28488512 total (0.28%), 28447 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035258.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103df08.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run

--- 27964651 total (0.27%), 27955 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 27380957 total (0.27%), 27371 samples
  [ 0] StreamSupport.stream
  [ 1] Collection.stream
  [ 2] Cell.calculateNextState
  [ 3] Cell.run
  [ 4] Continuation.enterSpecial
  [ 5] Continuation.run
  [ 6] VirtualThread.runContinuation
  [ 7] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 8] ForkJoinTask$RunnableExecuteAction.exec
  [ 9] ForkJoinTask.doExec
  [10] ForkJoinPool$WorkQueue.topLevelExec
  [11] ForkJoinPool.scan
  [12] ForkJoinPool.runWorker
  [13] ForkJoinWorkerThread.run

--- 27038747 total (0.26%), 27136 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103df08.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run

--- 26900614 total (0.26%), 27038 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$51.0x000000080103df08.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 26416695 total (0.26%), 26506 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 26396316 total (0.26%), 26358 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] GameOfLife$$Lambda$77.0x0000000801037a68.test
  [ 6] ChannelsGrid.lambda$forEachChannel$1
  [ 7] ChannelsGrid$$Lambda$78.0x0000000801037ca0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$4
  [12] GameOfLife$$Lambda$53.0x0000000801035258.run
  [13] VirtualThread.run
  [14] VirtualThread$VThreadContinuation.lambda$new$0
  [15] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [16] Continuation.enter0
  [17] Continuation.enter
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 26188229 total (0.25%), 26281 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] Cell.run
  [15] Continuation.enterSpecial
  [16] Continuation.run
  [17] VirtualThread.runContinuation
  [18] VirtualThread$$Lambda$51.0x000000080103df08.run
  [19] ForkJoinTask$RunnableExecuteAction.exec
  [20] ForkJoinTask.doExec
  [21] ForkJoinPool$WorkQueue.topLevelExec
  [22] ForkJoinPool.scan
  [23] ForkJoinPool.runWorker
  [24] ForkJoinWorkerThread.run

--- 25945931 total (0.25%), 25931 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035258.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103df08.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run

--- 25849006 total (0.25%), 25847 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 25644773 total (0.25%), 25715 samples
  [ 0] Channel.take
  [ 1] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 2] ReferencePipeline$3$1.accept
  [ 3] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 4] AbstractPipeline.copyInto
  [ 5] AbstractPipeline.wrapAndCopyInto
  [ 6] ReduceOps$ReduceOp.evaluateSequential
  [ 7] AbstractPipeline.evaluate
  [ 8] IntPipeline.reduce
  [ 9] IntPipeline.sum
  [10] Cell.calculateNextState
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 24781921 total (0.24%), 24927 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 4] AbstractQueuedSynchronizer$ConditionObject.await
  [ 5] LinkedBlockingQueue.take
  [ 6] BlockingQueue.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] Cell.run
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103df08.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run

--- 24387554 total (0.24%), 24381 samples
  [ 0] ReferencePipeline$4.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 24306901 total (0.24%), 24305 samples
  [ 0] VirtualThread.mount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] BlockingQueue.take
  [12] Channel.take
  [13] TickPerCell.waitTick
  [14] Cell.notifyLiveness
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 24285623 total (0.24%), 24297 samples
  [ 0] AbstractQueuedSynchronizer.getState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] GameOfLife$$Lambda$77.0x0000000801037a68.test
  [ 8] ChannelsGrid.lambda$forEachChannel$1
  [ 9] ChannelsGrid$$Lambda$78.0x0000000801037ca0.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$53.0x0000000801035258.run
  [15] VirtualThread.run
  [16] VirtualThread$VThreadContinuation.lambda$new$0
  [17] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [18] Continuation.enter0
  [19] Continuation.enter
  [20] Continuation.enterSpecial
  [21] Continuation.run
  [22] VirtualThread.runContinuation
  [23] VirtualThread$$Lambda$51.0x000000080103df08.run
  [24] ForkJoinTask$RunnableExecuteAction.exec
  [25] ForkJoinTask.doExec
  [26] ForkJoinPool$WorkQueue.topLevelExec
  [27] ForkJoinPool.scan
  [28] ForkJoinPool.runWorker
  [29] ForkJoinWorkerThread.run

--- 24224247 total (0.24%), 24270 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ul>::oop_access_barrier(oopDesc*, long, oopDesc*)
  [ 1] int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
  [ 2] Continuation.enterSpecial
  [ 3] Continuation.run
  [ 4] VirtualThread.runContinuation
  [ 5] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 6] ForkJoinTask$RunnableExecuteAction.exec
  [ 7] ForkJoinTask.doExec
  [ 8] ForkJoinPool$WorkQueue.topLevelExec
  [ 9] ForkJoinPool.scan
  [10] ForkJoinPool.runWorker
  [11] ForkJoinWorkerThread.run

--- 23929612 total (0.23%), 23930 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 23897718 total (0.23%), 23976 samples
  [ 0] AbstractQueuedSynchronizer.acquire
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 22568190 total (0.22%), 22637 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] TickPerCell.lambda$tick$0
  [ 7] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 8] ChannelsGrid.lambda$forEachChannel$0
  [ 9] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] TickPerCell.tick
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$53.0x0000000801035258.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103df08.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run

--- 22205190 total (0.22%), 22271 samples
  [ 0] G1BarrierSet::write_ref_field_post_slow(unsigned char volatile*)
  [ 1] Continuation.enterSpecial
  [ 2] Continuation.run
  [ 3] VirtualThread.runContinuation
  [ 4] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 5] ForkJoinTask$RunnableExecuteAction.exec
  [ 6] ForkJoinTask.doExec
  [ 7] ForkJoinPool$WorkQueue.topLevelExec
  [ 8] ForkJoinPool.scan
  [ 9] ForkJoinPool.runWorker
  [10] ForkJoinWorkerThread.run

--- 21811578 total (0.21%), 21821 samples
  [ 0] vtable stub
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 20569336 total (0.20%), 20521 samples
  [ 0] ForkJoinTask$RunnableExecuteAction.exec
  [ 1] ForkJoinTask.doExec
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run

--- 19860814 total (0.19%), 19916 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 19467543 total (0.19%), 19529 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 19170734 total (0.19%), 19200 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 19120233 total (0.19%), 19170 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 18978397 total (0.18%), 18962 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$77.0x0000000801037a68.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$78.0x0000000801037ca0.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$53.0x0000000801035258.run
  [12] VirtualThread.run
  [13] VirtualThread$VThreadContinuation.lambda$new$0
  [14] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [15] Continuation.enter0
  [16] Continuation.enter
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 18679381 total (0.18%), 18784 samples
  [ 0] Unsafe.getAndBitwiseAndInt
  [ 1] AbstractQueuedSynchronizer$Node.getAndUnsetStatus
  [ 2] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 3] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$58.0x00000008010358a0.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] Cell.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103df08.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run

--- 18438482 total (0.18%), 18448 samples
  [ 0] StreamSupport.stream
  [ 1] Collection.stream
  [ 2] Cell.calculateNextState
  [ 3] Cell.run
  [ 4] Continuation.enterSpecial
  [ 5] Continuation.run
  [ 6] VirtualThread.runContinuation
  [ 7] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 8] ForkJoinTask$RunnableExecuteAction.exec
  [ 9] ForkJoinTask.doExec
  [10] ForkJoinPool$WorkQueue.topLevelExec
  [11] ForkJoinPool.scan
  [12] ForkJoinPool.runWorker
  [13] ForkJoinWorkerThread.run

--- 18369318 total (0.18%), 18477 samples
  [ 0] SafepointMechanism::update_poll_values(JavaThread*)
  [ 1] int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
  [ 2] Continuation.enterSpecial
  [ 3] Continuation.run
  [ 4] VirtualThread.runContinuation
  [ 5] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 6] ForkJoinTask$RunnableExecuteAction.exec
  [ 7] ForkJoinTask.doExec
  [ 8] ForkJoinPool$WorkQueue.topLevelExec
  [ 9] ForkJoinPool.scan
  [10] ForkJoinPool.runWorker
  [11] ForkJoinWorkerThread.run

--- 17503964 total (0.17%), 17540 samples
  [ 0] AbstractQueuedSynchronizer.acquire
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 17398035 total (0.17%), 17445 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.tryAcquire
  [ 2] AbstractQueuedSynchronizer.acquire
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 17228758 total (0.17%), 17254 samples
  [ 0] ReferencePipeline$3.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 16739648 total (0.16%), 16792 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] GameOfLife$$Lambda$77.0x0000000801037a68.test
  [ 4] ChannelsGrid.lambda$forEachChannel$1
  [ 5] ChannelsGrid$$Lambda$78.0x0000000801037ca0.accept
  [ 6] Dimensions.forEachRowCol
  [ 7] ChannelsGrid.forEachChannel
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$4
  [10] GameOfLife$$Lambda$53.0x0000000801035258.run
  [11] VirtualThread.run
  [12] VirtualThread$VThreadContinuation.lambda$new$0
  [13] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [14] Continuation.enter0
  [15] Continuation.enter
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 16670242 total (0.16%), 16721 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 16657730 total (0.16%), 16655 samples
  [ 0] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 1] System$2.setExtentLocalCache
  [ 2] Continuation.run
  [ 3] VirtualThread.runContinuation
  [ 4] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 5] ForkJoinTask$RunnableExecuteAction.exec
  [ 6] ForkJoinTask.doExec
  [ 7] ForkJoinPool$WorkQueue.topLevelExec
  [ 8] ForkJoinPool.scan
  [ 9] ForkJoinPool.runWorker
  [10] ForkJoinWorkerThread.run

--- 16634794 total (0.16%), 16665 samples
  [ 0] VirtualThread.unpark
  [ 1] System$2.unparkVirtualThread
  [ 2] VirtualThreads.unpark
  [ 3] LockSupport.unpark
  [ 4] AbstractQueuedSynchronizer.signalNext
  [ 5] AbstractQueuedSynchronizer.release
  [ 6] ReentrantLock.unlock
  [ 7] LinkedBlockingQueue.signalNotEmpty
  [ 8] LinkedBlockingQueue.put
  [ 9] BlockingQueue.put
  [10] Channel.put
  [11] TickPerCell.lambda$tick$0
  [12] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [13] ChannelsGrid.lambda$forEachChannel$0
  [14] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [15] Dimensions.forEachRowCol
  [16] ChannelsGrid.forEachChannel
  [17] TickPerCell.tick
  [18] GameOfLife.calculateFrame
  [19] GameOfLife.lambda$calculateFrameBlocking$4
  [20] GameOfLife$$Lambda$53.0x0000000801035258.run
  [21] VirtualThread.run
  [22] VirtualThread$VThreadContinuation.lambda$new$0
  [23] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [24] Continuation.enter0
  [25] Continuation.enter
  [26] Continuation.enterSpecial
  [27] Continuation.run
  [28] VirtualThread.runContinuation
  [29] VirtualThread$$Lambda$51.0x000000080103df08.run
  [30] ForkJoinTask$RunnableExecuteAction.exec
  [31] ForkJoinTask.doExec
  [32] ForkJoinPool$WorkQueue.topLevelExec
  [33] ForkJoinPool.scan
  [34] ForkJoinPool.runWorker
  [35] ForkJoinWorkerThread.run

--- 15907039 total (0.15%), 15978 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.tryAcquire
  [ 2] AbstractQueuedSynchronizer.acquire
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] TickPerCell.waitTick
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 15780892 total (0.15%), 15833 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)3, 286822ul>::oop_access_barrier(oopDesc*, long)
  [ 1] Cont thaw
  [ 2] [not_walkable_Java]

--- 14936537 total (0.15%), 14980 samples
  [ 0] FreezeBase::freeze_fast_copy(stackChunkOopDesc*, int)
  [ 1] int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
  [ 2] Continuation.enterSpecial
  [ 3] Continuation.run
  [ 4] VirtualThread.runContinuation
  [ 5] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 6] ForkJoinTask$RunnableExecuteAction.exec
  [ 7] ForkJoinTask.doExec
  [ 8] ForkJoinPool$WorkQueue.topLevelExec
  [ 9] ForkJoinPool.scan
  [10] ForkJoinPool.runWorker
  [11] ForkJoinWorkerThread.run

--- 14864137 total (0.14%), 14918 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] TickPerCell.waitTick
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 14512085 total (0.14%), 14479 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] BlockingQueue.take
  [13] Channel.take
  [14] Cell$$Lambda$63.0x00000008010369b0.apply
  [15] ReferencePipeline$3$1.accept
  [16] ArrayList$ArrayListSpliterator.forEachRemaining
  [17] AbstractPipeline.copyInto
  [18] AbstractPipeline.wrapAndCopyInto
  [19] ReduceOps$ReduceOp.evaluateSequential
  [20] AbstractPipeline.evaluate
  [21] IntPipeline.reduce
  [22] IntPipeline.sum
  [23] Cell.calculateNextState
  [24] Cell.run
  [25] Continuation.enterSpecial
  [26] Continuation.run
  [27] VirtualThread.runContinuation
  [28] VirtualThread$$Lambda$51.0x000000080103df08.run
  [29] ForkJoinTask$RunnableExecuteAction.exec
  [30] ForkJoinTask.doExec
  [31] ForkJoinPool$WorkQueue.topLevelExec
  [32] ForkJoinPool.scan
  [33] ForkJoinPool.runWorker
  [34] ForkJoinWorkerThread.run

--- 14158415 total (0.14%), 14189 samples
  [ 0] LockSupport.setCurrentBlocker
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 13991730 total (0.14%), 14047 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 2] AbstractQueuedSynchronizer$ConditionObject.await
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] TickPerCell.waitTick
  [ 7] Cell.notifyLiveness
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 13820551 total (0.13%), 13803 samples
  [ 0] Continuation.yield
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] BlockingQueue.take
  [12] Channel.take
  [13] Cell$$Lambda$63.0x00000008010369b0.apply
  [14] ReferencePipeline$3$1.accept
  [15] ArrayList$ArrayListSpliterator.forEachRemaining
  [16] AbstractPipeline.copyInto
  [17] AbstractPipeline.wrapAndCopyInto
  [18] ReduceOps$ReduceOp.evaluateSequential
  [19] AbstractPipeline.evaluate
  [20] IntPipeline.reduce
  [21] IntPipeline.sum
  [22] Cell.calculateNextState
  [23] Cell.run
  [24] Continuation.enterSpecial
  [25] Continuation.run
  [26] VirtualThread.runContinuation
  [27] VirtualThread$$Lambda$51.0x000000080103df08.run
  [28] ForkJoinTask$RunnableExecuteAction.exec
  [29] ForkJoinTask.doExec
  [30] ForkJoinPool$WorkQueue.topLevelExec
  [31] ForkJoinPool.scan
  [32] ForkJoinPool.runWorker
  [33] ForkJoinWorkerThread.run

--- 13701411 total (0.13%), 13754 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] GameOfLife$$Lambda$77.0x0000000801037a68.test
  [ 4] ChannelsGrid.lambda$forEachChannel$1
  [ 5] ChannelsGrid$$Lambda$78.0x0000000801037ca0.accept
  [ 6] Dimensions.forEachRowCol
  [ 7] ChannelsGrid.forEachChannel
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$4
  [10] GameOfLife$$Lambda$53.0x0000000801035258.run
  [11] VirtualThread.run
  [12] VirtualThread$VThreadContinuation.lambda$new$0
  [13] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [14] Continuation.enter0
  [15] Continuation.enter
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 13307925 total (0.13%), 13356 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 13188875 total (0.13%), 13244 samples
  [ 0] VirtualThread.unpark
  [ 1] System$2.unparkVirtualThread
  [ 2] VirtualThreads.unpark
  [ 3] LockSupport.unpark
  [ 4] AbstractQueuedSynchronizer.signalNext
  [ 5] AbstractQueuedSynchronizer.release
  [ 6] ReentrantLock.unlock
  [ 7] LinkedBlockingQueue.signalNotEmpty
  [ 8] LinkedBlockingQueue.put
  [ 9] BlockingQueue.put
  [10] Channel.put
  [11] Cell.lambda$notifyLiveness$0
  [12] Cell$$Lambda$58.0x00000008010358a0.accept
  [13] ArrayList.forEach
  [14] Cell.notifyLiveness
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 13051505 total (0.13%), 13110 samples
  [ 0] ForkJoinPool$WorkQueue.push
  [ 1] ForkJoinPool.poolSubmit
  [ 2] ForkJoinPool.execute
  [ 3] VirtualThread.submitRunContinuation
  [ 4] VirtualThread.submitRunContinuation
  [ 5] VirtualThread.unpark
  [ 6] System$2.unparkVirtualThread
  [ 7] VirtualThreads.unpark
  [ 8] LockSupport.unpark
  [ 9] AbstractQueuedSynchronizer.signalNext
  [10] AbstractQueuedSynchronizer.release
  [11] ReentrantLock.unlock
  [12] LinkedBlockingQueue.signalNotEmpty
  [13] LinkedBlockingQueue.put
  [14] BlockingQueue.put
  [15] Channel.put
  [16] TickPerCell.lambda$tick$0
  [17] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [18] ChannelsGrid.lambda$forEachChannel$0
  [19] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [20] Dimensions.forEachRowCol
  [21] ChannelsGrid.forEachChannel
  [22] TickPerCell.tick
  [23] GameOfLife.calculateFrame
  [24] GameOfLife.lambda$calculateFrameBlocking$4
  [25] GameOfLife$$Lambda$53.0x0000000801035258.run
  [26] VirtualThread.run
  [27] VirtualThread$VThreadContinuation.lambda$new$0
  [28] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [29] Continuation.enter0
  [30] Continuation.enter
  [31] Continuation.enterSpecial
  [32] Continuation.run
  [33] VirtualThread.runContinuation
  [34] VirtualThread$$Lambda$51.0x000000080103df08.run
  [35] ForkJoinTask$RunnableExecuteAction.exec
  [36] ForkJoinTask.doExec
  [37] ForkJoinPool$WorkQueue.topLevelExec
  [38] ForkJoinPool.scan
  [39] ForkJoinPool.runWorker
  [40] ForkJoinWorkerThread.run

--- 13011134 total (0.13%), 13081 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] Cell.run
  [14] Continuation.enterSpecial
  [15] Continuation.run
  [16] VirtualThread.runContinuation
  [17] VirtualThread$$Lambda$51.0x000000080103df08.run
  [18] ForkJoinTask$RunnableExecuteAction.exec
  [19] ForkJoinTask.doExec
  [20] ForkJoinPool$WorkQueue.topLevelExec
  [21] ForkJoinPool.scan
  [22] ForkJoinPool.runWorker
  [23] ForkJoinWorkerThread.run

--- 12630370 total (0.12%), 12677 samples
  [ 0] ForkJoinPool$WorkQueue.push
  [ 1] ForkJoinPool.poolSubmit
  [ 2] ForkJoinPool.execute
  [ 3] VirtualThread.submitRunContinuation
  [ 4] VirtualThread.submitRunContinuation
  [ 5] VirtualThread.unpark
  [ 6] System$2.unparkVirtualThread
  [ 7] VirtualThreads.unpark
  [ 8] LockSupport.unpark
  [ 9] AbstractQueuedSynchronizer.signalNext
  [10] AbstractQueuedSynchronizer.release
  [11] ReentrantLock.unlock
  [12] LinkedBlockingQueue.signalNotEmpty
  [13] LinkedBlockingQueue.put
  [14] BlockingQueue.put
  [15] Channel.put
  [16] TickPerCell.lambda$tick$0
  [17] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [18] ChannelsGrid.lambda$forEachChannel$0
  [19] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [20] Dimensions.forEachRowCol
  [21] ChannelsGrid.forEachChannel
  [22] TickPerCell.tick
  [23] GameOfLife.calculateFrame
  [24] GameOfLife.lambda$calculateFrameBlocking$4
  [25] GameOfLife$$Lambda$53.0x0000000801035258.run
  [26] VirtualThread.run
  [27] VirtualThread$VThreadContinuation.lambda$new$0
  [28] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [29] Continuation.enter0
  [30] Continuation.enter
  [31] Continuation.enterSpecial
  [32] Continuation.run
  [33] VirtualThread.runContinuation
  [34] VirtualThread$$Lambda$51.0x000000080103df08.run
  [35] ForkJoinTask$RunnableExecuteAction.exec
  [36] ForkJoinTask.doExec
  [37] ForkJoinPool$WorkQueue.topLevelExec
  [38] ForkJoinPool.scan
  [39] ForkJoinPool.runWorker
  [40] ForkJoinWorkerThread.run

--- 12577798 total (0.12%), 12540 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$53.0x0000000801035258.run
  [17] VirtualThread.run
  [18] VirtualThread$VThreadContinuation.lambda$new$0
  [19] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [20] Continuation.enter0
  [21] Continuation.enter
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103df08.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run

--- 12142360 total (0.12%), 12181 samples
  [ 0] ThawBase::thaw_slow(stackChunkOopDesc*, bool)
  [ 1] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 2] Cont thaw
  [ 3] [not_walkable_Java]

--- 11719386 total (0.11%), 11770 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 11572380 total (0.11%), 11629 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 11420906 total (0.11%), 11447 samples
  [ 0] AbstractQueuedSynchronizer.acquire
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 10968375 total (0.11%), 11003 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 10959997 total (0.11%), 11012 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 10943690 total (0.11%), 10982 samples
  [ 0] ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  [ 1] ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  [ 2] ThawBase::thaw_slow(stackChunkOopDesc*, bool)
  [ 3] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 4] Cont thaw
  [ 5] [not_walkable_Java]

--- 10817237 total (0.11%), 10840 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run

--- 10751974 total (0.10%), 10770 samples
  [ 0] Unsafe.getAndBitwiseAndInt
  [ 1] AbstractQueuedSynchronizer$Node.getAndUnsetStatus
  [ 2] AbstractQueuedSynchronizer.signalNext
  [ 3] AbstractQueuedSynchronizer.release
  [ 4] ReentrantLock.unlock
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$58.0x00000008010358a0.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] Cell.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103df08.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run

--- 10692230 total (0.10%), 10714 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.enableWait
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] Continuation.enterSpecial
  [ 3] Continuation.run
  [ 4] VirtualThread.runContinuation
  [ 5] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 6] ForkJoinTask$RunnableExecuteAction.exec
  [ 7] ForkJoinTask.doExec
  [ 8] ForkJoinPool$WorkQueue.topLevelExec
  [ 9] ForkJoinPool.scan
  [10] ForkJoinPool.runWorker
  [11] ForkJoinWorkerThread.run

--- 10676010 total (0.10%), 10692 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 10437949 total (0.10%), 10458 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 10279949 total (0.10%), 10302 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 10234372 total (0.10%), 10205 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] BlockingQueue.take
  [13] Channel.take
  [14] Cell$$Lambda$63.0x00000008010369b0.apply
  [15] ReferencePipeline$3$1.accept
  [16] ArrayList$ArrayListSpliterator.forEachRemaining
  [17] AbstractPipeline.copyInto
  [18] AbstractPipeline.wrapAndCopyInto
  [19] ReduceOps$ReduceOp.evaluateSequential
  [20] AbstractPipeline.evaluate
  [21] IntPipeline.reduce
  [22] IntPipeline.sum
  [23] Cell.calculateNextState
  [24] Cell.run
  [25] Continuation.enterSpecial
  [26] Continuation.run
  [27] VirtualThread.runContinuation
  [28] VirtualThread$$Lambda$51.0x000000080103df08.run
  [29] ForkJoinTask$RunnableExecuteAction.exec
  [30] ForkJoinTask.doExec
  [31] ForkJoinPool$WorkQueue.topLevelExec
  [32] ForkJoinPool.scan
  [33] ForkJoinPool.runWorker
  [34] ForkJoinWorkerThread.run

--- 10094816 total (0.10%), 10072 samples
  [ 0] Cont thaw
  [ 1] [unknown_Java]

--- 9881476 total (0.10%), 9894 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$53.0x0000000801035258.run
  [14] VirtualThread.run
  [15] VirtualThread$VThreadContinuation.lambda$new$0
  [16] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [17] Continuation.enter0
  [18] Continuation.enter
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103df08.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run

--- 9879350 total (0.10%), 9895 samples
  [ 0] Unsafe.getAndSetBoolean
  [ 1] VirtualThread.getAndSetParkPermit
  [ 2] VirtualThread.unpark
  [ 3] System$2.unparkVirtualThread
  [ 4] VirtualThreads.unpark
  [ 5] LockSupport.unpark
  [ 6] AbstractQueuedSynchronizer.signalNext
  [ 7] AbstractQueuedSynchronizer.release
  [ 8] ReentrantLock.unlock
  [ 9] LinkedBlockingQueue.signalNotEmpty
  [10] LinkedBlockingQueue.put
  [11] BlockingQueue.put
  [12] Channel.put
  [13] TickPerCell.lambda$tick$0
  [14] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [15] ChannelsGrid.lambda$forEachChannel$0
  [16] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [17] Dimensions.forEachRowCol
  [18] ChannelsGrid.forEachChannel
  [19] TickPerCell.tick
  [20] GameOfLife.calculateFrame
  [21] GameOfLife.lambda$calculateFrameBlocking$4
  [22] GameOfLife$$Lambda$53.0x0000000801035258.run
  [23] VirtualThread.run
  [24] VirtualThread$VThreadContinuation.lambda$new$0
  [25] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [26] Continuation.enter0
  [27] Continuation.enter
  [28] Continuation.enterSpecial
  [29] Continuation.run
  [30] VirtualThread.runContinuation
  [31] VirtualThread$$Lambda$51.0x000000080103df08.run
  [32] ForkJoinTask$RunnableExecuteAction.exec
  [33] ForkJoinTask.doExec
  [34] ForkJoinPool$WorkQueue.topLevelExec
  [35] ForkJoinPool.scan
  [36] ForkJoinPool.runWorker
  [37] ForkJoinWorkerThread.run

--- 9845250 total (0.10%), 9883 samples
  [ 0] LockSupport.unpark
  [ 1] AbstractQueuedSynchronizer.signalNext
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 9752882 total (0.09%), 9800 samples
  [ 0] AbstractQueuedSynchronizer.casTail
  [ 1] AbstractQueuedSynchronizer.enqueue
  [ 2] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 3] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$58.0x00000008010358a0.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] Cell.run
  [13] Continuation.enterSpecial
  [14] Continuation.run
  [15] VirtualThread.runContinuation
  [16] VirtualThread$$Lambda$51.0x000000080103df08.run
  [17] ForkJoinTask$RunnableExecuteAction.exec
  [18] ForkJoinTask.doExec
  [19] ForkJoinPool$WorkQueue.topLevelExec
  [20] ForkJoinPool.scan
  [21] ForkJoinPool.runWorker
  [22] ForkJoinWorkerThread.run

--- 9748640 total (0.09%), 9802 samples
  [ 0] int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
  [ 1] Continuation.enterSpecial
  [ 2] Continuation.run
  [ 3] VirtualThread.runContinuation
  [ 4] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 5] ForkJoinTask$RunnableExecuteAction.exec
  [ 6] ForkJoinTask.doExec
  [ 7] ForkJoinPool$WorkQueue.topLevelExec
  [ 8] ForkJoinPool.scan
  [ 9] ForkJoinPool.runWorker
  [10] ForkJoinWorkerThread.run

--- 9644549 total (0.09%), 9671 samples
  [ 0] ReentrantLock$NonfairSync.initialTryLock
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 9624039 total (0.09%), 9610 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] BlockingQueue.take
  [13] Channel.take
  [14] Cell$$Lambda$63.0x00000008010369b0.apply
  [15] ReferencePipeline$3$1.accept
  [16] ArrayList$ArrayListSpliterator.forEachRemaining
  [17] AbstractPipeline.copyInto
  [18] AbstractPipeline.wrapAndCopyInto
  [19] ReduceOps$ReduceOp.evaluateSequential
  [20] AbstractPipeline.evaluate
  [21] IntPipeline.reduce
  [22] IntPipeline.sum
  [23] Cell.calculateNextState
  [24] Cell.run
  [25] Continuation.enterSpecial
  [26] Continuation.run
  [27] VirtualThread.runContinuation
  [28] VirtualThread$$Lambda$51.0x000000080103df08.run
  [29] ForkJoinTask$RunnableExecuteAction.exec
  [30] ForkJoinTask.doExec
  [31] ForkJoinPool$WorkQueue.topLevelExec
  [32] ForkJoinPool.scan
  [33] ForkJoinPool.runWorker
  [34] ForkJoinWorkerThread.run

--- 9543356 total (0.09%), 9584 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 9355286 total (0.09%), 9325 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] BlockingQueue.take
  [13] Channel.take
  [14] TickPerCell.waitTick
  [15] Cell.notifyLiveness
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 8952159 total (0.09%), 8994 samples
  [ 0] ForkJoinPool$WorkQueue.push
  [ 1] ForkJoinPool.poolSubmit
  [ 2] ForkJoinPool.execute
  [ 3] VirtualThread.submitRunContinuation
  [ 4] VirtualThread.submitRunContinuation
  [ 5] VirtualThread.unpark
  [ 6] System$2.unparkVirtualThread
  [ 7] VirtualThreads.unpark
  [ 8] LockSupport.unpark
  [ 9] AbstractQueuedSynchronizer.signalNext
  [10] AbstractQueuedSynchronizer.release
  [11] ReentrantLock.unlock
  [12] LinkedBlockingQueue.signalNotEmpty
  [13] LinkedBlockingQueue.put
  [14] BlockingQueue.put
  [15] Channel.put
  [16] TickPerCell.lambda$tick$0
  [17] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [18] ChannelsGrid.lambda$forEachChannel$0
  [19] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [20] Dimensions.forEachRowCol
  [21] ChannelsGrid.forEachChannel
  [22] TickPerCell.tick
  [23] GameOfLife.calculateFrame
  [24] GameOfLife.lambda$calculateFrameBlocking$4
  [25] GameOfLife$$Lambda$53.0x0000000801035258.run
  [26] VirtualThread.run
  [27] VirtualThread$VThreadContinuation.lambda$new$0
  [28] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [29] Continuation.enter0
  [30] Continuation.enter
  [31] Continuation.enterSpecial
  [32] Continuation.run
  [33] VirtualThread.runContinuation
  [34] VirtualThread$$Lambda$51.0x000000080103df08.run
  [35] ForkJoinTask$RunnableExecuteAction.exec
  [36] ForkJoinTask.doExec
  [37] ForkJoinPool$WorkQueue.topLevelExec
  [38] ForkJoinPool.scan
  [39] ForkJoinPool.runWorker
  [40] ForkJoinWorkerThread.run

--- 8864810 total (0.09%), 8894 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 8783730 total (0.09%), 8821 samples
  [ 0] ForkJoinPool$WorkQueue.push
  [ 1] ForkJoinPool.poolSubmit
  [ 2] ForkJoinPool.execute
  [ 3] VirtualThread.submitRunContinuation
  [ 4] VirtualThread.submitRunContinuation
  [ 5] VirtualThread.unpark
  [ 6] System$2.unparkVirtualThread
  [ 7] VirtualThreads.unpark
  [ 8] LockSupport.unpark
  [ 9] AbstractQueuedSynchronizer.signalNext
  [10] AbstractQueuedSynchronizer.release
  [11] ReentrantLock.unlock
  [12] LinkedBlockingQueue.signalNotEmpty
  [13] LinkedBlockingQueue.put
  [14] BlockingQueue.put
  [15] Channel.put
  [16] TickPerCell.lambda$tick$0
  [17] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [18] ChannelsGrid.lambda$forEachChannel$0
  [19] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [20] Dimensions.forEachRowCol
  [21] ChannelsGrid.forEachChannel
  [22] TickPerCell.tick
  [23] GameOfLife.calculateFrame
  [24] GameOfLife.lambda$calculateFrameBlocking$4
  [25] GameOfLife$$Lambda$53.0x0000000801035258.run
  [26] VirtualThread.run
  [27] VirtualThread$VThreadContinuation.lambda$new$0
  [28] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [29] Continuation.enter0
  [30] Continuation.enter
  [31] Continuation.enterSpecial
  [32] Continuation.run
  [33] VirtualThread.runContinuation
  [34] VirtualThread$$Lambda$51.0x000000080103df08.run
  [35] ForkJoinTask$RunnableExecuteAction.exec
  [36] ForkJoinTask.doExec
  [37] ForkJoinPool$WorkQueue.topLevelExec
  [38] ForkJoinPool.scan
  [39] ForkJoinPool.runWorker
  [40] ForkJoinWorkerThread.run

--- 8636949 total (0.08%), 8671 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 8586815 total (0.08%), 8625 samples
  [ 0] VirtualThread.compareAndSetState
  [ 1] VirtualThread.unpark
  [ 2] System$2.unparkVirtualThread
  [ 3] VirtualThreads.unpark
  [ 4] LockSupport.unpark
  [ 5] AbstractQueuedSynchronizer.signalNext
  [ 6] AbstractQueuedSynchronizer.release
  [ 7] ReentrantLock.unlock
  [ 8] LinkedBlockingQueue.signalNotEmpty
  [ 9] LinkedBlockingQueue.put
  [10] BlockingQueue.put
  [11] Channel.put
  [12] Cell.lambda$notifyLiveness$0
  [13] Cell$$Lambda$58.0x00000008010358a0.accept
  [14] ArrayList.forEach
  [15] Cell.notifyLiveness
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 8532567 total (0.08%), 8557 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 8447743 total (0.08%), 8456 samples
  [ 0] Channel.put
  [ 1] [unknown_Java]

--- 8232859 total (0.08%), 8249 samples
  [ 0] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 1] ArrayList.forEach
  [ 2] Cell.notifyLiveness
  [ 3] Cell.run
  [ 4] Continuation.enterSpecial
  [ 5] Continuation.run
  [ 6] VirtualThread.runContinuation
  [ 7] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 8] ForkJoinTask$RunnableExecuteAction.exec
  [ 9] ForkJoinTask.doExec
  [10] ForkJoinPool$WorkQueue.topLevelExec
  [11] ForkJoinPool.scan
  [12] ForkJoinPool.runWorker
  [13] ForkJoinWorkerThread.run

--- 8107656 total (0.08%), 8118 samples
  [ 0] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 1] AbstractPipeline.copyInto
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 8069940 total (0.08%), 8101 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] TickPerCell.waitTick
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103df08.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run

--- 7983302 total (0.08%), 8016 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 1] LinkedBlockingQueue.signalNotEmpty
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 7967195 total (0.08%), 7999 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] TickPerCell.tick
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$53.0x0000000801035258.run
  [ 6] VirtualThread.run
  [ 7] VirtualThread$VThreadContinuation.lambda$new$0
  [ 8] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [ 9] Continuation.enter0
  [10] Continuation.enter
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 7877491 total (0.08%), 7886 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] Cell.run
  [ 5] Continuation.enterSpecial
  [ 6] Continuation.run
  [ 7] VirtualThread.runContinuation
  [ 8] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 9] ForkJoinTask$RunnableExecuteAction.exec
  [10] ForkJoinTask.doExec
  [11] ForkJoinPool$WorkQueue.topLevelExec
  [12] ForkJoinPool.scan
  [13] ForkJoinPool.runWorker
  [14] ForkJoinWorkerThread.run

--- 7740069 total (0.08%), 7770 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 7630830 total (0.07%), 7626 samples
  [ 0] VirtualThread.setParkPermit
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run

--- 7601991 total (0.07%), 7570 samples
  [ 0] VirtualThread.mount
  [ 1] VirtualThread.yieldContinuation
  [ 2] VirtualThread.park
  [ 3] System$2.parkVirtualThread
  [ 4] VirtualThreads.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] BlockingQueue.take
  [12] Channel.take
  [13] TickPerCell.waitTick
  [14] Cell.notifyLiveness
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 7557127 total (0.07%), 7570 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 7513205 total (0.07%), 7552 samples
  [ 0] VirtualThread.afterYield
  [ 1] VirtualThread.runContinuation
  [ 2] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 3] ForkJoinTask$RunnableExecuteAction.exec
  [ 4] ForkJoinTask.doExec
  [ 5] ForkJoinPool$WorkQueue.topLevelExec
  [ 6] ForkJoinPool.scan
  [ 7] ForkJoinPool.runWorker
  [ 8] ForkJoinWorkerThread.run

--- 7289189 total (0.07%), 7322 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] Cell.run
  [ 8] Continuation.enterSpecial
  [ 9] Continuation.run
  [10] VirtualThread.runContinuation
  [11] VirtualThread$$Lambda$51.0x000000080103df08.run
  [12] ForkJoinTask$RunnableExecuteAction.exec
  [13] ForkJoinTask.doExec
  [14] ForkJoinPool$WorkQueue.topLevelExec
  [15] ForkJoinPool.scan
  [16] ForkJoinPool.runWorker
  [17] ForkJoinWorkerThread.run

--- 7282175 total (0.07%), 7268 samples
  [ 0] Cell.calculateNextState
  [ 1] Cell.run
  [ 2] Continuation.enterSpecial
  [ 3] Continuation.run
  [ 4] VirtualThread.runContinuation
  [ 5] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 6] ForkJoinTask$RunnableExecuteAction.exec
  [ 7] ForkJoinTask.doExec
  [ 8] ForkJoinPool$WorkQueue.topLevelExec
  [ 9] ForkJoinPool.scan
  [10] ForkJoinPool.runWorker
  [11] ForkJoinWorkerThread.run

--- 7252445 total (0.07%), 7266 samples
  [ 0] Sink$ChainedReference.<init>
  [ 1] ReferencePipeline$3$1.<init>
  [ 2] ReferencePipeline$3.opWrapSink
  [ 3] AbstractPipeline.wrapSink
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 6947245 total (0.07%), 6973 samples
  [ 0] ForkJoinPool$WorkQueue.push
  [ 1] ForkJoinPool.poolSubmit
  [ 2] ForkJoinPool.execute
  [ 3] VirtualThread.submitRunContinuation
  [ 4] VirtualThread.submitRunContinuation
  [ 5] VirtualThread.unpark
  [ 6] System$2.unparkVirtualThread
  [ 7] VirtualThreads.unpark
  [ 8] LockSupport.unpark
  [ 9] AbstractQueuedSynchronizer.signalNext
  [10] AbstractQueuedSynchronizer.release
  [11] ReentrantLock.unlock
  [12] LinkedBlockingQueue.signalNotEmpty
  [13] LinkedBlockingQueue.put
  [14] BlockingQueue.put
  [15] Channel.put
  [16] TickPerCell.lambda$tick$0
  [17] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [18] ChannelsGrid.lambda$forEachChannel$0
  [19] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [20] Dimensions.forEachRowCol
  [21] ChannelsGrid.forEachChannel
  [22] TickPerCell.tick
  [23] GameOfLife.calculateFrame
  [24] GameOfLife.lambda$calculateFrameBlocking$4
  [25] GameOfLife$$Lambda$53.0x0000000801035258.run
  [26] VirtualThread.run
  [27] VirtualThread$VThreadContinuation.lambda$new$0
  [28] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [29] Continuation.enter0
  [30] Continuation.enter
  [31] Continuation.enterSpecial
  [32] Continuation.run
  [33] VirtualThread.runContinuation
  [34] VirtualThread$$Lambda$51.0x000000080103df08.run
  [35] ForkJoinTask$RunnableExecuteAction.exec
  [36] ForkJoinTask.doExec
  [37] ForkJoinPool$WorkQueue.topLevelExec
  [38] ForkJoinPool.scan
  [39] ForkJoinPool.runWorker
  [40] ForkJoinWorkerThread.run

--- 6914058 total (0.07%), 6942 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 1] [unknown_Java]

--- 6724102 total (0.07%), 6717 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] TickPerCell.lambda$tick$0
  [ 7] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 8] ChannelsGrid.lambda$forEachChannel$0
  [ 9] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] TickPerCell.tick
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$53.0x0000000801035258.run
  [16] VirtualThread.run
  [17] VirtualThread$VThreadContinuation.lambda$new$0
  [18] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [19] Continuation.enter0
  [20] Continuation.enter
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103df08.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run

--- 6561944 total (0.06%), 6592 samples
  [ 0] Unsafe.getAndBitwiseOrInt
  [ 1] ForkJoinTask.getAndBitwiseOrStatus
  [ 2] ForkJoinTask.setDone
  [ 3] ForkJoinTask.doExec
  [ 4] ForkJoinPool$WorkQueue.topLevelExec
  [ 5] ForkJoinPool.scan
  [ 6] ForkJoinPool.runWorker
  [ 7] ForkJoinWorkerThread.run

--- 6538493 total (0.06%), 6555 samples
  [ 0] AbstractQueuedSynchronizer.acquire
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 6524114 total (0.06%), 6543 samples
  [ 0] Sink$ChainedReference.begin
  [ 1] Sink$ChainedReference.begin
  [ 2] AbstractPipeline.copyInto
  [ 3] AbstractPipeline.wrapAndCopyInto
  [ 4] ReduceOps$ReduceOp.evaluateSequential
  [ 5] AbstractPipeline.evaluate
  [ 6] IntPipeline.reduce
  [ 7] IntPipeline.sum
  [ 8] Cell.calculateNextState
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 6477839 total (0.06%), 6498 samples
  [ 0] AbstractQueuedSynchronizer.acquire
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 6435589 total (0.06%), 6417 samples
  [ 0] VirtualThreads.unpark
  [ 1] LockSupport.unpark
  [ 2] AbstractQueuedSynchronizer.signalNext
  [ 3] AbstractQueuedSynchronizer.release
  [ 4] ReentrantLock.unlock
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] TickPerCell.lambda$tick$0
  [ 9] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [10] ChannelsGrid.lambda$forEachChannel$0
  [11] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [12] Dimensions.forEachRowCol
  [13] ChannelsGrid.forEachChannel
  [14] TickPerCell.tick
  [15] GameOfLife.calculateFrame
  [16] GameOfLife.lambda$calculateFrameBlocking$4
  [17] GameOfLife$$Lambda$53.0x0000000801035258.run
  [18] VirtualThread.run
  [19] VirtualThread$VThreadContinuation.lambda$new$0
  [20] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [21] Continuation.enter0
  [22] Continuation.enter
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$51.0x000000080103df08.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run

--- 6391985 total (0.06%), 6375 samples
  [ 0] Continuation.yield0
  [ 1] Continuation.yield
  [ 2] VirtualThread.yieldContinuation
  [ 3] VirtualThread.park
  [ 4] System$2.parkVirtualThread
  [ 5] VirtualThreads.park
  [ 6] LockSupport.park
  [ 7] AbstractQueuedSynchronizer$ConditionNode.block
  [ 8] ForkJoinPool.unmanagedBlock
  [ 9] ForkJoinPool.managedBlock
  [10] AbstractQueuedSynchronizer$ConditionObject.await
  [11] LinkedBlockingQueue.take
  [12] BlockingQueue.take
  [13] Channel.take
  [14] TickPerCell.waitTick
  [15] Cell.notifyLiveness
  [16] Cell.run
  [17] Continuation.enterSpecial
  [18] Continuation.run
  [19] VirtualThread.runContinuation
  [20] VirtualThread$$Lambda$51.0x000000080103df08.run
  [21] ForkJoinTask$RunnableExecuteAction.exec
  [22] ForkJoinTask.doExec
  [23] ForkJoinPool$WorkQueue.topLevelExec
  [24] ForkJoinPool.scan
  [25] ForkJoinPool.runWorker
  [26] ForkJoinWorkerThread.run

--- 6324665 total (0.06%), 6363 samples
  [ 0] VirtualThread.park
  [ 1] System$2.parkVirtualThread
  [ 2] VirtualThreads.park
  [ 3] LockSupport.park
  [ 4] AbstractQueuedSynchronizer$ConditionNode.block
  [ 5] ForkJoinPool.unmanagedBlock
  [ 6] ForkJoinPool.managedBlock
  [ 7] AbstractQueuedSynchronizer$ConditionObject.await
  [ 8] LinkedBlockingQueue.take
  [ 9] BlockingQueue.take
  [10] Channel.take
  [11] Cell$$Lambda$63.0x00000008010369b0.apply
  [12] ReferencePipeline$3$1.accept
  [13] ArrayList$ArrayListSpliterator.forEachRemaining
  [14] AbstractPipeline.copyInto
  [15] AbstractPipeline.wrapAndCopyInto
  [16] ReduceOps$ReduceOp.evaluateSequential
  [17] AbstractPipeline.evaluate
  [18] IntPipeline.reduce
  [19] IntPipeline.sum
  [20] Cell.calculateNextState
  [21] Cell.run
  [22] Continuation.enterSpecial
  [23] Continuation.run
  [24] VirtualThread.runContinuation
  [25] VirtualThread$$Lambda$51.0x000000080103df08.run
  [26] ForkJoinTask$RunnableExecuteAction.exec
  [27] ForkJoinTask.doExec
  [28] ForkJoinPool$WorkQueue.topLevelExec
  [29] ForkJoinPool.scan
  [30] ForkJoinPool.runWorker
  [31] ForkJoinWorkerThread.run

--- 6230391 total (0.06%), 6237 samples
  [ 0] ArrayList.forEach
  [ 1] Cell.notifyLiveness
  [ 2] Cell.run
  [ 3] Continuation.enterSpecial
  [ 4] Continuation.run
  [ 5] VirtualThread.runContinuation
  [ 6] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 7] ForkJoinTask$RunnableExecuteAction.exec
  [ 8] ForkJoinTask.doExec
  [ 9] ForkJoinPool$WorkQueue.topLevelExec
  [10] ForkJoinPool.scan
  [11] ForkJoinPool.runWorker
  [12] ForkJoinWorkerThread.run

--- 6215743 total (0.06%), 6222 samples
  [ 0] ReferencePipeline$4$1.accept
  [ 1] ReferencePipeline$3$1.accept
  [ 2] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 3] AbstractPipeline.copyInto
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 6163531 total (0.06%), 6187 samples
  [ 0] ThawBase::finalize_thaw(frame&, int)
  [ 1] ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  [ 2] ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  [ 3] ThawBase::thaw_slow(stackChunkOopDesc*, bool)
  [ 4] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 5] Cont thaw
  [ 6] [not_walkable_Java]

--- 6161533 total (0.06%), 6190 samples
  [ 0] ForkJoinPool$WorkQueue.push
  [ 1] ForkJoinPool.poolSubmit
  [ 2] ForkJoinPool.execute
  [ 3] VirtualThread.submitRunContinuation
  [ 4] VirtualThread.submitRunContinuation
  [ 5] VirtualThread.unpark
  [ 6] System$2.unparkVirtualThread
  [ 7] VirtualThreads.unpark
  [ 8] LockSupport.unpark
  [ 9] AbstractQueuedSynchronizer.signalNext
  [10] AbstractQueuedSynchronizer.release
  [11] ReentrantLock.unlock
  [12] LinkedBlockingQueue.signalNotEmpty
  [13] LinkedBlockingQueue.put
  [14] BlockingQueue.put
  [15] Channel.put
  [16] Cell.lambda$notifyLiveness$0
  [17] Cell$$Lambda$58.0x00000008010358a0.accept
  [18] ArrayList.forEach
  [19] Cell.notifyLiveness
  [20] Cell.run
  [21] Continuation.enterSpecial
  [22] Continuation.run
  [23] VirtualThread.runContinuation
  [24] VirtualThread$$Lambda$51.0x000000080103df08.run
  [25] ForkJoinTask$RunnableExecuteAction.exec
  [26] ForkJoinTask.doExec
  [27] ForkJoinPool$WorkQueue.topLevelExec
  [28] ForkJoinPool.scan
  [29] ForkJoinPool.runWorker
  [30] ForkJoinWorkerThread.run

--- 6127779 total (0.06%), 6157 samples
  [ 0] ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  [ 1] ThawBase::thaw_slow(stackChunkOopDesc*, bool)
  [ 2] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 3] Cont thaw
  [ 4] [not_walkable_Java]

--- 6107088 total (0.06%), 6127 samples
  [ 0] ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
  [ 1] ThawBase::thaw_slow(stackChunkOopDesc*, bool)
  [ 2] long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
  [ 3] Cont thaw return barrier
  [ 4] [not_walkable_Java]

--- 6106244 total (0.06%), 6123 samples
  [ 0] ReferencePipeline$3$1.accept
  [ 1] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 2] AbstractPipeline.copyInto
  [ 3] AbstractPipeline.wrapAndCopyInto
  [ 4] ReduceOps$ReduceOp.evaluateSequential
  [ 5] AbstractPipeline.evaluate
  [ 6] IntPipeline.reduce
  [ 7] IntPipeline.sum
  [ 8] Cell.calculateNextState
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 6059428 total (0.06%), 6073 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] Cell.run
  [11] Continuation.enterSpecial
  [12] Continuation.run
  [13] VirtualThread.runContinuation
  [14] VirtualThread$$Lambda$51.0x000000080103df08.run
  [15] ForkJoinTask$RunnableExecuteAction.exec
  [16] ForkJoinTask.doExec
  [17] ForkJoinPool$WorkQueue.topLevelExec
  [18] ForkJoinPool.scan
  [19] ForkJoinPool.runWorker
  [20] ForkJoinWorkerThread.run

--- 5959894 total (0.06%), 5965 samples
  [ 0] AbstractQueuedSynchronizer.enqueue
  [ 1] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 2] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$58.0x00000008010358a0.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] Cell.run
  [12] Continuation.enterSpecial
  [13] Continuation.run
  [14] VirtualThread.runContinuation
  [15] VirtualThread$$Lambda$51.0x000000080103df08.run
  [16] ForkJoinTask$RunnableExecuteAction.exec
  [17] ForkJoinTask.doExec
  [18] ForkJoinPool$WorkQueue.topLevelExec
  [19] ForkJoinPool.scan
  [20] ForkJoinPool.runWorker
  [21] ForkJoinWorkerThread.run

--- 5948216 total (0.06%), 5966 samples
  [ 0] AbstractQueuedSynchronizer$Node.setPrevRelaxed
  [ 1] AbstractQueuedSynchronizer.enqueue
  [ 2] AbstractQueuedSynchronizer$ConditionObject.doSignal
  [ 3] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] TickPerCell.lambda$tick$0
  [ 9] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [10] ChannelsGrid.lambda$forEachChannel$0
  [11] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [12] Dimensions.forEachRowCol
  [13] ChannelsGrid.forEachChannel
  [14] TickPerCell.tick
  [15] GameOfLife.calculateFrame
  [16] GameOfLife.lambda$calculateFrameBlocking$4
  [17] GameOfLife$$Lambda$53.0x0000000801035258.run
  [18] VirtualThread.run
  [19] VirtualThread$VThreadContinuation.lambda$new$0
  [20] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [21] Continuation.enter0
  [22] Continuation.enter
  [23] Continuation.enterSpecial
  [24] Continuation.run
  [25] VirtualThread.runContinuation
  [26] VirtualThread$$Lambda$51.0x000000080103df08.run
  [27] ForkJoinTask$RunnableExecuteAction.exec
  [28] ForkJoinTask.doExec
  [29] ForkJoinPool$WorkQueue.topLevelExec
  [30] ForkJoinPool.scan
  [31] ForkJoinPool.runWorker
  [32] ForkJoinWorkerThread.run

--- 5842431 total (0.06%), 5868 samples
  [ 0] VirtualThread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] Cell.run
  [ 9] Continuation.enterSpecial
  [10] Continuation.run
  [11] VirtualThread.runContinuation
  [12] VirtualThread$$Lambda$51.0x000000080103df08.run
  [13] ForkJoinTask$RunnableExecuteAction.exec
  [14] ForkJoinTask.doExec
  [15] ForkJoinPool$WorkQueue.topLevelExec
  [16] ForkJoinPool.scan
  [17] ForkJoinPool.runWorker
  [18] ForkJoinWorkerThread.run

--- 5772332 total (0.06%), 5794 samples
  [ 0] VirtualThread.unpark
  [ 1] System$2.unparkVirtualThread
  [ 2] VirtualThreads.unpark
  [ 3] LockSupport.unpark
  [ 4] AbstractQueuedSynchronizer.signalNext
  [ 5] AbstractQueuedSynchronizer.release
  [ 6] ReentrantLock.unlock
  [ 7] LinkedBlockingQueue.signalNotEmpty
  [ 8] LinkedBlockingQueue.put
  [ 9] BlockingQueue.put
  [10] Channel.put
  [11] Cell.lambda$notifyLiveness$0
  [12] Cell$$Lambda$58.0x00000008010358a0.accept
  [13] ArrayList.forEach
  [14] Cell.notifyLiveness
  [15] Cell.run
  [16] Continuation.enterSpecial
  [17] Continuation.run
  [18] VirtualThread.runContinuation
  [19] VirtualThread$$Lambda$51.0x000000080103df08.run
  [20] ForkJoinTask$RunnableExecuteAction.exec
  [21] ForkJoinTask.doExec
  [22] ForkJoinPool$WorkQueue.topLevelExec
  [23] ForkJoinPool.scan
  [24] ForkJoinPool.runWorker
  [25] ForkJoinWorkerThread.run

--- 5665241 total (0.06%), 5683 samples
  [ 0] AbstractQueuedSynchronizer$ConditionNode.isReleasable
  [ 1] ForkJoinPool.unmanagedBlock
  [ 2] ForkJoinPool.managedBlock
  [ 3] AbstractQueuedSynchronizer$ConditionObject.await
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$63.0x00000008010369b0.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] Cell.run
  [18] Continuation.enterSpecial
  [19] Continuation.run
  [20] VirtualThread.runContinuation
  [21] VirtualThread$$Lambda$51.0x000000080103df08.run
  [22] ForkJoinTask$RunnableExecuteAction.exec
  [23] ForkJoinTask.doExec
  [24] ForkJoinPool$WorkQueue.topLevelExec
  [25] ForkJoinPool.scan
  [26] ForkJoinPool.runWorker
  [27] ForkJoinWorkerThread.run

--- 5526032 total (0.05%), 5520 samples
  [ 0] ArrayList.spliterator
  [ 1] Collection.stream
  [ 2] Cell.calculateNextState
  [ 3] Cell.run
  [ 4] Continuation.enterSpecial
  [ 5] Continuation.run
  [ 6] VirtualThread.runContinuation
  [ 7] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 8] ForkJoinTask$RunnableExecuteAction.exec
  [ 9] ForkJoinTask.doExec
  [10] ForkJoinPool$WorkQueue.topLevelExec
  [11] ForkJoinPool.scan
  [12] ForkJoinPool.runWorker
  [13] ForkJoinWorkerThread.run

--- 5434832 total (0.05%), 5450 samples
  [ 0] ForkJoinPool$WorkQueue.casSlotToNull
  [ 1] ForkJoinPool$WorkQueue.tryPoll
  [ 2] ForkJoinPool$WorkQueue.topLevelExec
  [ 3] ForkJoinPool.scan
  [ 4] ForkJoinPool.runWorker
  [ 5] ForkJoinWorkerThread.run

--- 5356582 total (0.05%), 5363 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$53.0x0000000801035258.run
  [14] VirtualThread.run
  [15] VirtualThread$VThreadContinuation.lambda$new$0
  [16] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [17] Continuation.enter0
  [18] Continuation.enter
  [19] Continuation.enterSpecial
  [20] Continuation.run
  [21] VirtualThread.runContinuation
  [22] VirtualThread$$Lambda$51.0x000000080103df08.run
  [23] ForkJoinTask$RunnableExecuteAction.exec
  [24] ForkJoinTask.doExec
  [25] ForkJoinPool$WorkQueue.topLevelExec
  [26] ForkJoinPool.scan
  [27] ForkJoinPool.runWorker
  [28] ForkJoinWorkerThread.run

--- 5343747 total (0.05%), 5339 samples
  [ 0] VirtualThread.getAndSetParkPermit
  [ 1] VirtualThread.unpark
  [ 2] System$2.unparkVirtualThread
  [ 3] VirtualThreads.unpark
  [ 4] LockSupport.unpark
  [ 5] AbstractQueuedSynchronizer.signalNext
  [ 6] AbstractQueuedSynchronizer.release
  [ 7] ReentrantLock.unlock
  [ 8] LinkedBlockingQueue.signalNotEmpty
  [ 9] LinkedBlockingQueue.put
  [10] BlockingQueue.put
  [11] Channel.put
  [12] TickPerCell.lambda$tick$0
  [13] TickPerCell$$Lambda$54.0x0000000801035468.accept
  [14] ChannelsGrid.lambda$forEachChannel$0
  [15] ChannelsGrid$$Lambda$55.0x0000000801035680.accept
  [16] Dimensions.forEachRowCol
  [17] ChannelsGrid.forEachChannel
  [18] TickPerCell.tick
  [19] GameOfLife.calculateFrame
  [20] GameOfLife.lambda$calculateFrameBlocking$4
  [21] GameOfLife$$Lambda$53.0x0000000801035258.run
  [22] VirtualThread.run
  [23] VirtualThread$VThreadContinuation.lambda$new$0
  [24] VirtualThread$VThreadContinuation$$Lambda$50.0x000000080103dcf8.run
  [25] Continuation.enter0
  [26] Continuation.enter
  [27] Continuation.enterSpecial
  [28] Continuation.run
  [29] VirtualThread.runContinuation
  [30] VirtualThread$$Lambda$51.0x000000080103df08.run
  [31] ForkJoinTask$RunnableExecuteAction.exec
  [32] ForkJoinTask.doExec
  [33] ForkJoinPool$WorkQueue.topLevelExec
  [34] ForkJoinPool.scan
  [35] ForkJoinPool.runWorker
  [36] ForkJoinWorkerThread.run

--- 5262223 total (0.05%), 5285 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] TickPerCell.waitTick
  [ 8] Cell.notifyLiveness
  [ 9] Cell.run
  [10] Continuation.enterSpecial
  [11] Continuation.run
  [12] VirtualThread.runContinuation
  [13] VirtualThread$$Lambda$51.0x000000080103df08.run
  [14] ForkJoinTask$RunnableExecuteAction.exec
  [15] ForkJoinTask.doExec
  [16] ForkJoinPool$WorkQueue.topLevelExec
  [17] ForkJoinPool.scan
  [18] ForkJoinPool.runWorker
  [19] ForkJoinWorkerThread.run

--- 5180299 total (0.05%), 5187 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] TickPerCell.waitTick
  [ 4] Cell.notifyLiveness
  [ 5] Cell.run
  [ 6] Continuation.enterSpecial
  [ 7] Continuation.run
  [ 8] VirtualThread.runContinuation
  [ 9] VirtualThread$$Lambda$51.0x000000080103df08.run
  [10] ForkJoinTask$RunnableExecuteAction.exec
  [11] ForkJoinTask.doExec
  [12] ForkJoinPool$WorkQueue.topLevelExec
  [13] ForkJoinPool.scan
  [14] ForkJoinPool.runWorker
  [15] ForkJoinWorkerThread.run

--- 4959092 total (0.05%), 4988 samples
  [ 0] Thread.setContinuation
  [ 1] System$2.setContinuation
  [ 2] Continuation.run
  [ 3] VirtualThread.runContinuation
  [ 4] VirtualThread$$Lambda$51.0x000000080103df08.run
  [ 5] ForkJoinTask$RunnableExecuteAction.exec
  [ 6] ForkJoinTask.doExec
  [ 7] ForkJoinPool$WorkQueue.topLevelExec
  [ 8] ForkJoinPool.scan
  [ 9] ForkJoinPool.runWorker
  [10] ForkJoinWorkerThread.run

       total  percent  samples  top
  ----------  -------  -------  ---
  1133382856   11.03%  1135051  Thread.getAndClearInterrupt
   795258204    7.74%   796822  AbstractOwnableSynchronizer.setExclusiveOwnerThread
   722350518    7.03%   722599  VirtualThread.getAndClearInterrupt
   524649877    5.11%   519128  __memmove_sse2_unaligned_erms
   488472500    4.76%   488923  Thread.interrupted
   443180969    4.31%   444326  ReentrantLock$Sync.lockInterruptibly
   433347034    4.22%   433424  Cell.lambda$notifyLiveness$0
   405381989    3.95%   406340  LinkedBlockingQueue.enqueue
   288104170    2.80%   288678  LinkedBlockingQueue.dequeue
   249583131    2.43%   249804  AbstractQueuedSynchronizer$ConditionObject.enableWait
   232663233    2.27%   233455  AbstractQueuedSynchronizer.compareAndSetState
   222958185    2.17%   222114  G1CollectedHeap::requires_barriers(stackChunkOopDesc*) const
   211251212    2.06%   212095  ReentrantLock$Sync.isHeldExclusively
   196712283    1.92%   195854  Continuation.yield0
   183202686    1.78%   183001  AbstractQueuedSynchronizer.enqueue
   180039329    1.75%   180006  VirtualThread.setCarrierThread
   158627445    1.54%   158523  Continuation::prepare_thaw(JavaThread*, bool)
   148866535    1.45%   148927  VirtualThread.unmount
   138276188    1.35%   138447  VirtualThread.compareAndSetState
   135733545    1.32%   135801  ReduceOps$5ReducingSink.get
   134710365    1.31%   135110  ReentrantLock$NonfairSync.initialTryLock
   128083464    1.25%   128460  Unsafe.getAndBitwiseAndInt
   114548723    1.12%   115034  LinkedBlockingQueue.take
    97343862    0.95%    97314  AbstractQueuedSynchronizer$ConditionObject.doSignal
    94063987    0.92%    93833  VirtualThread.state
    92540733    0.90%    92947  ForkJoinPool$WorkQueue.push
    89171910    0.87%    88914  LockSupport.setCurrentBlocker
    87298760    0.85%    85791  __memcpy_sse2_unaligned
    86477140    0.84%    86729  Cell$$Lambda$63.0x00000008010369b0.apply
    83370400    0.81%    83607  AbstractQueuedSynchronizer.acquire
    82302162    0.80%    81756  Thaw<Config<(oop_kind)0, G1BarrierSet> >::thaw_fast(stackChunkOopDesc*)
    75943363    0.74%    76122  VirtualThread.unpark
    75625094    0.74%    75781  LinkedBlockingQueue.put
    74984804    0.73%    75004  long* thaw<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, int)
    69300297    0.67%    69381  AbstractQueuedSynchronizer.casTail
    67792784    0.66%    67939  AbstractQueuedSynchronizer.getState
    67525454    0.66%    67519  VirtualThread.mount
    66578593    0.65%    66721  VirtualThread.runContinuation
    59274310    0.58%    59249  Dimensions.forEachRowCol
    56623754    0.55%    56501  Continuation.yield
    55297087    0.54%    55481  ReentrantLock$Sync.tryRelease
    52034890    0.51%    52244  System$2.setExtentLocalCache
    47920432    0.47%    47921  StreamSupport.stream
    40461267    0.39%    40604  AbstractQueuedSynchronizer$ConditionObject.signal
    38912628    0.38%    39035  Unsafe.compareAndSetBoolean
    28510772    0.28%    28505  ReferencePipeline$4.opWrapSink
    28500392    0.28%    28567  ReentrantLock.lockInterruptibly
    28379153    0.28%    28428  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)1, 286822ul>::oop_access_barrier(oopDesc*, long, oopDesc*)
    26918360    0.26%    27021  ThawBase::recurse_thaw_compiled_frame(frame const&, frame&, int, bool)
    26829036    0.26%    26894  ArrayList$ArrayListSpliterator.forEachRemaining
    26338330    0.26%    26412  Channel.take
    23815938    0.23%    23883  G1BarrierSet::write_ref_field_post_slow(unsigned char volatile*)
    21820300    0.21%    21830  vtable stub
    21225195    0.21%    21258  ReferencePipeline$3.opWrapSink
    21145845    0.21%    21139  AbstractPipeline.<init>
    20601275    0.20%    20553  ForkJoinTask$RunnableExecuteAction.exec
    18548035    0.18%    18656  SafepointMechanism::update_poll_values(JavaThread*)
    17238128    0.17%    17293  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)3, 286822ul>::oop_access_barrier(oopDesc*, long)
    16022419    0.16%    16040  ArrayList.forEach
    15886560    0.15%    15946  ForkJoinPool.poolSubmit
    15868265    0.15%    15884  Sink$ChainedReference.<init>
    15738617    0.15%    15782  FreezeBase::freeze_fast_copy(stackChunkOopDesc*, int)
    15162409    0.15%    15217  ThawBase::thaw_slow(stackChunkOopDesc*, bool)
    14973997    0.15%    15032  LockSupport.unpark
    14328610    0.14%    14345  Channel.put
    14188418    0.14%    14225  ReferencePipeline$3$1.accept
    13324014    0.13%    13364  Sink$ChainedReference.begin
    12893595    0.13%    12882  Cell.calculateNextState
    12350552    0.12%    12379  Unsafe.getAndSetBoolean
    12273726    0.12%    12336  int freeze<Config<(oop_kind)0, G1BarrierSet> >(JavaThread*, long*)
    11792010    0.11%    11533  update_load_avg_[k]
    11135796    0.11%    11111  Cont thaw
     9691820    0.09%     9485  update_curr_[k]
     9645447    0.09%     9677  AbstractQueuedSynchronizer$ConditionObject.await
     9400977    0.09%     9420  AbstractQueuedSynchronizer$ConditionNode.isReleasable
     9100019    0.09%     8909  __update_load_avg_cfs_rq_[k]
     8937090    0.09%     8757  __update_load_avg_se_[k]
     8928190    0.09%     8963  ThawBase::finalize_thaw(frame&, int)
     8876094    0.09%     8896  AbstractQueuedSynchronizer.signalNext
     8791168    0.09%     8831  Unsafe.getAndBitwiseOrInt
     8776682    0.09%     8801  BlockingQueue.take
     8716622    0.08%     8734  Cell$$Lambda$58.0x00000008010358a0.accept
     8334431    0.08%     8317  VirtualThreads.unpark
     8139599    0.08%     8151  ReferencePipeline$4$1.accept
     7808667    0.08%     7856  VirtualThread.park
     7754731    0.08%     7750  VirtualThread.setParkPermit
     7711727    0.08%     7750  VirtualThread.afterYield
     7667421    0.07%     7692  AbstractQueuedSynchronizer$Node.setPrevRelaxed
     7252404    0.07%     7277  Continuation.run
     7157654    0.07%     7179  ForkJoinPool$WorkQueue.casSlotToNull
     6972283    0.07%     7009  Thread.setContinuation
     6868385    0.07%     6897  AbstractQueuedSynchronizer.release
     6624777    0.06%     6625  VirtualThread.getAndSetParkPermit
     6596849    0.06%     6467  psi_group_change_[k]
     6436193    0.06%     6453  Thread.clearInterrupt
     6412146    0.06%     6404  ArrayList.spliterator
     6098476    0.06%     6117  ForkJoinPool.scan
     6015389    0.06%     6033  AbstractOwnableSynchronizer.getExclusiveOwnerThread
     5415301    0.05%     5312  update_cfs_group_[k]
     5308985    0.05%     5328  ForkJoinPool.execute
     4942341    0.05%     4953  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
     4371628    0.04%     4390  ForkJoinPool$WorkQueue.nextLocalTask
     4210780    0.04%     4233  ThreadPoolExecutor$Worker.tryRelease
     4174177    0.04%     4172  StreamOpFlag.fromCharacteristics
     4038719    0.04%     4059  ThawBase::recurse_thaw_interpreted_frame(frame const&, frame&, int)
     3927114    0.04%     3948  CodeBlob::is_safepoint_stub() const
     3896868    0.04%     3913  Cell.notifyLiveness
     3827195    0.04%     3849  Unsafe_AllocateInstance
     3571812    0.03%     3589  Cell.run
     3510266    0.03%     3416  update_blocked_averages_[k]
     3434852    0.03%     3339  rb_next_[k]
     3148093    0.03%     3162  I2C/C2I adapters
     3043015    0.03%     3059  ForkJoinPool$WorkQueue.tryPoll
     2838608    0.03%     2846  VirtualThread.submitRunContinuation
     2822755    0.03%     2766  __calc_delta_[k]
     2785892    0.03%     2709  timerqueue_add_[k]
     2757774    0.03%     2762  VirtualThread.yieldContinuation
     2652644    0.03%     2661  void OopOopIterateDispatch<G1ScanCardClosure>::Table::oop_oop_iterate<InstanceKlass, narrowOop>(G1ScanCardClosure*, oopDesc*, Klass*)
     2593148    0.03%     2576  memcpy@plt
     2570771    0.03%     2518  task_tick_fair_[k]
     2568537    0.03%     2505  update_min_vruntime_[k]
     2560285    0.02%     2567  AtomicInteger.getAndIncrement
     2542505    0.02%     2532  __memset_avx2_unaligned_erms
     2502577    0.02%     2514  FreezeBase::recurse_freeze_compiled_frame(frame&, frame&, int, bool)
     2425837    0.02%     2431  AtomicInteger.getAndDecrement
     2408103    0.02%     2414  oopDesc::address_field(int) const
     2262503    0.02%     2226  reweight_entity_[k]
     2227504    0.02%     2163  __hrtimer_run_queues_[k]
     2196967    0.02%     2198  AbstractPipeline.wrapSink
     2167241    0.02%     2118  update_sd_lb_stats.constprop.0_[k]
     2134384    0.02%     2072  GameOfLifeBenchmark_benchmark_jmhTest.benchmark_thrpt_jmhStub
     2101855    0.02%     2108  CodeCache::find_blob(void*)
     2093099    0.02%     2053  update_rq_clock_[k]
     2077184    0.02%     2086  LinkedBlockingQueue.signalNotFull
     2058938    0.02%     2070  StackWatermarkSet::lowest_watermark(JavaThread*)
     2055782    0.02%     2016  check_preemption_disabled_[k]
     2004034    0.02%     2014  StackWatermarkSet::after_unwind(JavaThread*)
     1984447    0.02%     1942  native_read_msr_[k]
     1971936    0.02%     1973  Thread.isInterrupted
     1958528    0.02%     1965  oopDesc::address_field_put(int, unsigned char*)
     1953339    0.02%     1910  rcu_sched_clock_irq_[k]
     1937693    0.02%     1915  vframeStream::vframeStream(JavaThread*, bool, bool, bool)
     1909913    0.02%     1919  Continuation.enterSpecial
     1778416    0.02%     1737  __cgroup_account_cputime_field_[k]
     1689244    0.02%     1700  g1_post_barrier_slow
     1673801    0.02%     1682  frame::interpreter_frame_method() const
     1654956    0.02%     1621  __schedule_[k]
     1654638    0.02%     1658  Objects.requireNonNull
     1635034    0.02%     1606  update_irq_load_avg_[k]
     1568713    0.02%     1571  ArrayList.elementAt
     1563825    0.02%     1557  DirectiveSet::compilecommand_compatibility_init(methodHandle const&) [clone .part.0]
     1542083    0.02%     1517  InstanceKlass::find_method_index(Array<Method*> const*, Symbol const*, Symbol const*, Klass::OverpassLookupMode, Klass::StaticLookupMode, Klass::PrivateLookupMode) [clone .constprop.0]
     1531628    0.01%     1493  iterate_groups_[k]
     1525150    0.01%     1495  _raw_spin_lock_[k]
     1516114    0.01%     1522  ReduceOps$5ReducingSink.accept
     1513912    0.01%     1521  Unsafe.allocateInstance
     1484742    0.01%     1490  LinkedBlockingQueue.signalNotEmpty
     1483909    0.01%     1484  ReferencePipeline.<init>
     1476580    0.01%     1446  update_process_times_[k]
     1448448    0.01%     1411  _raw_spin_lock_irqsave_[k]
     1436457    0.01%     1442  ThawBase::finish_thaw(frame&)
     1425814    0.01%     1429  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
     1336686    0.01%     1307  scheduler_tick_[k]
     1318336    0.01%     1324  CodeHeap::find_blob_unsafe(void*) const
     1316241    0.01%     1323  MemAllocator::allocate() const
     1271718    0.01%     1242  hrtimer_interrupt_[k]
     1263582    0.01%     1236  asm_sysvec_apic_timer_interrupt_[k]
     1260058    0.01%     1266  void stackChunkOopDesc::fix_thawed_frame<SmallRegisterMap>(frame const&, SmallRegisterMap const*)
     1239268    0.01%     1212  select_task_rq_fair_[k]
     1224067    0.01%     1228  __tls_get_addr
     1192801    0.01%     1196  Object.<init>
     1185309    0.01%     1166  __GI___pthread_mutex_lock
     1176698    0.01%     1182  ForkJoinPool$WorkQueue.getAndClearSlot
     1168208    0.01%     1147  account_user_time_[k]
     1161890    0.01%     1156  G1CardSet::occupied() const
     1123318    0.01%     1122  ReferencePipeline.map
     1107907    0.01%     1111  ForkJoinTask.doExec
     1097394    0.01%     1100  JavaFrameAnchor::make_walkable()
     1087595    0.01%     1060  preempt_count_sub_[k]
     1071601    0.01%     1075  G1ScanHRForRegionClosure::scan_heap_roots(HeapRegion*)
     1068859    0.01%     1065  Unsafe_Park
     1067312    0.01%     1070  ForkJoinPool$WorkQueue.topLevelExec
     1057670    0.01%     1046  CompLevel CompilationPolicy::common<LoopPredicate>(methodHandle const&, CompLevel, bool)
     1048736    0.01%     1028  cpuacct_charge_[k]
     1044814    0.01%     1050  cont_doYield
     1041440    0.01%     1021  hrtimer_active_[k]
     1007311    0.01%      993  CompilationPolicy::event(methodHandle const&, methodHandle const&, int, int, CompLevel, CompiledMethod*, JavaThread*)
     1007295    0.01%      986  __accumulate_pelt_segments_[k]
      996225    0.01%      980  native_sched_clock_[k]
      992847    0.01%      969  load_balance_[k]
      959961    0.01%      941  psi_task_change_[k]
      925462    0.01%      932  FreezeBase::recurse_freeze(frame&, frame&, int, bool, bool)
      925146    0.01%      906  timekeeping_advance_[k]
      914255    0.01%      915  JNIHandleBlock::allocate_handle(JavaThread*, oopDesc*, AllocFailStrategy::AllocFailEnum)
      913602    0.01%      895  read_tsc_[k]
      901946    0.01%      895  enqueue_entity_[k]
      889514    0.01%      874  preempt_count_add_[k]
      885052    0.01%      893  ForkJoinPool.signalWork
      878101    0.01%      863  cpuacct_account_field_[k]
      849307    0.01%      845  Freeze<Config<(oop_kind)0, G1BarrierSet> >::allocate_chunk(unsigned long)
