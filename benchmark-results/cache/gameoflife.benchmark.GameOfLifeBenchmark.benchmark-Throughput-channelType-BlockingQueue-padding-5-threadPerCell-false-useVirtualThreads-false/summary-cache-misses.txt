--- Execution profile ---
Total samples       : 3104066
unknown_Java        : 24316 (0.78%)
not_walkable_Java   : 167 (0.01%)
deoptimization      : 6 (0.00%)
skipped             : 4 (0.00%)

--- 677911490 total (21.84%), 677256 samples
  [ 0] ReduceOps$5ReducingSink.get
  [ 1] ReduceOps$5ReducingSink.get
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 188085220 total (6.06%), 188304 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$53.0x0000000801036510.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 88454947 total (2.85%), 88573 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$53.0x0000000801036510.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 84438646 total (2.72%), 84637 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$53.0x0000000801036510.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 77713878 total (2.50%), 77887 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$53.0x0000000801036510.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 74582547 total (2.40%), 74671 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 68825867 total (2.22%), 68901 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$53.0x0000000801036510.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 67138722 total (2.16%), 67228 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$53.0x0000000801036510.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 62688109 total (2.02%), 62810 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801036510.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 62237733 total (2.00%), 62453 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [18] Iterable.forEach
  [19] CellsGroup.run
  [20] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [21] ThreadPoolExecutor.runWorker
  [22] ThreadPoolExecutor$Worker.run
  [23] Thread.run

--- 53151207 total (1.71%), 52948 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$Head.<init>
  [ 3] StreamSupport.stream
  [ 4] Collection.stream
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 49089767 total (1.58%), 49049 samples
  [ 0] vtable stub
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 44547937 total (1.44%), 44731 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 43774732 total (1.41%), 43887 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run

--- 40942627 total (1.32%), 40963 samples
  [ 0] ReferencePipeline$3.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 32192015 total (1.04%), 32165 samples
  [ 0] ReferencePipeline$4.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 29874494 total (0.96%), 29906 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$53.0x0000000801036510.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 29843832 total (0.96%), 29943 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 27294467 total (0.88%), 27271 samples
  [ 0] StreamOpFlag.fromCharacteristics
  [ 1] StreamSupport.stream
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 26709100 total (0.86%), 26744 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801036510.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 25567457 total (0.82%), 25606 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] GameOfLife$$Lambda$56.0x0000000801036b70.test
  [ 4] ChannelsGrid.lambda$forEachChannel$1
  [ 5] ChannelsGrid$$Lambda$57.0x0000000801036da8.accept
  [ 6] Dimensions.forEachRowCol
  [ 7] ChannelsGrid.forEachChannel
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$4
  [10] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 25488184 total (0.82%), 25560 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 25202420 total (0.81%), 25217 samples
  [ 0] Sink$ChainedReference.<init>
  [ 1] ReferencePipeline$4$1.<init>
  [ 2] ReferencePipeline$4.opWrapSink
  [ 3] AbstractPipeline.wrapSink
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 23779604 total (0.77%), 23796 samples
  [ 0] Sink$ChainedReference.<init>
  [ 1] ReferencePipeline$3$1.<init>
  [ 2] ReferencePipeline$3.opWrapSink
  [ 3] AbstractPipeline.wrapSink
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 23151091 total (0.75%), 23233 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 22121702 total (0.71%), 22142 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] TickPerCell.lambda$tick$0
  [ 7] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 8] ChannelsGrid.lambda$forEachChannel$0
  [ 9] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] TickPerCell.tick
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 22073148 total (0.71%), 22165 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 21790919 total (0.70%), 21821 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 20431280 total (0.66%), 20511 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotFull
  [ 5] LinkedBlockingQueue.take
  [ 6] BlockingQueue.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [22] ThreadPoolExecutor.runWorker
  [23] ThreadPoolExecutor$Worker.run
  [24] Thread.run

--- 19970583 total (0.64%), 20031 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 19642454 total (0.63%), 19694 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 19630437 total (0.63%), 19651 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 18879210 total (0.61%), 18918 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] TickPerCell.lambda$tick$0
  [ 9] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [10] ChannelsGrid.lambda$forEachChannel$0
  [11] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [12] Dimensions.forEachRowCol
  [13] ChannelsGrid.forEachChannel
  [14] TickPerCell.tick
  [15] GameOfLife.calculateFrame
  [16] GameOfLife.lambda$calculateFrameBlocking$4
  [17] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 18344148 total (0.59%), 18281 samples
  [ 0] StreamOpFlag.fromCharacteristics
  [ 1] StreamSupport.stream
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 18031254 total (0.58%), 18055 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] TickPerCell.lambda$tick$0
  [ 4] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 5] ChannelsGrid.lambda$forEachChannel$0
  [ 6] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] TickPerCell.tick
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$4
  [12] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 17685305 total (0.57%), 17746 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.signalNotFull
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run

--- 16652780 total (0.54%), 16664 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] GameOfLife$$Lambda$56.0x0000000801036b70.test
  [ 8] ChannelsGrid.lambda$forEachChannel$1
  [ 9] ChannelsGrid$$Lambda$57.0x0000000801036da8.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 16228895 total (0.52%), 16245 samples
  [ 0] AtomicInteger.getAndIncrement
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 15989280 total (0.52%), 16009 samples
  [ 0] Channel.put
  [ 1] Cell.lambda$notifyLiveness$0
  [ 2] Cell$$Lambda$53.0x0000000801036510.accept
  [ 3] ArrayList.forEach
  [ 4] Cell.notifyLiveness
  [ 5] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 15862041 total (0.51%), 15899 samples
  [ 0] AbstractOwnableSynchronizer.getExclusiveOwnerThread
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$53.0x0000000801036510.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 15246552 total (0.49%), 15198 samples
  [ 0] StreamOpFlag.fromCharacteristics
  [ 1] StreamSupport.stream
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 14193225 total (0.46%), 14209 samples
  [ 0] LinkedBlockingQueue.enqueue
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 14066455 total (0.45%), 14097 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 13989554 total (0.45%), 13923 samples
  [ 0] StreamSupport.stream
  [ 1] Collection.stream
  [ 2] Cell.calculateNextState
  [ 3] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 13452203 total (0.43%), 13488 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 13265588 total (0.43%), 13276 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] GameOfLife$$Lambda$56.0x0000000801036b70.test
  [ 7] ChannelsGrid.lambda$forEachChannel$1
  [ 8] ChannelsGrid$$Lambda$57.0x0000000801036da8.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 13028440 total (0.42%), 13043 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] GameOfLife.calculateFrame
  [ 3] GameOfLife.lambda$calculateFrameBlocking$4
  [ 4] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 12493456 total (0.40%), 12514 samples
  [ 0] ArrayList$ArrayListSpliterator.<init>
  [ 1] ArrayList.spliterator
  [ 2] Collection.stream
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 12178548 total (0.39%), 12213 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.calculateNextState
  [ 9] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 12128681 total (0.39%), 12144 samples
  [ 0] Sink$ChainedReference.begin
  [ 1] Sink$ChainedReference.begin
  [ 2] AbstractPipeline.copyInto
  [ 3] AbstractPipeline.wrapAndCopyInto
  [ 4] ReduceOps$ReduceOp.evaluateSequential
  [ 5] AbstractPipeline.evaluate
  [ 6] IntPipeline.reduce
  [ 7] IntPipeline.sum
  [ 8] Cell.calculateNextState
  [ 9] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 11983588 total (0.39%), 11998 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$56.0x0000000801036b70.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$57.0x0000000801036da8.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 11552005 total (0.37%), 11576 samples
  [ 0] ReentrantLock$Sync.lock
  [ 1] ReentrantLock.lock
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801036510.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 11052957 total (0.36%), 11076 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] GameOfLife$$Lambda$56.0x0000000801036b70.test
  [ 6] ChannelsGrid.lambda$forEachChannel$1
  [ 7] ChannelsGrid$$Lambda$57.0x0000000801036da8.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$4
  [12] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 10807502 total (0.35%), 10812 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 10801641 total (0.35%), 10809 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.signalNotFull
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] GameOfLife$$Lambda$56.0x0000000801036b70.test
  [ 7] ChannelsGrid.lambda$forEachChannel$1
  [ 8] ChannelsGrid$$Lambda$57.0x0000000801036da8.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 10255595 total (0.33%), 10287 samples
  [ 0] Channel.put
  [ 1] Cell.calculateNextState
  [ 2] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 3] Iterable.forEach
  [ 4] CellsGroup.run
  [ 5] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 9983999 total (0.32%), 9998 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$Head.<init>
  [ 3] StreamSupport.stream
  [ 4] Collection.stream
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 8966893 total (0.29%), 8961 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$3.<init>
  [ 4] ReferencePipeline.map
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 8885953 total (0.29%), 8901 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotFull
  [ 5] LinkedBlockingQueue.take
  [ 6] BlockingQueue.take
  [ 7] Channel.take
  [ 8] GameOfLife$$Lambda$56.0x0000000801036b70.test
  [ 9] ChannelsGrid.lambda$forEachChannel$1
  [10] ChannelsGrid$$Lambda$57.0x0000000801036da8.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 8481210 total (0.27%), 8492 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$53.0x0000000801036510.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 6899927 total (0.22%), 6922 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 6105841 total (0.20%), 6115 samples
  [ 0] AbstractOwnableSynchronizer.getExclusiveOwnerThread
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] TickPerCell.lambda$tick$0
  [ 9] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [10] ChannelsGrid.lambda$forEachChannel$0
  [11] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [12] Dimensions.forEachRowCol
  [13] ChannelsGrid.forEachChannel
  [14] TickPerCell.tick
  [15] GameOfLife.calculateFrame
  [16] GameOfLife.lambda$calculateFrameBlocking$4
  [17] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 6103787 total (0.20%), 6112 samples
  [ 0] Cell.calculateNextState
  [ 1] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 2] Iterable.forEach
  [ 3] CellsGroup.run
  [ 4] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 5934718 total (0.19%), 5937 samples
  [ 0] Dimensions.forEachRowCol
  [ 1] ChannelsGrid.forEachChannel
  [ 2] TickPerCell.tick
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 5903960 total (0.19%), 5898 samples
  [ 0] Sink$ChainedReference.<init>
  [ 1] ReferencePipeline$4$1.<init>
  [ 2] ReferencePipeline$4.opWrapSink
  [ 3] AbstractPipeline.wrapSink
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 5886481 total (0.19%), 5895 samples
  [ 0] Channel.put
  [ 1] Cell.lambda$notifyLiveness$0
  [ 2] Cell$$Lambda$53.0x0000000801036510.accept
  [ 3] ArrayList.forEach
  [ 4] Cell.notifyLiveness
  [ 5] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 5853483 total (0.19%), 5860 samples
  [ 0] Channel.put
  [ 1] TickPerCell.lambda$tick$0
  [ 2] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 3] ChannelsGrid.lambda$forEachChannel$0
  [ 4] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] ChannelsGrid.forEachChannel
  [ 7] TickPerCell.tick
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$4
  [10] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 5837027 total (0.19%), 5834 samples
  [ 0] Sink$ChainedReference.<init>
  [ 1] ReferencePipeline$3$1.<init>
  [ 2] ReferencePipeline$3.opWrapSink
  [ 3] AbstractPipeline.wrapSink
  [ 4] AbstractPipeline.wrapAndCopyInto
  [ 5] ReduceOps$ReduceOp.evaluateSequential
  [ 6] AbstractPipeline.evaluate
  [ 7] IntPipeline.reduce
  [ 8] IntPipeline.sum
  [ 9] Cell.calculateNextState
  [10] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 5806318 total (0.19%), 5803 samples
  [ 0] ReferencePipeline$4.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 5748332 total (0.19%), 5757 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$53.0x0000000801036510.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 5684984 total (0.18%), 5691 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.signalNotFull
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] TickPerCell.waitTick
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 5682301 total (0.18%), 5690 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] TickPerCell.lambda$tick$0
  [ 7] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 8] ChannelsGrid.lambda$forEachChannel$0
  [ 9] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] TickPerCell.tick
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 5472759 total (0.18%), 5482 samples
  [ 0] Sink$ChainedReference.begin
  [ 1] [unknown_Java]

--- 5351150 total (0.17%), 5334 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$3.<init>
  [ 4] ReferencePipeline.map
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 5303942 total (0.17%), 5321 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 5244510 total (0.17%), 5245 samples
  [ 0] ReferencePipeline$3.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 5184370 total (0.17%), 5193 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] TickPerCell.waitTick
  [ 4] Cell.notifyLiveness
  [ 5] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 4950159 total (0.16%), 4957 samples
  [ 0] Channel.put
  [ 1] [unknown_Java]

--- 4728855 total (0.15%), 4736 samples
  [ 0] Sink$ChainedReference.begin
  [ 1] Sink$ChainedReference.begin
  [ 2] AbstractPipeline.copyInto
  [ 3] AbstractPipeline.wrapAndCopyInto
  [ 4] ReduceOps$ReduceOp.evaluateSequential
  [ 5] AbstractPipeline.evaluate
  [ 6] IntPipeline.reduce
  [ 7] IntPipeline.sum
  [ 8] Cell.calculateNextState
  [ 9] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 4552320 total (0.15%), 4561 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] TickPerCell.waitTick
  [ 8] Cell.notifyLiveness
  [ 9] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 4529789 total (0.15%), 4517 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$3.<init>
  [ 4] ReferencePipeline.map
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 4518238 total (0.15%), 4517 samples
  [ 0] ReferencePipeline$3.opWrapSink
  [ 1] [unknown_Java]

--- 4490545 total (0.14%), 4501 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 4486949 total (0.14%), 4499 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 4483786 total (0.14%), 4487 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 4041894 total (0.13%), 4038 samples
  [ 0] AbstractPipeline.wrapSink
  [ 1] AbstractPipeline.wrapAndCopyInto
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 3998932 total (0.13%), 4004 samples
  [ 0] AbstractQueuedSynchronizer.compareAndSetState
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lock
  [ 3] ReentrantLock.lock
  [ 4] LinkedBlockingQueue.signalNotFull
  [ 5] LinkedBlockingQueue.take
  [ 6] BlockingQueue.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 3908431 total (0.13%), 3914 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 3838594 total (0.12%), 3846 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] [unknown_Java]

--- 3821706 total (0.12%), 3818 samples
  [ 0] ReferencePipeline$4.opWrapSink
  [ 1] [unknown_Java]

--- 3802760 total (0.12%), 3800 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 3719957 total (0.12%), 3728 samples
  [ 0] LinkedBlockingQueue.signalNotEmpty
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 3668959 total (0.12%), 3682 samples
  [ 0] AbstractOwnableSynchronizer.getExclusiveOwnerThread
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.signalNotFull
  [ 5] LinkedBlockingQueue.take
  [ 6] BlockingQueue.take
  [ 7] Channel.take
  [ 8] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 9] ReferencePipeline$3$1.accept
  [10] ArrayList$ArrayListSpliterator.forEachRemaining
  [11] AbstractPipeline.copyInto
  [12] AbstractPipeline.wrapAndCopyInto
  [13] ReduceOps$ReduceOp.evaluateSequential
  [14] AbstractPipeline.evaluate
  [15] IntPipeline.reduce
  [16] IntPipeline.sum
  [17] Cell.calculateNextState
  [18] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [19] Iterable.forEach
  [20] CellsGroup.run
  [21] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [22] ThreadPoolExecutor.runWorker
  [23] ThreadPoolExecutor$Worker.run
  [24] Thread.run

--- 3632798 total (0.12%), 3642 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$Head.<init>
  [ 3] StreamSupport.stream
  [ 4] Collection.stream
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 3558620 total (0.11%), 3566 samples
  [ 0] ReentrantLock.lock
  [ 1] LinkedBlockingQueue.signalNotEmpty
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$53.0x0000000801036510.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 3555172 total (0.11%), 3557 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] TickPerCell.lambda$tick$0
  [ 4] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 5] ChannelsGrid.lambda$forEachChannel$0
  [ 6] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] TickPerCell.tick
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$4
  [12] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 3535695 total (0.11%), 3544 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801036510.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 3450866 total (0.11%), 3456 samples
  [ 0] AtomicInteger.get
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 3249337 total (0.10%), 3253 samples
  [ 0] AbstractQueuedSynchronizer.release
  [ 1] ReentrantLock.unlock
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 3242390 total (0.10%), 3249 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 1] LinkedBlockingQueue.signalNotEmpty
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$53.0x0000000801036510.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 3153674 total (0.10%), 3160 samples
  [ 0] Thread.getAndClearInterrupt
  [ 1] Thread.interrupted
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$53.0x0000000801036510.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 3063854 total (0.10%), 3068 samples
  [ 0] AtomicInteger.getAndIncrement
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] TickPerCell.lambda$tick$0
  [ 5] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 6] ChannelsGrid.lambda$forEachChannel$0
  [ 7] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 8] Dimensions.forEachRowCol
  [ 9] ChannelsGrid.forEachChannel
  [10] TickPerCell.tick
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 3060007 total (0.10%), 3055 samples
  [ 0] AbstractPipeline.<init>
  [ 1] IntPipeline.<init>
  [ 2] IntPipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$4.<init>
  [ 4] ReferencePipeline.mapToInt
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 3011872 total (0.10%), 3019 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 1] LinkedBlockingQueue.signalNotEmpty
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] Cell.lambda$notifyLiveness$0
  [ 6] Cell$$Lambda$53.0x0000000801036510.accept
  [ 7] ArrayList.forEach
  [ 8] Cell.notifyLiveness
  [ 9] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 2960186 total (0.10%), 2963 samples
  [ 0] Thread.interrupted
  [ 1] ReentrantLock$Sync.lockInterruptibly
  [ 2] ReentrantLock.lockInterruptibly
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] TickPerCell.waitTick
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 2881569 total (0.09%), 2883 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] TickPerCell.waitTick
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 2871419 total (0.09%), 2876 samples
  [ 0] AbstractQueuedSynchronizer.setState
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.lambda$notifyLiveness$0
  [ 9] Cell$$Lambda$53.0x0000000801036510.accept
  [10] ArrayList.forEach
  [11] Cell.notifyLiveness
  [12] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 2849883 total (0.09%), 2795 samples
  [ 0] psi_group_change_[k]
  [ 1] psi_task_switch_[k]
  [ 2] __schedule_[k]
  [ 3] schedule_[k]
  [ 4] futex_wait_queue_[k]
  [ 5] futex_wait_[k]
  [ 6] do_futex_[k]
  [ 7] __x64_sys_futex_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __futex_abstimed_wait_common
  [11] Unsafe.park
  [12] LockSupport.park
  [13] AbstractQueuedSynchronizer$ConditionNode.block
  [14] ForkJoinPool.unmanagedBlock
  [15] ForkJoinPool.managedBlock
  [16] AbstractQueuedSynchronizer$ConditionObject.await
  [17] LinkedBlockingQueue.take
  [18] BlockingQueue.take
  [19] Channel.take
  [20] TickPerCell.waitTick
  [21] Cell.notifyLiveness
  [22] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [23] Iterable.forEach
  [24] CellsGroup.run
  [25] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [26] ThreadPoolExecutor.runWorker
  [27] ThreadPoolExecutor$Worker.run
  [28] Thread.run

--- 2801677 total (0.09%), 2808 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$53.0x0000000801036510.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 2759574 total (0.09%), 2765 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$53.0x0000000801036510.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 2753551 total (0.09%), 2710 samples
  [ 0] update_cfs_group_[k]
  [ 1] dequeue_entity_[k]
  [ 2] dequeue_task_fair_[k]
  [ 3] __schedule_[k]
  [ 4] schedule_[k]
  [ 5] futex_wait_queue_[k]
  [ 6] futex_wait_[k]
  [ 7] do_futex_[k]
  [ 8] __x64_sys_futex_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __futex_abstimed_wait_common
  [12] Unsafe.park
  [13] LockSupport.park
  [14] AbstractQueuedSynchronizer$ConditionNode.block
  [15] ForkJoinPool.unmanagedBlock
  [16] ForkJoinPool.managedBlock
  [17] AbstractQueuedSynchronizer$ConditionObject.await
  [18] LinkedBlockingQueue.take
  [19] BlockingQueue.take
  [20] Channel.take
  [21] TickPerCell.waitTick
  [22] Cell.notifyLiveness
  [23] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [24] Iterable.forEach
  [25] CellsGroup.run
  [26] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [27] ThreadPoolExecutor.runWorker
  [28] ThreadPoolExecutor$Worker.run
  [29] Thread.run

--- 2737844 total (0.09%), 2744 samples
  [ 0] ReentrantLock$Sync.lock
  [ 1] ReentrantLock.lock
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] TickPerCell.lambda$tick$0
  [ 7] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 8] ChannelsGrid.lambda$forEachChannel$0
  [ 9] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] TickPerCell.tick
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 2665909 total (0.09%), 2673 samples
  [ 0] LinkedBlockingQueue.signalNotEmpty
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.lambda$notifyLiveness$0
  [ 5] Cell$$Lambda$53.0x0000000801036510.accept
  [ 6] ArrayList.forEach
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 2655966 total (0.09%), 2661 samples
  [ 0] StreamOpFlag.getMask
  [ 1] StreamOpFlag.combineOpFlags
  [ 2] AbstractPipeline.<init>
  [ 3] ReferencePipeline.<init>
  [ 4] ReferencePipeline$StatelessOp.<init>
  [ 5] ReferencePipeline$3.<init>
  [ 6] ReferencePipeline.map
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 2620809 total (0.08%), 2624 samples
  [ 0] AbstractOwnableSynchronizer.setExclusiveOwnerThread
  [ 1] ReentrantLock$NonfairSync.initialTryLock
  [ 2] ReentrantLock$Sync.lockInterruptibly
  [ 3] ReentrantLock.lockInterruptibly
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$53.0x0000000801036510.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 2576489 total (0.08%), 2581 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.lambda$notifyLiveness$0
  [ 7] Cell$$Lambda$53.0x0000000801036510.accept
  [ 8] ArrayList.forEach
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 2554376 total (0.08%), 2563 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] GameOfLife$$Lambda$56.0x0000000801036b70.test
  [ 7] ChannelsGrid.lambda$forEachChannel$1
  [ 8] ChannelsGrid$$Lambda$57.0x0000000801036da8.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] GameOfLife.calculateFrame
  [12] GameOfLife.lambda$calculateFrameBlocking$4
  [13] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 2549397 total (0.08%), 2554 samples
  [ 0] AbstractQueuedSynchronizer.getState
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$53.0x0000000801036510.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 2518040 total (0.08%), 2487 samples
  [ 0] enqueue_entity_[k]
  [ 1] enqueue_task_fair_[k]
  [ 2] enqueue_task_[k]
  [ 3] ttwu_do_activate_[k]
  [ 4] try_to_wake_up_[k]
  [ 5] wake_up_q_[k]
  [ 6] futex_wake_[k]
  [ 7] do_futex_[k]
  [ 8] __x64_sys_futex_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] ___pthread_cond_signal
  [12] Unsafe.unpark
  [13] LockSupport.unpark
  [14] AbstractQueuedSynchronizer.signalNext
  [15] AbstractQueuedSynchronizer.release
  [16] ReentrantLock.unlock
  [17] LinkedBlockingQueue.signalNotEmpty
  [18] LinkedBlockingQueue.put
  [19] BlockingQueue.put
  [20] Channel.put
  [21] TickPerCell.lambda$tick$0
  [22] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [23] ChannelsGrid.lambda$forEachChannel$0
  [24] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [25] Dimensions.forEachRowCol
  [26] ChannelsGrid.forEachChannel
  [27] TickPerCell.tick
  [28] GameOfLife.calculateFrame
  [29] GameOfLife.lambda$calculateFrameBlocking$4
  [30] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [31] ThreadPoolExecutor.runWorker
  [32] ThreadPoolExecutor$Worker.run
  [33] Thread.run

--- 2511284 total (0.08%), 2518 samples
  [ 0] AbstractOwnableSynchronizer.getExclusiveOwnerThread
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] Cell.calculateNextState
  [ 9] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 2496223 total (0.08%), 2501 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] TickPerCell.lambda$tick$0
  [ 7] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 8] ChannelsGrid.lambda$forEachChannel$0
  [ 9] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] TickPerCell.tick
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 2425607 total (0.08%), 2429 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$53.0x0000000801036510.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 2401617 total (0.08%), 2403 samples
  [ 0] Sink$ChainedReference.begin
  [ 1] AbstractPipeline.copyInto
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 2389798 total (0.08%), 2396 samples
  [ 0] AtomicInteger.getAndIncrement
  [ 1] LinkedBlockingQueue.put
  [ 2] BlockingQueue.put
  [ 3] Channel.put
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 2322085 total (0.07%), 2326 samples
  [ 0] AbstractQueuedSynchronizer.setState
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$53.0x0000000801036510.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 2277469 total (0.07%), 2243 samples
  [ 0] update_curr_[k]
  [ 1] dequeue_entity_[k]
  [ 2] dequeue_task_fair_[k]
  [ 3] __schedule_[k]
  [ 4] schedule_[k]
  [ 5] futex_wait_queue_[k]
  [ 6] futex_wait_[k]
  [ 7] do_futex_[k]
  [ 8] __x64_sys_futex_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __futex_abstimed_wait_common
  [12] Unsafe.park
  [13] LockSupport.park
  [14] AbstractQueuedSynchronizer$ConditionNode.block
  [15] ForkJoinPool.unmanagedBlock
  [16] ForkJoinPool.managedBlock
  [17] AbstractQueuedSynchronizer$ConditionObject.await
  [18] LinkedBlockingQueue.take
  [19] BlockingQueue.take
  [20] Channel.take
  [21] TickPerCell.waitTick
  [22] Cell.notifyLiveness
  [23] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [24] Iterable.forEach
  [25] CellsGroup.run
  [26] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [27] ThreadPoolExecutor.runWorker
  [28] ThreadPoolExecutor$Worker.run
  [29] Thread.run

--- 2230755 total (0.07%), 2237 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 6] ReferencePipeline$3$1.accept
  [ 7] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 8] AbstractPipeline.copyInto
  [ 9] AbstractPipeline.wrapAndCopyInto
  [10] ReduceOps$ReduceOp.evaluateSequential
  [11] AbstractPipeline.evaluate
  [12] IntPipeline.reduce
  [13] IntPipeline.sum
  [14] Cell.calculateNextState
  [15] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 2224079 total (0.07%), 2227 samples
  [ 0] Sink$ChainedReference.begin
  [ 1] Sink$ChainedReference.begin
  [ 2] AbstractPipeline.copyInto
  [ 3] AbstractPipeline.wrapAndCopyInto
  [ 4] ReduceOps$ReduceOp.evaluateSequential
  [ 5] AbstractPipeline.evaluate
  [ 6] IntPipeline.reduce
  [ 7] IntPipeline.sum
  [ 8] Cell.calculateNextState
  [ 9] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [10] Iterable.forEach
  [11] CellsGroup.run
  [12] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 2161784 total (0.07%), 2162 samples
  [ 0] AbstractPipeline.wrapSink
  [ 1] AbstractPipeline.wrapAndCopyInto
  [ 2] ReduceOps$ReduceOp.evaluateSequential
  [ 3] AbstractPipeline.evaluate
  [ 4] IntPipeline.reduce
  [ 5] IntPipeline.sum
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 2125132 total (0.07%), 2124 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.lambda$notifyLiveness$0
  [ 8] Cell$$Lambda$53.0x0000000801036510.accept
  [ 9] ArrayList.forEach
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 1998288 total (0.06%), 1976 samples
  [ 0] psi_group_change_[k]
  [ 1] psi_task_change_[k]
  [ 2] enqueue_task_[k]
  [ 3] ttwu_do_activate_[k]
  [ 4] try_to_wake_up_[k]
  [ 5] wake_up_q_[k]
  [ 6] futex_wake_[k]
  [ 7] do_futex_[k]
  [ 8] __x64_sys_futex_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] ___pthread_cond_signal
  [12] Unsafe.unpark
  [13] LockSupport.unpark
  [14] AbstractQueuedSynchronizer.signalNext
  [15] AbstractQueuedSynchronizer.release
  [16] ReentrantLock.unlock
  [17] LinkedBlockingQueue.signalNotEmpty
  [18] LinkedBlockingQueue.put
  [19] BlockingQueue.put
  [20] Channel.put
  [21] TickPerCell.lambda$tick$0
  [22] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [23] ChannelsGrid.lambda$forEachChannel$0
  [24] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [25] Dimensions.forEachRowCol
  [26] ChannelsGrid.forEachChannel
  [27] TickPerCell.tick
  [28] GameOfLife.calculateFrame
  [29] GameOfLife.lambda$calculateFrameBlocking$4
  [30] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [31] ThreadPoolExecutor.runWorker
  [32] ThreadPoolExecutor$Worker.run
  [33] Thread.run

--- 1984343 total (0.06%), 1980 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] G1RemSetScanState::G1ClearCardTableTask::do_work(unsigned int)
  [ 2] G1BatchedTask::work(unsigned int)
  [ 3] WorkerThread::run()
  [ 4] Thread::call_run()
  [ 5] thread_native_entry(Thread*)
  [ 6] start_thread

--- 1963868 total (0.06%), 1970 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 1943509 total (0.06%), 1947 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 4] ReferencePipeline$3$1.accept
  [ 5] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 6] AbstractPipeline.copyInto
  [ 7] AbstractPipeline.wrapAndCopyInto
  [ 8] ReduceOps$ReduceOp.evaluateSequential
  [ 9] AbstractPipeline.evaluate
  [10] IntPipeline.reduce
  [11] IntPipeline.sum
  [12] Cell.calculateNextState
  [13] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [14] Iterable.forEach
  [15] CellsGroup.run
  [16] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 1924193 total (0.06%), 1925 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] TickPerCell.waitTick
  [ 7] Cell.notifyLiveness
  [ 8] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 1876033 total (0.06%), 1854 samples
  [ 0] enqueue_task_fair_[k]
  [ 1] enqueue_task_[k]
  [ 2] ttwu_do_activate_[k]
  [ 3] try_to_wake_up_[k]
  [ 4] wake_up_q_[k]
  [ 5] futex_wake_[k]
  [ 6] do_futex_[k]
  [ 7] __x64_sys_futex_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] ___pthread_cond_signal
  [11] Unsafe.unpark
  [12] LockSupport.unpark
  [13] AbstractQueuedSynchronizer.signalNext
  [14] AbstractQueuedSynchronizer.release
  [15] ReentrantLock.unlock
  [16] LinkedBlockingQueue.signalNotEmpty
  [17] LinkedBlockingQueue.put
  [18] BlockingQueue.put
  [19] Channel.put
  [20] TickPerCell.lambda$tick$0
  [21] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [22] ChannelsGrid.lambda$forEachChannel$0
  [23] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [24] Dimensions.forEachRowCol
  [25] ChannelsGrid.forEachChannel
  [26] TickPerCell.tick
  [27] GameOfLife.calculateFrame
  [28] GameOfLife.lambda$calculateFrameBlocking$4
  [29] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [30] ThreadPoolExecutor.runWorker
  [31] ThreadPoolExecutor$Worker.run
  [32] Thread.run

--- 1849353 total (0.06%), 1852 samples
  [ 0] ArrayList.forEach
  [ 1] Cell.notifyLiveness
  [ 2] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 3] Iterable.forEach
  [ 4] CellsGroup.run
  [ 5] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 1833929 total (0.06%), 1837 samples
  [ 0] AbstractOwnableSynchronizer.getExclusiveOwnerThread
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.signalNotFull
  [ 5] LinkedBlockingQueue.take
  [ 6] BlockingQueue.take
  [ 7] Channel.take
  [ 8] GameOfLife$$Lambda$56.0x0000000801036b70.test
  [ 9] ChannelsGrid.lambda$forEachChannel$1
  [10] ChannelsGrid$$Lambda$57.0x0000000801036da8.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 1832444 total (0.06%), 1805 samples
  [ 0] __schedule_[k]
  [ 1] schedule_[k]
  [ 2] futex_wait_queue_[k]
  [ 3] futex_wait_[k]
  [ 4] do_futex_[k]
  [ 5] __x64_sys_futex_[k]
  [ 6] do_syscall_64_[k]
  [ 7] entry_SYSCALL_64_after_hwframe_[k]
  [ 8] __futex_abstimed_wait_common
  [ 9] Unsafe.park
  [10] LockSupport.park
  [11] AbstractQueuedSynchronizer$ConditionNode.block
  [12] ForkJoinPool.unmanagedBlock
  [13] ForkJoinPool.managedBlock
  [14] AbstractQueuedSynchronizer$ConditionObject.await
  [15] LinkedBlockingQueue.take
  [16] BlockingQueue.take
  [17] Channel.take
  [18] TickPerCell.waitTick
  [19] Cell.notifyLiveness
  [20] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [21] Iterable.forEach
  [22] CellsGroup.run
  [23] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [24] ThreadPoolExecutor.runWorker
  [25] ThreadPoolExecutor$Worker.run
  [26] Thread.run

--- 1804454 total (0.06%), 1810 samples
  [ 0] AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<1335398ul, G1BarrierSet>, (AccessInternal::BarrierType)1, 1335398ul>::oop_access_barrier(oopDesc*, long, oopDesc*)
  [ 1] ObjArrayKlass::multi_allocate(int, int*, JavaThread*)
  [ 2] OptoRuntime::multianewarray2_C(Klass*, int, int, JavaThread*)
  [ 3] GameOfLife.calculateFrame
  [ 4] GameOfLife.lambda$calculateFrameBlocking$4
  [ 5] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 1746111 total (0.06%), 1749 samples
  [ 0] ReferencePipeline.map
  [ 1] Cell.calculateNextState
  [ 2] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 3] Iterable.forEach
  [ 4] CellsGroup.run
  [ 5] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 6] ThreadPoolExecutor.runWorker
  [ 7] ThreadPoolExecutor$Worker.run
  [ 8] Thread.run

--- 1732260 total (0.06%), 1733 samples
  [ 0] ReferencePipeline$3.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 1711979 total (0.06%), 1714 samples
  [ 0] PipelineHelper.<init>
  [ 1] AbstractPipeline.<init>
  [ 2] ReferencePipeline.<init>
  [ 3] ReferencePipeline$Head.<init>
  [ 4] StreamSupport.stream
  [ 5] Collection.stream
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 1637305 total (0.05%), 1637 samples
  [ 0] ReferencePipeline$4.opWrapSink
  [ 1] AbstractPipeline.wrapSink
  [ 2] AbstractPipeline.wrapAndCopyInto
  [ 3] ReduceOps$ReduceOp.evaluateSequential
  [ 4] AbstractPipeline.evaluate
  [ 5] IntPipeline.reduce
  [ 6] IntPipeline.sum
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 1594180 total (0.05%), 1586 samples
  [ 0] ArrayList.spliterator
  [ 1] Collection.stream
  [ 2] Cell.calculateNextState
  [ 3] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 1586991 total (0.05%), 1592 samples
  [ 0] Cell.calculateNextState
  [ 1] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 2] Iterable.forEach
  [ 3] CellsGroup.run
  [ 4] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 1560575 total (0.05%), 1556 samples
  [ 0] G1CardSet::occupied() const
  [ 1] G1CollectionSet::iterate(HeapRegionClosure*) const
  [ 2] G1RemSetSamplingTask::execute()
  [ 3] G1ServiceThread::run_task(G1ServiceTask*)
  [ 4] G1ServiceThread::run_service()
  [ 5] ConcurrentGCThread::run()
  [ 6] Thread::call_run()
  [ 7] thread_native_entry(Thread*)
  [ 8] start_thread

--- 1513627 total (0.05%), 1519 samples
  [ 0] AtomicInteger.getAndDecrement
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 1507621 total (0.05%), 1502 samples
  [ 0] AbstractPipeline.<init>
  [ 1] IntPipeline.<init>
  [ 2] IntPipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$4.<init>
  [ 4] ReferencePipeline.mapToInt
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 1491163 total (0.05%), 1488 samples
  [ 0] ReferencePipeline.<init>
  [ 1] ReferencePipeline$StatelessOp.<init>
  [ 2] ReferencePipeline$3.<init>
  [ 3] ReferencePipeline.map
  [ 4] Cell.calculateNextState
  [ 5] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 1488483 total (0.05%), 1490 samples
  [ 0] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 1] Iterable.forEach
  [ 2] CellsGroup.run
  [ 3] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 4] ThreadPoolExecutor.runWorker
  [ 5] ThreadPoolExecutor$Worker.run
  [ 6] Thread.run

--- 1442955 total (0.05%), 1448 samples
  [ 0] AbstractQueuedSynchronizer.signalNext
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotFull
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] GameOfLife$$Lambda$56.0x0000000801036b70.test
  [ 8] ChannelsGrid.lambda$forEachChannel$1
  [ 9] ChannelsGrid$$Lambda$57.0x0000000801036da8.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 1385918 total (0.04%), 1364 samples
  [ 0] update_load_avg_[k]
  [ 1] dequeue_entity_[k]
  [ 2] dequeue_task_fair_[k]
  [ 3] __schedule_[k]
  [ 4] schedule_[k]
  [ 5] futex_wait_queue_[k]
  [ 6] futex_wait_[k]
  [ 7] do_futex_[k]
  [ 8] __x64_sys_futex_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __futex_abstimed_wait_common
  [12] Unsafe.park
  [13] LockSupport.park
  [14] AbstractQueuedSynchronizer$ConditionNode.block
  [15] ForkJoinPool.unmanagedBlock
  [16] ForkJoinPool.managedBlock
  [17] AbstractQueuedSynchronizer$ConditionObject.await
  [18] LinkedBlockingQueue.take
  [19] BlockingQueue.take
  [20] Channel.take
  [21] TickPerCell.waitTick
  [22] Cell.notifyLiveness
  [23] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [24] Iterable.forEach
  [25] CellsGroup.run
  [26] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [27] ThreadPoolExecutor.runWorker
  [28] ThreadPoolExecutor$Worker.run
  [29] Thread.run

--- 1373523 total (0.04%), 1354 samples
  [ 0] dequeue_task_fair_[k]
  [ 1] __schedule_[k]
  [ 2] schedule_[k]
  [ 3] futex_wait_queue_[k]
  [ 4] futex_wait_[k]
  [ 5] do_futex_[k]
  [ 6] __x64_sys_futex_[k]
  [ 7] do_syscall_64_[k]
  [ 8] entry_SYSCALL_64_after_hwframe_[k]
  [ 9] __futex_abstimed_wait_common
  [10] Unsafe.park
  [11] LockSupport.park
  [12] AbstractQueuedSynchronizer$ConditionNode.block
  [13] ForkJoinPool.unmanagedBlock
  [14] ForkJoinPool.managedBlock
  [15] AbstractQueuedSynchronizer$ConditionObject.await
  [16] LinkedBlockingQueue.take
  [17] BlockingQueue.take
  [18] Channel.take
  [19] TickPerCell.waitTick
  [20] Cell.notifyLiveness
  [21] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [22] Iterable.forEach
  [23] CellsGroup.run
  [24] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [25] ThreadPoolExecutor.runWorker
  [26] ThreadPoolExecutor$Worker.run
  [27] Thread.run

--- 1362066 total (0.04%), 1364 samples
  [ 0] ReentrantLock$Sync.lockInterruptibly
  [ 1] ReentrantLock.lockInterruptibly
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 1361971 total (0.04%), 1342 samples
  [ 0] __update_load_avg_cfs_rq_[k]
  [ 1] update_load_avg_[k]
  [ 2] dequeue_entity_[k]
  [ 3] dequeue_task_fair_[k]
  [ 4] __schedule_[k]
  [ 5] schedule_[k]
  [ 6] futex_wait_queue_[k]
  [ 7] futex_wait_[k]
  [ 8] do_futex_[k]
  [ 9] __x64_sys_futex_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __futex_abstimed_wait_common
  [13] Unsafe.park
  [14] LockSupport.park
  [15] AbstractQueuedSynchronizer$ConditionNode.block
  [16] ForkJoinPool.unmanagedBlock
  [17] ForkJoinPool.managedBlock
  [18] AbstractQueuedSynchronizer$ConditionObject.await
  [19] LinkedBlockingQueue.take
  [20] BlockingQueue.take
  [21] Channel.take
  [22] TickPerCell.waitTick
  [23] Cell.notifyLiveness
  [24] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [25] Iterable.forEach
  [26] CellsGroup.run
  [27] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [28] ThreadPoolExecutor.runWorker
  [29] ThreadPoolExecutor$Worker.run
  [30] Thread.run

--- 1360797 total (0.04%), 1366 samples
  [ 0] Thread.interrupted
  [ 1] AbstractQueuedSynchronizer$ConditionObject.await
  [ 2] LinkedBlockingQueue.take
  [ 3] BlockingQueue.take
  [ 4] Channel.take
  [ 5] TickPerCell.waitTick
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 1359775 total (0.04%), 1361 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.lambda$notifyLiveness$0
  [ 4] Cell$$Lambda$53.0x0000000801036510.accept
  [ 5] ArrayList.forEach
  [ 6] Cell.notifyLiveness
  [ 7] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 1345184 total (0.04%), 1345 samples
  [ 0] AbstractPipeline.<init>
  [ 1] IntPipeline.<init>
  [ 2] IntPipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$4.<init>
  [ 4] ReferencePipeline.mapToInt
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 1342950 total (0.04%), 1345 samples
  [ 0] AbstractOwnableSynchronizer.getExclusiveOwnerThread
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.signalNotFull
  [ 5] LinkedBlockingQueue.take
  [ 6] BlockingQueue.take
  [ 7] Channel.take
  [ 8] TickPerCell.waitTick
  [ 9] Cell.notifyLiveness
  [10] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [11] Iterable.forEach
  [12] CellsGroup.run
  [13] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [14] ThreadPoolExecutor.runWorker
  [15] ThreadPoolExecutor$Worker.run
  [16] Thread.run

--- 1338050 total (0.04%), 1340 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotEmpty
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] TickPerCell.lambda$tick$0
  [ 8] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 9] ChannelsGrid.lambda$forEachChannel$0
  [10] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [11] Dimensions.forEachRowCol
  [12] ChannelsGrid.forEachChannel
  [13] TickPerCell.tick
  [14] GameOfLife.calculateFrame
  [15] GameOfLife.lambda$calculateFrameBlocking$4
  [16] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [17] ThreadPoolExecutor.runWorker
  [18] ThreadPoolExecutor$Worker.run
  [19] Thread.run

--- 1323770 total (0.04%), 1327 samples
  [ 0] ReentrantLock$Sync.lock
  [ 1] ReentrantLock.lock
  [ 2] LinkedBlockingQueue.signalNotFull
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run

--- 1312657 total (0.04%), 1296 samples
  [ 0] cpuacct_charge_[k]
  [ 1] update_curr_[k]
  [ 2] dequeue_entity_[k]
  [ 3] dequeue_task_fair_[k]
  [ 4] __schedule_[k]
  [ 5] schedule_[k]
  [ 6] futex_wait_queue_[k]
  [ 7] futex_wait_[k]
  [ 8] do_futex_[k]
  [ 9] __x64_sys_futex_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __futex_abstimed_wait_common
  [13] Unsafe.park
  [14] LockSupport.park
  [15] AbstractQueuedSynchronizer$ConditionNode.block
  [16] ForkJoinPool.unmanagedBlock
  [17] ForkJoinPool.managedBlock
  [18] AbstractQueuedSynchronizer$ConditionObject.await
  [19] LinkedBlockingQueue.take
  [20] BlockingQueue.take
  [21] Channel.take
  [22] TickPerCell.waitTick
  [23] Cell.notifyLiveness
  [24] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [25] Iterable.forEach
  [26] CellsGroup.run
  [27] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [28] ThreadPoolExecutor.runWorker
  [29] ThreadPoolExecutor$Worker.run
  [30] Thread.run

--- 1309544 total (0.04%), 1312 samples
  [ 0] ReentrantLock$Sync.lock
  [ 1] ReentrantLock.lock
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 1306219 total (0.04%), 1311 samples
  [ 0] LinkedBlockingQueue.dequeue
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 1293601 total (0.04%), 1295 samples
  [ 0] AbstractQueuedSynchronizer.setState
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.signalNotEmpty
  [ 5] LinkedBlockingQueue.put
  [ 6] BlockingQueue.put
  [ 7] Channel.put
  [ 8] TickPerCell.lambda$tick$0
  [ 9] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [10] ChannelsGrid.lambda$forEachChannel$0
  [11] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [12] Dimensions.forEachRowCol
  [13] ChannelsGrid.forEachChannel
  [14] TickPerCell.tick
  [15] GameOfLife.calculateFrame
  [16] GameOfLife.lambda$calculateFrameBlocking$4
  [17] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

--- 1286167 total (0.04%), 1271 samples
  [ 0] syscall_exit_to_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] ___pthread_cond_signal
  [ 4] Unsafe.unpark
  [ 5] LockSupport.unpark
  [ 6] AbstractQueuedSynchronizer.signalNext
  [ 7] AbstractQueuedSynchronizer.release
  [ 8] ReentrantLock.unlock
  [ 9] LinkedBlockingQueue.signalNotEmpty
  [10] LinkedBlockingQueue.put
  [11] BlockingQueue.put
  [12] Channel.put
  [13] TickPerCell.lambda$tick$0
  [14] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [15] ChannelsGrid.lambda$forEachChannel$0
  [16] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [17] Dimensions.forEachRowCol
  [18] ChannelsGrid.forEachChannel
  [19] TickPerCell.tick
  [20] GameOfLife.calculateFrame
  [21] GameOfLife.lambda$calculateFrameBlocking$4
  [22] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [23] ThreadPoolExecutor.runWorker
  [24] ThreadPoolExecutor$Worker.run
  [25] Thread.run

--- 1285243 total (0.04%), 1266 samples
  [ 0] reweight_entity_[k]
  [ 1] dequeue_entity_[k]
  [ 2] dequeue_task_fair_[k]
  [ 3] __schedule_[k]
  [ 4] schedule_[k]
  [ 5] futex_wait_queue_[k]
  [ 6] futex_wait_[k]
  [ 7] do_futex_[k]
  [ 8] __x64_sys_futex_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __futex_abstimed_wait_common
  [12] Unsafe.park
  [13] LockSupport.park
  [14] AbstractQueuedSynchronizer$ConditionNode.block
  [15] ForkJoinPool.unmanagedBlock
  [16] ForkJoinPool.managedBlock
  [17] AbstractQueuedSynchronizer$ConditionObject.await
  [18] LinkedBlockingQueue.take
  [19] BlockingQueue.take
  [20] Channel.take
  [21] TickPerCell.waitTick
  [22] Cell.notifyLiveness
  [23] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [24] Iterable.forEach
  [25] CellsGroup.run
  [26] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [27] ThreadPoolExecutor.runWorker
  [28] ThreadPoolExecutor$Worker.run
  [29] Thread.run

--- 1277951 total (0.04%), 1277 samples
  [ 0] PipelineHelper.<init>
  [ 1] AbstractPipeline.<init>
  [ 2] ReferencePipeline.<init>
  [ 3] ReferencePipeline$StatelessOp.<init>
  [ 4] ReferencePipeline$3.<init>
  [ 5] ReferencePipeline.map
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 1268414 total (0.04%), 1269 samples
  [ 0] Unsafe.park
  [ 1] LockSupport.park
  [ 2] AbstractQueuedSynchronizer$ConditionNode.block
  [ 3] ForkJoinPool.unmanagedBlock
  [ 4] ForkJoinPool.managedBlock
  [ 5] AbstractQueuedSynchronizer$ConditionObject.await
  [ 6] LinkedBlockingQueue.take
  [ 7] BlockingQueue.take
  [ 8] Channel.take
  [ 9] TickPerCell.waitTick
  [10] Cell.notifyLiveness
  [11] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [12] Iterable.forEach
  [13] CellsGroup.run
  [14] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 1267391 total (0.04%), 1271 samples
  [ 0] AbstractQueuedSynchronizer.getState
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.put
  [ 5] BlockingQueue.put
  [ 6] Channel.put
  [ 7] Cell.calculateNextState
  [ 8] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 9] Iterable.forEach
  [10] CellsGroup.run
  [11] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 1251936 total (0.04%), 1254 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] TickPerCell.lambda$tick$0
  [ 4] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 5] ChannelsGrid.lambda$forEachChannel$0
  [ 6] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] TickPerCell.tick
  [10] GameOfLife.calculateFrame
  [11] GameOfLife.lambda$calculateFrameBlocking$4
  [12] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [13] ThreadPoolExecutor.runWorker
  [14] ThreadPoolExecutor$Worker.run
  [15] Thread.run

--- 1231529 total (0.04%), 1229 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$3.<init>
  [ 4] ReferencePipeline.map
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 1214666 total (0.04%), 1219 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.signalNotFull
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [18] Iterable.forEach
  [19] CellsGroup.run
  [20] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [21] ThreadPoolExecutor.runWorker
  [22] ThreadPoolExecutor$Worker.run
  [23] Thread.run

--- 1194129 total (0.04%), 1197 samples
  [ 0] ObjArrayKlass::multi_allocate(int, int*, JavaThread*)
  [ 1] OptoRuntime::multianewarray2_C(Klass*, int, int, JavaThread*)
  [ 2] GameOfLife.calculateFrame
  [ 3] GameOfLife.lambda$calculateFrameBlocking$4
  [ 4] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [ 5] ThreadPoolExecutor.runWorker
  [ 6] ThreadPoolExecutor$Worker.run
  [ 7] Thread.run

--- 1190299 total (0.04%), 1174 samples
  [ 0] __memset_avx2_unaligned_erms
  [ 1] MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
  [ 2] MemAllocator::allocate() const
  [ 3] InstanceKlass::allocate_instance(JavaThread*)
  [ 4] OptoRuntime::new_instance_C(Klass*, JavaThread*)
  [ 5] ReduceOps$5ReducingSink.get
  [ 6] ReduceOps$5ReducingSink.get
  [ 7] ReduceOps$ReduceOp.evaluateSequential
  [ 8] AbstractPipeline.evaluate
  [ 9] IntPipeline.reduce
  [10] IntPipeline.sum
  [11] Cell.calculateNextState
  [12] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [13] Iterable.forEach
  [14] CellsGroup.run
  [15] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 1179379 total (0.04%), 1183 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 1178535 total (0.04%), 1160 samples
  [ 0] __update_load_avg_se_[k]
  [ 1] update_load_avg_[k]
  [ 2] dequeue_entity_[k]
  [ 3] dequeue_task_fair_[k]
  [ 4] __schedule_[k]
  [ 5] schedule_[k]
  [ 6] futex_wait_queue_[k]
  [ 7] futex_wait_[k]
  [ 8] do_futex_[k]
  [ 9] __x64_sys_futex_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] __futex_abstimed_wait_common
  [13] Unsafe.park
  [14] LockSupport.park
  [15] AbstractQueuedSynchronizer$ConditionNode.block
  [16] ForkJoinPool.unmanagedBlock
  [17] ForkJoinPool.managedBlock
  [18] AbstractQueuedSynchronizer$ConditionObject.await
  [19] LinkedBlockingQueue.take
  [20] BlockingQueue.take
  [21] Channel.take
  [22] TickPerCell.waitTick
  [23] Cell.notifyLiveness
  [24] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [25] Iterable.forEach
  [26] CellsGroup.run
  [27] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [28] ThreadPoolExecutor.runWorker
  [29] ThreadPoolExecutor$Worker.run
  [30] Thread.run

--- 1171093 total (0.04%), 1176 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run

--- 1165823 total (0.04%), 1167 samples
  [ 0] Channel.put
  [ 1] TickPerCell.lambda$tick$0
  [ 2] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 3] ChannelsGrid.lambda$forEachChannel$0
  [ 4] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 5] Dimensions.forEachRowCol
  [ 6] ChannelsGrid.forEachChannel
  [ 7] TickPerCell.tick
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$4
  [10] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 1145287 total (0.04%), 1147 samples
  [ 0] Channel.put
  [ 1] Cell.lambda$notifyLiveness$0
  [ 2] Cell$$Lambda$53.0x0000000801036510.accept
  [ 3] ArrayList.forEach
  [ 4] Cell.notifyLiveness
  [ 5] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 6] Iterable.forEach
  [ 7] CellsGroup.run
  [ 8] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 9] ThreadPoolExecutor.runWorker
  [10] ThreadPoolExecutor$Worker.run
  [11] Thread.run

--- 1144215 total (0.04%), 1149 samples
  [ 0] AbstractQueuedSynchronizer.setState
  [ 1] ReentrantLock$Sync.tryRelease
  [ 2] AbstractQueuedSynchronizer.release
  [ 3] ReentrantLock.unlock
  [ 4] LinkedBlockingQueue.take
  [ 5] BlockingQueue.take
  [ 6] Channel.take
  [ 7] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 8] ReferencePipeline$3$1.accept
  [ 9] ArrayList$ArrayListSpliterator.forEachRemaining
  [10] AbstractPipeline.copyInto
  [11] AbstractPipeline.wrapAndCopyInto
  [12] ReduceOps$ReduceOp.evaluateSequential
  [13] AbstractPipeline.evaluate
  [14] IntPipeline.reduce
  [15] IntPipeline.sum
  [16] Cell.calculateNextState
  [17] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [18] Iterable.forEach
  [19] CellsGroup.run
  [20] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [21] ThreadPoolExecutor.runWorker
  [22] ThreadPoolExecutor$Worker.run
  [23] Thread.run

--- 1138771 total (0.04%), 1140 samples
  [ 0] Cell.lambda$notifyLiveness$0
  [ 1] Cell$$Lambda$53.0x0000000801036510.accept
  [ 2] ArrayList.forEach
  [ 3] Cell.notifyLiveness
  [ 4] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 1126757 total (0.04%), 1112 samples
  [ 0] update_cfs_group_[k]
  [ 1] dequeue_entity_[k]
  [ 2] dequeue_task_fair_[k]
  [ 3] __schedule_[k]
  [ 4] schedule_[k]
  [ 5] futex_wait_queue_[k]
  [ 6] futex_wait_[k]
  [ 7] do_futex_[k]
  [ 8] __x64_sys_futex_[k]
  [ 9] do_syscall_64_[k]
  [10] entry_SYSCALL_64_after_hwframe_[k]
  [11] __futex_abstimed_wait_common
  [12] Unsafe.park
  [13] LockSupport.park
  [14] AbstractQueuedSynchronizer$ConditionNode.block
  [15] ForkJoinPool.unmanagedBlock
  [16] ForkJoinPool.managedBlock
  [17] AbstractQueuedSynchronizer$ConditionObject.await
  [18] LinkedBlockingQueue.take
  [19] BlockingQueue.take
  [20] Channel.take
  [21] Cell$$Lambda$64.0x0000000801037a60.apply
  [22] ReferencePipeline$3$1.accept
  [23] ArrayList$ArrayListSpliterator.forEachRemaining
  [24] AbstractPipeline.copyInto
  [25] AbstractPipeline.wrapAndCopyInto
  [26] ReduceOps$ReduceOp.evaluateSequential
  [27] AbstractPipeline.evaluate
  [28] IntPipeline.reduce
  [29] IntPipeline.sum
  [30] Cell.calculateNextState
  [31] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [32] Iterable.forEach
  [33] CellsGroup.run
  [34] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [35] ThreadPoolExecutor.runWorker
  [36] ThreadPoolExecutor$Worker.run
  [37] Thread.run

--- 1126463 total (0.04%), 1120 samples
  [ 0] AbstractPipeline.<init>
  [ 1] ReferencePipeline.<init>
  [ 2] ReferencePipeline$StatelessOp.<init>
  [ 3] ReferencePipeline$3.<init>
  [ 4] ReferencePipeline.map
  [ 5] Cell.calculateNextState
  [ 6] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 1102501 total (0.04%), 1106 samples
  [ 0] LinkedBlockingQueue.put
  [ 1] BlockingQueue.put
  [ 2] Channel.put
  [ 3] Cell.calculateNextState
  [ 4] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 5] Iterable.forEach
  [ 6] CellsGroup.run
  [ 7] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 8] ThreadPoolExecutor.runWorker
  [ 9] ThreadPoolExecutor$Worker.run
  [10] Thread.run

--- 1095080 total (0.04%), 1100 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.take
  [ 4] BlockingQueue.take
  [ 5] Channel.take
  [ 6] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 7] ReferencePipeline$3$1.accept
  [ 8] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 9] AbstractPipeline.copyInto
  [10] AbstractPipeline.wrapAndCopyInto
  [11] ReduceOps$ReduceOp.evaluateSequential
  [12] AbstractPipeline.evaluate
  [13] IntPipeline.reduce
  [14] IntPipeline.sum
  [15] Cell.calculateNextState
  [16] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [17] Iterable.forEach
  [18] CellsGroup.run
  [19] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [20] ThreadPoolExecutor.runWorker
  [21] ThreadPoolExecutor$Worker.run
  [22] Thread.run

--- 1087793 total (0.04%), 1089 samples
  [ 0] Cell$$Lambda$53.0x0000000801036510.accept
  [ 1] ArrayList.forEach
  [ 2] Cell.notifyLiveness
  [ 3] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 4] Iterable.forEach
  [ 5] CellsGroup.run
  [ 6] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [ 7] ThreadPoolExecutor.runWorker
  [ 8] ThreadPoolExecutor$Worker.run
  [ 9] Thread.run

--- 1060306 total (0.03%), 1061 samples
  [ 0] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 1] LinkedBlockingQueue.signalNotEmpty
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 1059603 total (0.03%), 1062 samples
  [ 0] LinkedBlockingQueue.take
  [ 1] BlockingQueue.take
  [ 2] Channel.take
  [ 3] GameOfLife$$Lambda$56.0x0000000801036b70.test
  [ 4] ChannelsGrid.lambda$forEachChannel$1
  [ 5] ChannelsGrid$$Lambda$57.0x0000000801036da8.accept
  [ 6] Dimensions.forEachRowCol
  [ 7] ChannelsGrid.forEachChannel
  [ 8] GameOfLife.calculateFrame
  [ 9] GameOfLife.lambda$calculateFrameBlocking$4
  [10] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 1059255 total (0.03%), 1031 samples
  [ 0] syscall_exit_to_user_mode_[k]
  [ 1] do_syscall_64_[k]
  [ 2] entry_SYSCALL_64_after_hwframe_[k]
  [ 3] __futex_abstimed_wait_common
  [ 4] Unsafe.park
  [ 5] LockSupport.park
  [ 6] AbstractQueuedSynchronizer$ConditionNode.block
  [ 7] ForkJoinPool.unmanagedBlock
  [ 8] ForkJoinPool.managedBlock
  [ 9] AbstractQueuedSynchronizer$ConditionObject.await
  [10] LinkedBlockingQueue.take
  [11] BlockingQueue.take
  [12] Channel.take
  [13] TickPerCell.waitTick
  [14] Cell.notifyLiveness
  [15] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [16] Iterable.forEach
  [17] CellsGroup.run
  [18] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [19] ThreadPoolExecutor.runWorker
  [20] ThreadPoolExecutor$Worker.run
  [21] Thread.run

--- 1015063 total (0.03%), 1018 samples
  [ 0] ReentrantLock$Sync.tryRelease
  [ 1] AbstractQueuedSynchronizer.release
  [ 2] ReentrantLock.unlock
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] Cell.calculateNextState
  [ 7] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [ 8] Iterable.forEach
  [ 9] CellsGroup.run
  [10] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [11] ThreadPoolExecutor.runWorker
  [12] ThreadPoolExecutor$Worker.run
  [13] Thread.run

--- 1009731 total (0.03%), 1010 samples
  [ 0] ReentrantLock.lockInterruptibly
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] GameOfLife$$Lambda$56.0x0000000801036b70.test
  [ 5] ChannelsGrid.lambda$forEachChannel$1
  [ 6] ChannelsGrid$$Lambda$57.0x0000000801036da8.accept
  [ 7] Dimensions.forEachRowCol
  [ 8] ChannelsGrid.forEachChannel
  [ 9] GameOfLife.calculateFrame
  [10] GameOfLife.lambda$calculateFrameBlocking$4
  [11] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [12] ThreadPoolExecutor.runWorker
  [13] ThreadPoolExecutor$Worker.run
  [14] Thread.run

--- 1007128 total (0.03%), 998 samples
  [ 0] update_load_avg_[k]
  [ 1] enqueue_entity_[k]
  [ 2] enqueue_task_fair_[k]
  [ 3] enqueue_task_[k]
  [ 4] ttwu_do_activate_[k]
  [ 5] try_to_wake_up_[k]
  [ 6] wake_up_q_[k]
  [ 7] futex_wake_[k]
  [ 8] do_futex_[k]
  [ 9] __x64_sys_futex_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] ___pthread_cond_signal
  [13] Unsafe.unpark
  [14] LockSupport.unpark
  [15] AbstractQueuedSynchronizer.signalNext
  [16] AbstractQueuedSynchronizer.release
  [17] ReentrantLock.unlock
  [18] LinkedBlockingQueue.signalNotEmpty
  [19] LinkedBlockingQueue.put
  [20] BlockingQueue.put
  [21] Channel.put
  [22] TickPerCell.lambda$tick$0
  [23] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [24] ChannelsGrid.lambda$forEachChannel$0
  [25] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [26] Dimensions.forEachRowCol
  [27] ChannelsGrid.forEachChannel
  [28] TickPerCell.tick
  [29] GameOfLife.calculateFrame
  [30] GameOfLife.lambda$calculateFrameBlocking$4
  [31] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [32] ThreadPoolExecutor.runWorker
  [33] ThreadPoolExecutor$Worker.run
  [34] Thread.run

--- 1005743 total (0.03%), 1008 samples
  [ 0] ReentrantLock$Sync.isHeldExclusively
  [ 1] AbstractQueuedSynchronizer$ConditionObject.signal
  [ 2] LinkedBlockingQueue.signalNotEmpty
  [ 3] LinkedBlockingQueue.put
  [ 4] BlockingQueue.put
  [ 5] Channel.put
  [ 6] TickPerCell.lambda$tick$0
  [ 7] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 8] ChannelsGrid.lambda$forEachChannel$0
  [ 9] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [10] Dimensions.forEachRowCol
  [11] ChannelsGrid.forEachChannel
  [12] TickPerCell.tick
  [13] GameOfLife.calculateFrame
  [14] GameOfLife.lambda$calculateFrameBlocking$4
  [15] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [16] ThreadPoolExecutor.runWorker
  [17] ThreadPoolExecutor$Worker.run
  [18] Thread.run

--- 1002009 total (0.03%), 1004 samples
  [ 0] BlockingQueue.put
  [ 1] Channel.put
  [ 2] Cell.lambda$notifyLiveness$0
  [ 3] Cell$$Lambda$53.0x0000000801036510.accept
  [ 4] ArrayList.forEach
  [ 5] Cell.notifyLiveness
  [ 6] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [ 7] Iterable.forEach
  [ 8] CellsGroup.run
  [ 9] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [10] ThreadPoolExecutor.runWorker
  [11] ThreadPoolExecutor$Worker.run
  [12] Thread.run

--- 992117 total (0.03%), 978 samples
  [ 0] dequeue_entity_[k]
  [ 1] dequeue_task_fair_[k]
  [ 2] __schedule_[k]
  [ 3] schedule_[k]
  [ 4] futex_wait_queue_[k]
  [ 5] futex_wait_[k]
  [ 6] do_futex_[k]
  [ 7] __x64_sys_futex_[k]
  [ 8] do_syscall_64_[k]
  [ 9] entry_SYSCALL_64_after_hwframe_[k]
  [10] __futex_abstimed_wait_common
  [11] Unsafe.park
  [12] LockSupport.park
  [13] AbstractQueuedSynchronizer$ConditionNode.block
  [14] ForkJoinPool.unmanagedBlock
  [15] ForkJoinPool.managedBlock
  [16] AbstractQueuedSynchronizer$ConditionObject.await
  [17] LinkedBlockingQueue.take
  [18] BlockingQueue.take
  [19] Channel.take
  [20] TickPerCell.waitTick
  [21] Cell.notifyLiveness
  [22] CellsGroup$$Lambda$46.0x0000000801035690.accept
  [23] Iterable.forEach
  [24] CellsGroup.run
  [25] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [26] ThreadPoolExecutor.runWorker
  [27] ThreadPoolExecutor$Worker.run
  [28] Thread.run

--- 986442 total (0.03%), 975 samples
  [ 0] reweight_entity_[k]
  [ 1] enqueue_entity_[k]
  [ 2] enqueue_task_fair_[k]
  [ 3] enqueue_task_[k]
  [ 4] ttwu_do_activate_[k]
  [ 5] try_to_wake_up_[k]
  [ 6] wake_up_q_[k]
  [ 7] futex_wake_[k]
  [ 8] do_futex_[k]
  [ 9] __x64_sys_futex_[k]
  [10] do_syscall_64_[k]
  [11] entry_SYSCALL_64_after_hwframe_[k]
  [12] ___pthread_cond_signal
  [13] Unsafe.unpark
  [14] LockSupport.unpark
  [15] AbstractQueuedSynchronizer.signalNext
  [16] AbstractQueuedSynchronizer.release
  [17] ReentrantLock.unlock
  [18] LinkedBlockingQueue.signalNotEmpty
  [19] LinkedBlockingQueue.put
  [20] BlockingQueue.put
  [21] Channel.put
  [22] TickPerCell.lambda$tick$0
  [23] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [24] ChannelsGrid.lambda$forEachChannel$0
  [25] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [26] Dimensions.forEachRowCol
  [27] ChannelsGrid.forEachChannel
  [28] TickPerCell.tick
  [29] GameOfLife.calculateFrame
  [30] GameOfLife.lambda$calculateFrameBlocking$4
  [31] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [32] ThreadPoolExecutor.runWorker
  [33] ThreadPoolExecutor$Worker.run
  [34] Thread.run

--- 978924 total (0.03%), 981 samples
  [ 0] ReentrantLock.lock
  [ 1] LinkedBlockingQueue.signalNotEmpty
  [ 2] LinkedBlockingQueue.put
  [ 3] BlockingQueue.put
  [ 4] Channel.put
  [ 5] TickPerCell.lambda$tick$0
  [ 6] TickPerCell$$Lambda$51.0x00000008010360d8.accept
  [ 7] ChannelsGrid.lambda$forEachChannel$0
  [ 8] ChannelsGrid$$Lambda$52.0x00000008010362f0.accept
  [ 9] Dimensions.forEachRowCol
  [10] ChannelsGrid.forEachChannel
  [11] TickPerCell.tick
  [12] GameOfLife.calculateFrame
  [13] GameOfLife.lambda$calculateFrameBlocking$4
  [14] GameOfLife$$Lambda$50.0x0000000801035ec8.run
  [15] ThreadPoolExecutor.runWorker
  [16] ThreadPoolExecutor$Worker.run
  [17] Thread.run

--- 954072 total (0.03%), 958 samples
  [ 0] ReentrantLock.unlock
  [ 1] LinkedBlockingQueue.take
  [ 2] BlockingQueue.take
  [ 3] Channel.take
  [ 4] Cell$$Lambda$64.0x0000000801037a60.apply
  [ 5] ReferencePipeline$3$1.accept
  [ 6] ArrayList$ArrayListSpliterator.forEachRemaining
  [ 7] AbstractPipeline.copyInto
  [ 8] AbstractPipeline.wrapAndCopyInto
  [ 9] ReduceOps$ReduceOp.evaluateSequential
  [10] AbstractPipeline.evaluate
  [11] IntPipeline.reduce
  [12] IntPipeline.sum
  [13] Cell.calculateNextState
  [14] CellsGroup$$Lambda$58.0x0000000801036fc8.accept
  [15] Iterable.forEach
  [16] CellsGroup.run
  [17] ThreadPerCoreGameOfLife$$Lambda$45.0x0000000801035268.run
  [18] ThreadPoolExecutor.runWorker
  [19] ThreadPoolExecutor$Worker.run
  [20] Thread.run

       total  percent  samples  top
  ----------  -------  -------  ---
   677931415   21.84%   677276  ReduceOps$5ReducingSink.get
   472075499   15.21%   473029  AbstractQueuedSynchronizer.compareAndSetState
   290754838    9.37%   291390  AbstractQueuedSynchronizer.release
   189541489    6.11%   189838  LinkedBlockingQueue.put
   109091424    3.51%   109248  LinkedBlockingQueue.enqueue
   102421878    3.30%   102713  LinkedBlockingQueue.take
   100165053    3.23%   100356  Thread.interrupted
    95043202    3.06%    94807  AbstractPipeline.<init>
    84850795    2.73%    84950  Thread.getAndClearInterrupt
    68307390    2.20%    68398  Cell.lambda$notifyLiveness$0
    60885167    1.96%    60750  StreamOpFlag.fromCharacteristics
    60723011    1.96%    60745  Sink$ChainedReference.<init>
    52438647    1.69%    52459  ReferencePipeline$3.opWrapSink
    49092761    1.58%    49052  vtable stub
    47126415    1.52%    47208  Channel.put
    43459319    1.40%    43425  ReferencePipeline$4.opWrapSink
    42959401    1.38%    43071  LinkedBlockingQueue.dequeue
    32841003    1.06%    32878  AbstractQueuedSynchronizer.signalNext
    32775457    1.06%    32850  AbstractOwnableSynchronizer.getExclusiveOwnerThread
    27860662    0.90%    27898  Sink$ChainedReference.begin
    21699516    0.70%    21726  AtomicInteger.getAndIncrement
    19952397    0.64%    19970  Dimensions.forEachRowCol
    18114730    0.58%    18154  ReentrantLock$Sync.lock
    15553511    0.50%    15590  ReentrantLock$Sync.tryRelease
    14071604    0.45%    14095  ReentrantLock$Sync.lockInterruptibly
    13990574    0.45%    13924  StreamSupport.stream
    12920419    0.42%    12939  ArrayList$ArrayListSpliterator.<init>
    11655053    0.38%    11679  AbstractQueuedSynchronizer.setState
    11178864    0.36%    11204  AbstractQueuedSynchronizer$ConditionObject.signal
     8747617    0.28%     8769  LinkedBlockingQueue.signalNotEmpty
     7747664    0.25%     7761  Cell.calculateNextState
     7683427    0.25%     7576  psi_group_change_[k]
     6796023    0.22%     6809  ReentrantLock.lockInterruptibly
     6437613    0.21%     6327  __update_load_avg_cfs_rq_[k]
     6370869    0.21%     6282  update_cfs_group_[k]
     6357319    0.20%     6373  ReentrantLock$Sync.isHeldExclusively
     6203678    0.20%     6200  AbstractPipeline.wrapSink
     5543936    0.18%     5427  update_blocked_averages_[k]
     5309550    0.17%     5271  __memset_avx2_unaligned_erms
     5269933    0.17%     5281  ReentrantLock.lock
     4934811    0.16%     4852  syscall_exit_to_user_mode_[k]
     4897078    0.16%     4906  AbstractQueuedSynchronizer.getState
     4691317    0.15%     4699  AtomicInteger.get
     4623845    0.15%     4562  update_curr_[k]
     4287196    0.14%     4294  AbstractOwnableSynchronizer.setExclusiveOwnerThread
     4168916    0.13%     4114  update_load_avg_[k]
     3874955    0.12%     3824  reweight_entity_[k]
     3725943    0.12%     3675  __update_load_avg_se_[k]
     3597196    0.12%     3556  enqueue_entity_[k]
     3389927    0.11%     3336  __entry_text_start_[k]
     3023488    0.10%     3031  LinkedBlockingQueue.signalNotFull
     3021562    0.10%     2981  __schedule_[k]
     2989930    0.10%     2991  PipelineHelper.<init>
     2895971    0.09%     2902  AbstractQueuedSynchronizer.acquire
     2864432    0.09%     2868  Unsafe_Park
     2826091    0.09%     2833  Unsafe.park
     2756850    0.09%     2725  enqueue_task_fair_[k]
     2688793    0.09%     2694  StreamOpFlag.getMask
     2542039    0.08%     2543  ArrayList.forEach
     2459676    0.08%     2465  ReferencePipeline.map
     2354538    0.08%     2361  AtomicInteger.getAndDecrement
     2319004    0.07%     2321  Iterable.forEach
     2170251    0.07%     2173  ___pthread_cond_wait
     2164603    0.07%     2167  CellsGroup$$Lambda$58.0x0000000801036fc8.accept
     2164524    0.07%     2139  cpuacct_charge_[k]
     2100980    0.07%     2075  dequeue_task_fair_[k]
     2032235    0.07%     2021  G1CardSet::occupied() const
     2024551    0.07%     2020  Parker::park(bool, long)
     1996779    0.06%     2003  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<1335398ul, G1BarrierSet>, (AccessInternal::BarrierType)1, 1335398ul>::oop_access_barrier(oopDesc*, long, oopDesc*)
     1913205    0.06%     1919  ReentrantLock.unlock
     1912753    0.06%     1879  check_preemption_disabled_[k]
     1874645    0.06%     1847  _raw_spin_lock_[k]
     1821426    0.06%     1772  syscall_return_via_sysret_[k]
     1654564    0.05%     1633  dequeue_entity_[k]
     1613288    0.05%     1591  update_rq_clock_[k]
     1594180    0.05%     1586  ArrayList.spliterator
     1531528    0.05%     1538  AbstractQueuedSynchronizer$ConditionNode.isReleasable
     1504136    0.05%     1501  ReferencePipeline.<init>
     1460773    0.05%     1463  __tls_get_addr
     1383623    0.04%     1387  ObjArrayKlass::multi_allocate(int, int*, JavaThread*)
     1378813    0.04%     1359  native_sched_clock_[k]
     1353029    0.04%     1356  MemAllocator::allocate() const
     1349630    0.04%     1355  pthread_mutex_trylock@@GLIBC_2.34
     1313024    0.04%     1319  Unsafe.getAndBitwiseAndInt
     1298149    0.04%     1269  rb_next_[k]
     1278837    0.04%     1280  AbstractQueuedSynchronizer$ConditionObject.enableWait
     1272711    0.04%     1273  __GI___pthread_mutex_lock
     1265764    0.04%     1243  rcu_sched_clock_irq_[k]
     1263892    0.04%     1216  fpregs_restore_userregs_[k]
     1259016    0.04%     1262  AbstractQueuedSynchronizer.enqueue
     1241556    0.04%     1233  __condvar_dec_grefs
     1203284    0.04%     1206  BlockingQueue.put
     1183654    0.04%     1188  Sink$ChainedReference.end
     1158061    0.04%     1141  futex_wake_[k]
     1147301    0.04%     1149  AbstractQueuedSynchronizer$ConditionObject.doSignal
     1133788    0.04%     1143  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<286822ul, G1BarrierSet>, (AccessInternal::BarrierType)3, 286822ul>::oop_access_barrier(oopDesc*, long)
     1125219    0.04%     1127  ThreadsListHandle::ThreadsListHandle(Thread*)
     1105176    0.04%     1091  __calc_delta_[k]
     1095684    0.04%     1098  G1ParScanThreadState::trim_queue_to_threshold(unsigned int)
     1087793    0.04%     1089  Cell$$Lambda$53.0x0000000801036510.accept
     1061754    0.03%     1050  futex_wake_mark_[k]
     1041119    0.03%     1026  update_min_vruntime_[k]
     1031897    0.03%     1009  __hrtimer_run_queues_[k]
     1016137    0.03%      983  restore_fpregs_from_fpstate_[k]
     1014762    0.03%     1004  psi_task_change_[k]
     1000682    0.03%      994  select_task_rq_fair_[k]
      989723    0.03%      991  Integer.valueOf
      986830    0.03%      974  G1Policy::preventive_collection_required(unsigned int)
      985319    0.03%      969  resched_curr_[k]
      950123    0.03%      952  AbstractQueuedSynchronizer$ConditionObject.canReacquire
      941575    0.03%      948  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<548964ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 548964ul>::oop_access_barrier(void*)
      931362    0.03%      923  G1Analytics::predict_scan_card_num(unsigned long, bool) const
      925681    0.03%      925  StreamOpFlag.combineOpFlags
      914654    0.03%      903  update_irq_load_avg_[k]
      903903    0.03%      890  preempt_count_add_[k]
      903816    0.03%      891  futex_q_lock_[k]
      893881    0.03%      873  error_entry_[k]
      888200    0.03%      880  HeapRegionManager::allocate_free_region(HeapRegionType, unsigned int)
      885539    0.03%      886  Unsafe_Unpark
      881920    0.03%      865  G1Allocator::unsafe_max_tlab_alloc()
      877123    0.03%      868  __get_user_nocheck_4_[k]
      876547    0.03%      858  timerqueue_add_[k]
      847793    0.03%      845  ReferencePipeline$4.<init>
      817255    0.03%      804  iterate_groups_[k]
      806720    0.03%      806  ReferencePipeline.mapToInt
      801096    0.03%      800  G1FromCardCache::clear(unsigned int)
      792550    0.03%      793  ObjArrayKlass::allocate(int, JavaThread*)
      788007    0.03%      787  Object.<init>
      778704    0.03%      780  __pthread_mutex_unlock_usercnt
      772394    0.02%      755  _raw_spin_lock_irqsave_[k]
      766240    0.02%      754  __perf_event_task_sched_out_[k]
      762690    0.02%      764  Cell.notifyLiveness
      759019    0.02%      745  futex_wait_[k]
      755579    0.02%      742  preempt_count_sub_[k]
      748812    0.02%      734  __softirqentry_text_start_[k]
      742247    0.02%      703  __get_user_8_[k]
      740192    0.02%      753  java_lang_Thread::set_thread_status(oopDesc*, JavaThreadStatus)
      736210    0.02%      738  TypeArrayKlass::multi_allocate(int, int*, JavaThread*)
      729681    0.02%      723  G1CollectedHeap::allocate_new_tlab(unsigned long, unsigned long, unsigned long*)
      714434    0.02%      715  AbsSeq::dsd() const
      712764    0.02%      702  newidle_balance_[k]
      702490    0.02%      694  __cgroup_account_cputime_[k]
      688506    0.02%      684  OptoRuntime::new_instance_C(Klass*, JavaThread*)
      672250    0.02%      675  ___pthread_cond_signal
      660723    0.02%      651  update_sd_lb_stats.constprop.0_[k]
      654788    0.02%      641  AbsSeq::davg() const
      649835    0.02%      652  __GI___pthread_getspecific
      643789    0.02%      644  AbstractQueuedSynchronizer.casTail
      639712    0.02%      642  ObjArrayAllocator::initialize(HeapWordImpl**) const
      638247    0.02%      630  try_to_wake_up_[k]
      637819    0.02%      626  timekeeping_advance_[k]
      636422    0.02%      633  MemAllocator::allocate_inside_tlab_slow(MemAllocator::Allocation&) const
      632135    0.02%      595  exit_to_user_mode_prepare_[k]
      624682    0.02%      614  psi_task_switch_[k]
      621725    0.02%      615  HSpaceCounters::update_used(unsigned long)
      616384    0.02%      618  native_write_msr_[k]
      615896    0.02%      619  LockSupport.unpark
      599626    0.02%      591  task_tick_fair_[k]
      588294    0.02%      586  JavaThread::threadObj() const
      580308    0.02%      574  G1CollectedHeap::attempt_allocation_slow(unsigned long)
      564704    0.02%      566  Klass::check_array_allocation_length(int, int, JavaThread*)
      561816    0.02%      560  ClassLoaderData::holder() const
      558376    0.02%      559  FreeListAllocator::reset()
      556945    0.02%      552  available_idle_cpu_[k]
      545948    0.02%      546  ThreadsListHandle::cv_internal_thread_to_JavaThread(_jobject*, JavaThread**, oopDesc**)
      545430    0.02%      546  MemAllocator::Allocation::notify_allocation_jvmti_sampler()
      541582    0.02%      541  __vdso_clock_gettime
      537699    0.02%      533  G1CollectedHeap::fill_with_dummy_object(HeapWordImpl**, HeapWordImpl**, bool)
      516851    0.02%      515  ReferencePipeline$StatelessOp.<init>
      514113    0.02%      514  ChannelsGrid$$Lambda$57.0x0000000801036da8.accept
      509875    0.02%      503  __rcu_read_lock_[k]
      504142    0.02%      493  sync_regs_[k]
      490123    0.02%      481  account_user_time_[k]
      488637    0.02%      489  Boolean.booleanValue
      485458    0.02%      485  G1Analytics::predict_card_merge_time_ms(unsigned long, bool) const
      465703    0.02%      463  G1YoungRemSetSamplingClosure::do_heap_region(HeapRegion*)
      455411    0.01%      450  HeapRegion::fill_with_dummy_object(HeapWordImpl**, unsigned long, bool)
      446338    0.01%      439  rebalance_domains_[k]
      446034    0.01%      438  native_read_msr_[k]
      441352    0.01%      436  G1MonitoringSupport::update_eden_size()
      438155    0.01%      435  GameOfLife.calculateFrameBlocking
      435004    0.01%      433  ThreadLocalStorage::is_initialized()
      432389    0.01%      429  G1CollectedHeap::unsafe_max_tlab_alloc(Thread*) const
      424921    0.01%      417  trigger_load_balance_[k]
      422607    0.01%      422  ObjectSampler::is_created()
      417718    0.01%      409  nohz_balance_exit_idle_[k]
      414576    0.01%      416  java_lang_Thread::interrupted(oopDesc*)
      414496    0.01%      409  G1CollectionSet::add_eden_region(HeapRegion*)
      408510    0.01%      408  GameOfLife.endOfFrame
      398620    0.01%      398  JfrObjectAllocationSample::send_event(Klass const*, unsigned long, bool, Thread*)
      397482    0.01%      391  hrtimer_active_[k]
      395437    0.01%      395  __clock_gettime
      391975    0.01%      387  check_preempt_curr_[k]
      391663    0.01%      389  MutatorAllocRegion::retire(bool)
      391567    0.01%      393  BlockingQueue.take
      391538    0.01%      386  entry_SYSCALL_64_safe_stack_[k]
      385681    0.01%      378  rb_erase_[k]
      385271    0.01%      379  futex_hash_[k]
      385154    0.01%      387  GameOfLifeBenchmark_benchmark_jmhTest.benchmark_thrpt_jmhStub
      378918    0.01%      382  AccessInternal::PostRuntimeDispatch<G1BarrierSet::AccessBarrier<544868ul, G1BarrierSet>, (AccessInternal::BarrierType)2, 544868ul>::oop_access_barrier(void*)
